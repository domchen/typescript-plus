=== tests/cases/compiler/noImplicitAnyFunctions.ts ===
declare function f1();
>f1 : Symbol(f1, Decl(noImplicitAnyFunctions.ts, 0, 0))

declare function f2(): any;
>f2 : Symbol(f2, Decl(noImplicitAnyFunctions.ts, 0, 22))

function f3(x) {
>f3 : Symbol(f3, Decl(noImplicitAnyFunctions.ts, 2, 27))
>x : Symbol(x, Decl(noImplicitAnyFunctions.ts, 4, 12))
}

function f4(x: any) {
>f4 : Symbol(f4, Decl(noImplicitAnyFunctions.ts, 5, 1))
>x : Symbol(x, Decl(noImplicitAnyFunctions.ts, 7, 12))

    return x;
>x : Symbol(x, Decl(noImplicitAnyFunctions.ts, 7, 12))
}

function f5(x: any): any {
>f5 : Symbol(f5, Decl(noImplicitAnyFunctions.ts, 9, 1))
>x : Symbol(x, Decl(noImplicitAnyFunctions.ts, 11, 12))

    return x;
>x : Symbol(x, Decl(noImplicitAnyFunctions.ts, 11, 12))
}

function f6(x: string, y: number);
>f6 : Symbol(f6, Decl(noImplicitAnyFunctions.ts, 13, 1), Decl(noImplicitAnyFunctions.ts, 15, 34), Decl(noImplicitAnyFunctions.ts, 16, 39))
>x : Symbol(x, Decl(noImplicitAnyFunctions.ts, 15, 12))
>y : Symbol(y, Decl(noImplicitAnyFunctions.ts, 15, 22))

function f6(x: string, y: string): any;
>f6 : Symbol(f6, Decl(noImplicitAnyFunctions.ts, 13, 1), Decl(noImplicitAnyFunctions.ts, 15, 34), Decl(noImplicitAnyFunctions.ts, 16, 39))
>x : Symbol(x, Decl(noImplicitAnyFunctions.ts, 16, 12))
>y : Symbol(y, Decl(noImplicitAnyFunctions.ts, 16, 22))

function f6(x: string, y) {
>f6 : Symbol(f6, Decl(noImplicitAnyFunctions.ts, 13, 1), Decl(noImplicitAnyFunctions.ts, 15, 34), Decl(noImplicitAnyFunctions.ts, 16, 39))
>x : Symbol(x, Decl(noImplicitAnyFunctions.ts, 17, 12))
>y : Symbol(y, Decl(noImplicitAnyFunctions.ts, 17, 22))

    return null;
}
