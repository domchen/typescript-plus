=== tests/cases/conformance/expressions/unaryOperators/bitwiseNotOperator/bitwiseNotOperatorInvalidOperations.ts ===
// Unary operator ~
var q;
>q : Symbol(q, Decl(bitwiseNotOperatorInvalidOperations.ts, 1, 3))

// operand before ~
var a = q~;  //expect error
>a : Symbol(a, Decl(bitwiseNotOperatorInvalidOperations.ts, 4, 3))
>q : Symbol(q, Decl(bitwiseNotOperatorInvalidOperations.ts, 1, 3))

// multiple operands after ~
var mul = ~[1, 2, "abc"], "";  //expect error
>mul : Symbol(mul, Decl(bitwiseNotOperatorInvalidOperations.ts, 7, 3))

// miss an operand
var b =~;
>b : Symbol(b, Decl(bitwiseNotOperatorInvalidOperations.ts, 10, 3))

