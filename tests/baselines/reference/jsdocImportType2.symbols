=== tests/cases/conformance/jsdoc/use.js ===
/// <reference path='./types.d.ts'/>
/** @typedef {import("./mod1")} C
 * @type {C} */
var c;
>c : Symbol(c, Decl(use.js, 3, 3))

c.chunk;
>c.chunk : Symbol(Chunk.chunk, Decl(mod1.js, 2, 19))
>c : Symbol(c, Decl(use.js, 3, 3))
>chunk : Symbol(Chunk.chunk, Decl(mod1.js, 2, 19))

const D = require("./mod1");
>D : Symbol(D, Decl(use.js, 6, 5))
>require : Symbol(require, Decl(types.d.ts, 0, 0))
>"./mod1" : Symbol("tests/cases/conformance/jsdoc/mod1", Decl(mod1.js, 0, 0))

/** @type {D} */
var d;
>d : Symbol(d, Decl(use.js, 8, 3))

d.chunk;
>d.chunk : Symbol(Chunk.chunk, Decl(mod1.js, 2, 19))
>d : Symbol(d, Decl(use.js, 8, 3))
>chunk : Symbol(Chunk.chunk, Decl(mod1.js, 2, 19))

=== tests/cases/conformance/jsdoc/types.d.ts ===
declare function require(name: string): any;
>require : Symbol(require, Decl(types.d.ts, 0, 0))
>name : Symbol(name, Decl(types.d.ts, 0, 25))

declare var exports: any;
>exports : Symbol(exports, Decl(types.d.ts, 1, 11))

declare var module: { exports: any };
>module : Symbol(module, Decl(types.d.ts, 2, 11))
>exports : Symbol(exports, Decl(types.d.ts, 2, 21))

=== tests/cases/conformance/jsdoc/mod1.js ===
/// <reference path='./types.d.ts'/>
module.exports = class Chunk {
>module.exports : Symbol("tests/cases/conformance/jsdoc/mod1", Decl(mod1.js, 0, 0))
>module : Symbol(export=, Decl(mod1.js, 0, 0))
>exports : Symbol(export=, Decl(mod1.js, 0, 0))
>Chunk : Symbol(Chunk, Decl(mod1.js, 1, 16))

    constructor() {
        this.chunk = 1;
>this.chunk : Symbol(Chunk.chunk, Decl(mod1.js, 2, 19))
>this : Symbol(Chunk, Decl(mod1.js, 1, 16))
>chunk : Symbol(Chunk.chunk, Decl(mod1.js, 2, 19))
    }
}

