=== tests/cases/conformance/types/objectTypeLiteral/callSignatures/callSignaturesWithParameterInitializers2.ts ===
// Optional parameters allow initializers only in implementation signatures
// All the below declarations are errors

function foo(x = 2);
>foo : Symbol(foo, Decl(callSignaturesWithParameterInitializers2.ts, 0, 0), Decl(callSignaturesWithParameterInitializers2.ts, 3, 20))
>x : Symbol(x, Decl(callSignaturesWithParameterInitializers2.ts, 3, 13))

function foo(x = 1) { }
>foo : Symbol(foo, Decl(callSignaturesWithParameterInitializers2.ts, 0, 0), Decl(callSignaturesWithParameterInitializers2.ts, 3, 20))
>x : Symbol(x, Decl(callSignaturesWithParameterInitializers2.ts, 4, 13))

foo(1);
>foo : Symbol(foo, Decl(callSignaturesWithParameterInitializers2.ts, 0, 0), Decl(callSignaturesWithParameterInitializers2.ts, 3, 20))

foo();
>foo : Symbol(foo, Decl(callSignaturesWithParameterInitializers2.ts, 0, 0), Decl(callSignaturesWithParameterInitializers2.ts, 3, 20))

class C {
>C : Symbol(C, Decl(callSignaturesWithParameterInitializers2.ts, 7, 6))

    foo(x = 2);
>foo : Symbol(C.foo, Decl(callSignaturesWithParameterInitializers2.ts, 9, 9), Decl(callSignaturesWithParameterInitializers2.ts, 10, 15))
>x : Symbol(x, Decl(callSignaturesWithParameterInitializers2.ts, 10, 8))

    foo(x = 1) { }
>foo : Symbol(C.foo, Decl(callSignaturesWithParameterInitializers2.ts, 9, 9), Decl(callSignaturesWithParameterInitializers2.ts, 10, 15))
>x : Symbol(x, Decl(callSignaturesWithParameterInitializers2.ts, 11, 8))
}

var c: C;
>c : Symbol(c, Decl(callSignaturesWithParameterInitializers2.ts, 14, 3))
>C : Symbol(C, Decl(callSignaturesWithParameterInitializers2.ts, 7, 6))

c.foo();
>c.foo : Symbol(C.foo, Decl(callSignaturesWithParameterInitializers2.ts, 9, 9), Decl(callSignaturesWithParameterInitializers2.ts, 10, 15))
>c : Symbol(c, Decl(callSignaturesWithParameterInitializers2.ts, 14, 3))
>foo : Symbol(C.foo, Decl(callSignaturesWithParameterInitializers2.ts, 9, 9), Decl(callSignaturesWithParameterInitializers2.ts, 10, 15))

c.foo(1);
>c.foo : Symbol(C.foo, Decl(callSignaturesWithParameterInitializers2.ts, 9, 9), Decl(callSignaturesWithParameterInitializers2.ts, 10, 15))
>c : Symbol(c, Decl(callSignaturesWithParameterInitializers2.ts, 14, 3))
>foo : Symbol(C.foo, Decl(callSignaturesWithParameterInitializers2.ts, 9, 9), Decl(callSignaturesWithParameterInitializers2.ts, 10, 15))

var b = {
>b : Symbol(b, Decl(callSignaturesWithParameterInitializers2.ts, 18, 3))

    foo(x = 1), // error
>foo : Symbol(foo, Decl(callSignaturesWithParameterInitializers2.ts, 18, 9), Decl(callSignaturesWithParameterInitializers2.ts, 19, 15))
>x : Symbol(x, Decl(callSignaturesWithParameterInitializers2.ts, 19, 8))

    foo(x = 1) { }, // error
>foo : Symbol(foo, Decl(callSignaturesWithParameterInitializers2.ts, 18, 9), Decl(callSignaturesWithParameterInitializers2.ts, 19, 15))
>x : Symbol(x, Decl(callSignaturesWithParameterInitializers2.ts, 20, 8))
}

b.foo();
>b.foo : Symbol(foo, Decl(callSignaturesWithParameterInitializers2.ts, 18, 9), Decl(callSignaturesWithParameterInitializers2.ts, 19, 15))
>b : Symbol(b, Decl(callSignaturesWithParameterInitializers2.ts, 18, 3))
>foo : Symbol(foo, Decl(callSignaturesWithParameterInitializers2.ts, 18, 9), Decl(callSignaturesWithParameterInitializers2.ts, 19, 15))

b.foo(1);
>b.foo : Symbol(foo, Decl(callSignaturesWithParameterInitializers2.ts, 18, 9), Decl(callSignaturesWithParameterInitializers2.ts, 19, 15))
>b : Symbol(b, Decl(callSignaturesWithParameterInitializers2.ts, 18, 3))
>foo : Symbol(foo, Decl(callSignaturesWithParameterInitializers2.ts, 18, 9), Decl(callSignaturesWithParameterInitializers2.ts, 19, 15))

