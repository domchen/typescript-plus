=== tests/cases/compiler/inheritedMembersAndIndexSignaturesFromDifferentBases.ts ===
// indexer in B is a subtype of indexer in A
interface A {
>A : Symbol(A, Decl(inheritedMembersAndIndexSignaturesFromDifferentBases.ts, 0, 0))

    [s: string]: {
>s : Symbol(s, Decl(inheritedMembersAndIndexSignaturesFromDifferentBases.ts, 2, 5))

        a;
>a : Symbol(a, Decl(inheritedMembersAndIndexSignaturesFromDifferentBases.ts, 2, 18))

    };
}
interface B {
>B : Symbol(B, Decl(inheritedMembersAndIndexSignaturesFromDifferentBases.ts, 5, 1))

    [s: number]: {
>s : Symbol(s, Decl(inheritedMembersAndIndexSignaturesFromDifferentBases.ts, 7, 5))

        a;
>a : Symbol(a, Decl(inheritedMembersAndIndexSignaturesFromDifferentBases.ts, 7, 18))

        b;
>b : Symbol(b, Decl(inheritedMembersAndIndexSignaturesFromDifferentBases.ts, 8, 10))

    };
}
interface C {
>C : Symbol(C, Decl(inheritedMembersAndIndexSignaturesFromDifferentBases.ts, 11, 1))

    m: {};
>m : Symbol(C.m, Decl(inheritedMembersAndIndexSignaturesFromDifferentBases.ts, 12, 13))
}

interface D extends A, B, C { } // error because m is not a subtype of {a;}
>D : Symbol(D, Decl(inheritedMembersAndIndexSignaturesFromDifferentBases.ts, 14, 1))
>A : Symbol(A, Decl(inheritedMembersAndIndexSignaturesFromDifferentBases.ts, 0, 0))
>B : Symbol(B, Decl(inheritedMembersAndIndexSignaturesFromDifferentBases.ts, 5, 1))
>C : Symbol(C, Decl(inheritedMembersAndIndexSignaturesFromDifferentBases.ts, 11, 1))

interface E {
>E : Symbol(E, Decl(inheritedMembersAndIndexSignaturesFromDifferentBases.ts, 16, 31))

    0: {};
>0 : Symbol(E[0], Decl(inheritedMembersAndIndexSignaturesFromDifferentBases.ts, 18, 13))
}

interface F extends A, B, E { } // error because 0 is not a subtype of {a; b;}
>F : Symbol(F, Decl(inheritedMembersAndIndexSignaturesFromDifferentBases.ts, 20, 1))
>A : Symbol(A, Decl(inheritedMembersAndIndexSignaturesFromDifferentBases.ts, 0, 0))
>B : Symbol(B, Decl(inheritedMembersAndIndexSignaturesFromDifferentBases.ts, 5, 1))
>E : Symbol(E, Decl(inheritedMembersAndIndexSignaturesFromDifferentBases.ts, 16, 31))

interface G extends A, B, C, E { } // should only report one error
>G : Symbol(G, Decl(inheritedMembersAndIndexSignaturesFromDifferentBases.ts, 22, 31))
>A : Symbol(A, Decl(inheritedMembersAndIndexSignaturesFromDifferentBases.ts, 0, 0))
>B : Symbol(B, Decl(inheritedMembersAndIndexSignaturesFromDifferentBases.ts, 5, 1))
>C : Symbol(C, Decl(inheritedMembersAndIndexSignaturesFromDifferentBases.ts, 11, 1))
>E : Symbol(E, Decl(inheritedMembersAndIndexSignaturesFromDifferentBases.ts, 16, 31))

interface H extends A, F { } // Should report no error at all because error is internal to F
>H : Symbol(H, Decl(inheritedMembersAndIndexSignaturesFromDifferentBases.ts, 24, 34))
>A : Symbol(A, Decl(inheritedMembersAndIndexSignaturesFromDifferentBases.ts, 0, 0))
>F : Symbol(F, Decl(inheritedMembersAndIndexSignaturesFromDifferentBases.ts, 20, 1))

