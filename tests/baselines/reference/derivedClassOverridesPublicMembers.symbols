=== tests/cases/conformance/classes/members/inheritanceAndOverriding/derivedClassOverridesPublicMembers.ts ===
var x: { foo: string; }
>x : Symbol(x, Decl(derivedClassOverridesPublicMembers.ts, 0, 3))
>foo : Symbol(foo, Decl(derivedClassOverridesPublicMembers.ts, 0, 8))

var y: { foo: string; bar: string; }
>y : Symbol(y, Decl(derivedClassOverridesPublicMembers.ts, 1, 3))
>foo : Symbol(foo, Decl(derivedClassOverridesPublicMembers.ts, 1, 8))
>bar : Symbol(bar, Decl(derivedClassOverridesPublicMembers.ts, 1, 21))

class Base {
>Base : Symbol(Base, Decl(derivedClassOverridesPublicMembers.ts, 1, 36))

    a: typeof x;
>a : Symbol(Base.a, Decl(derivedClassOverridesPublicMembers.ts, 3, 12))
>x : Symbol(x, Decl(derivedClassOverridesPublicMembers.ts, 0, 3))

    b(a: typeof x) { }
>b : Symbol(Base.b, Decl(derivedClassOverridesPublicMembers.ts, 4, 16))
>a : Symbol(a, Decl(derivedClassOverridesPublicMembers.ts, 5, 6))
>x : Symbol(x, Decl(derivedClassOverridesPublicMembers.ts, 0, 3))

    get c() { return x; }
>c : Symbol(Base.c, Decl(derivedClassOverridesPublicMembers.ts, 5, 22), Decl(derivedClassOverridesPublicMembers.ts, 6, 25))
>x : Symbol(x, Decl(derivedClassOverridesPublicMembers.ts, 0, 3))

    set c(v: typeof x) { }
>c : Symbol(Base.c, Decl(derivedClassOverridesPublicMembers.ts, 5, 22), Decl(derivedClassOverridesPublicMembers.ts, 6, 25))
>v : Symbol(v, Decl(derivedClassOverridesPublicMembers.ts, 7, 10))
>x : Symbol(x, Decl(derivedClassOverridesPublicMembers.ts, 0, 3))

    d: (a: typeof x) => void;
>d : Symbol(Base.d, Decl(derivedClassOverridesPublicMembers.ts, 7, 26))
>a : Symbol(a, Decl(derivedClassOverridesPublicMembers.ts, 8, 8))
>x : Symbol(x, Decl(derivedClassOverridesPublicMembers.ts, 0, 3))

    static r: typeof x;
>r : Symbol(Base.r, Decl(derivedClassOverridesPublicMembers.ts, 8, 29))
>x : Symbol(x, Decl(derivedClassOverridesPublicMembers.ts, 0, 3))

    static s(a: typeof x) { }
>s : Symbol(Base.s, Decl(derivedClassOverridesPublicMembers.ts, 10, 23))
>a : Symbol(a, Decl(derivedClassOverridesPublicMembers.ts, 11, 13))
>x : Symbol(x, Decl(derivedClassOverridesPublicMembers.ts, 0, 3))

    static get t() { return x; }
>t : Symbol(Base.t, Decl(derivedClassOverridesPublicMembers.ts, 11, 29), Decl(derivedClassOverridesPublicMembers.ts, 12, 32))
>x : Symbol(x, Decl(derivedClassOverridesPublicMembers.ts, 0, 3))

    static set t(v: typeof x) { }
>t : Symbol(Base.t, Decl(derivedClassOverridesPublicMembers.ts, 11, 29), Decl(derivedClassOverridesPublicMembers.ts, 12, 32))
>v : Symbol(v, Decl(derivedClassOverridesPublicMembers.ts, 13, 17))
>x : Symbol(x, Decl(derivedClassOverridesPublicMembers.ts, 0, 3))

    static u: (a: typeof x) => void;
>u : Symbol(Base.u, Decl(derivedClassOverridesPublicMembers.ts, 13, 33))
>a : Symbol(a, Decl(derivedClassOverridesPublicMembers.ts, 14, 15))
>x : Symbol(x, Decl(derivedClassOverridesPublicMembers.ts, 0, 3))

    constructor(a: typeof x) { }
>a : Symbol(a, Decl(derivedClassOverridesPublicMembers.ts, 16, 16))
>x : Symbol(x, Decl(derivedClassOverridesPublicMembers.ts, 0, 3))
}

class Derived extends Base {
>Derived : Symbol(Derived, Decl(derivedClassOverridesPublicMembers.ts, 17, 1))
>Base : Symbol(Base, Decl(derivedClassOverridesPublicMembers.ts, 1, 36))

    a: typeof y;
>a : Symbol(Derived.a, Decl(derivedClassOverridesPublicMembers.ts, 19, 28))
>y : Symbol(y, Decl(derivedClassOverridesPublicMembers.ts, 1, 3))

    b(a: typeof y) { }
>b : Symbol(Derived.b, Decl(derivedClassOverridesPublicMembers.ts, 20, 16))
>a : Symbol(a, Decl(derivedClassOverridesPublicMembers.ts, 21, 6))
>y : Symbol(y, Decl(derivedClassOverridesPublicMembers.ts, 1, 3))

    get c() { return y; }
>c : Symbol(Derived.c, Decl(derivedClassOverridesPublicMembers.ts, 21, 22), Decl(derivedClassOverridesPublicMembers.ts, 22, 25))
>y : Symbol(y, Decl(derivedClassOverridesPublicMembers.ts, 1, 3))

    set c(v: typeof y) { }
>c : Symbol(Derived.c, Decl(derivedClassOverridesPublicMembers.ts, 21, 22), Decl(derivedClassOverridesPublicMembers.ts, 22, 25))
>v : Symbol(v, Decl(derivedClassOverridesPublicMembers.ts, 23, 10))
>y : Symbol(y, Decl(derivedClassOverridesPublicMembers.ts, 1, 3))

    d: (a: typeof y) => void;
>d : Symbol(Derived.d, Decl(derivedClassOverridesPublicMembers.ts, 23, 26))
>a : Symbol(a, Decl(derivedClassOverridesPublicMembers.ts, 24, 8))
>y : Symbol(y, Decl(derivedClassOverridesPublicMembers.ts, 1, 3))

    static r: typeof y;
>r : Symbol(Derived.r, Decl(derivedClassOverridesPublicMembers.ts, 24, 29))
>y : Symbol(y, Decl(derivedClassOverridesPublicMembers.ts, 1, 3))

    static s(a: typeof y) { }
>s : Symbol(Derived.s, Decl(derivedClassOverridesPublicMembers.ts, 26, 23))
>a : Symbol(a, Decl(derivedClassOverridesPublicMembers.ts, 27, 13))
>y : Symbol(y, Decl(derivedClassOverridesPublicMembers.ts, 1, 3))

    static get t() { return y; }
>t : Symbol(Derived.t, Decl(derivedClassOverridesPublicMembers.ts, 27, 29), Decl(derivedClassOverridesPublicMembers.ts, 28, 32))
>y : Symbol(y, Decl(derivedClassOverridesPublicMembers.ts, 1, 3))

    static set t(a: typeof y) { }
>t : Symbol(Derived.t, Decl(derivedClassOverridesPublicMembers.ts, 27, 29), Decl(derivedClassOverridesPublicMembers.ts, 28, 32))
>a : Symbol(a, Decl(derivedClassOverridesPublicMembers.ts, 29, 17))
>y : Symbol(y, Decl(derivedClassOverridesPublicMembers.ts, 1, 3))

    static u: (a: typeof y) => void;
>u : Symbol(Derived.u, Decl(derivedClassOverridesPublicMembers.ts, 29, 33))
>a : Symbol(a, Decl(derivedClassOverridesPublicMembers.ts, 30, 15))
>y : Symbol(y, Decl(derivedClassOverridesPublicMembers.ts, 1, 3))

    constructor(a: typeof y) { super(x) }
>a : Symbol(a, Decl(derivedClassOverridesPublicMembers.ts, 32, 16))
>y : Symbol(y, Decl(derivedClassOverridesPublicMembers.ts, 1, 3))
>super : Symbol(Base, Decl(derivedClassOverridesPublicMembers.ts, 1, 36))
>x : Symbol(x, Decl(derivedClassOverridesPublicMembers.ts, 0, 3))
}

var d: Derived = new Derived(y);
>d : Symbol(d, Decl(derivedClassOverridesPublicMembers.ts, 35, 3))
>Derived : Symbol(Derived, Decl(derivedClassOverridesPublicMembers.ts, 17, 1))
>Derived : Symbol(Derived, Decl(derivedClassOverridesPublicMembers.ts, 17, 1))
>y : Symbol(y, Decl(derivedClassOverridesPublicMembers.ts, 1, 3))

var r1 = d.a;
>r1 : Symbol(r1, Decl(derivedClassOverridesPublicMembers.ts, 36, 3))
>d.a : Symbol(Derived.a, Decl(derivedClassOverridesPublicMembers.ts, 19, 28))
>d : Symbol(d, Decl(derivedClassOverridesPublicMembers.ts, 35, 3))
>a : Symbol(Derived.a, Decl(derivedClassOverridesPublicMembers.ts, 19, 28))

var r2 = d.b(y);
>r2 : Symbol(r2, Decl(derivedClassOverridesPublicMembers.ts, 37, 3))
>d.b : Symbol(Derived.b, Decl(derivedClassOverridesPublicMembers.ts, 20, 16))
>d : Symbol(d, Decl(derivedClassOverridesPublicMembers.ts, 35, 3))
>b : Symbol(Derived.b, Decl(derivedClassOverridesPublicMembers.ts, 20, 16))
>y : Symbol(y, Decl(derivedClassOverridesPublicMembers.ts, 1, 3))

var r3 = d.c;
>r3 : Symbol(r3, Decl(derivedClassOverridesPublicMembers.ts, 38, 3))
>d.c : Symbol(Derived.c, Decl(derivedClassOverridesPublicMembers.ts, 21, 22), Decl(derivedClassOverridesPublicMembers.ts, 22, 25))
>d : Symbol(d, Decl(derivedClassOverridesPublicMembers.ts, 35, 3))
>c : Symbol(Derived.c, Decl(derivedClassOverridesPublicMembers.ts, 21, 22), Decl(derivedClassOverridesPublicMembers.ts, 22, 25))

var r3a = d.d;
>r3a : Symbol(r3a, Decl(derivedClassOverridesPublicMembers.ts, 39, 3))
>d.d : Symbol(Derived.d, Decl(derivedClassOverridesPublicMembers.ts, 23, 26))
>d : Symbol(d, Decl(derivedClassOverridesPublicMembers.ts, 35, 3))
>d : Symbol(Derived.d, Decl(derivedClassOverridesPublicMembers.ts, 23, 26))

d.c = y;
>d.c : Symbol(Derived.c, Decl(derivedClassOverridesPublicMembers.ts, 21, 22), Decl(derivedClassOverridesPublicMembers.ts, 22, 25))
>d : Symbol(d, Decl(derivedClassOverridesPublicMembers.ts, 35, 3))
>c : Symbol(Derived.c, Decl(derivedClassOverridesPublicMembers.ts, 21, 22), Decl(derivedClassOverridesPublicMembers.ts, 22, 25))
>y : Symbol(y, Decl(derivedClassOverridesPublicMembers.ts, 1, 3))

var r4 = Derived.r;
>r4 : Symbol(r4, Decl(derivedClassOverridesPublicMembers.ts, 41, 3))
>Derived.r : Symbol(Derived.r, Decl(derivedClassOverridesPublicMembers.ts, 24, 29))
>Derived : Symbol(Derived, Decl(derivedClassOverridesPublicMembers.ts, 17, 1))
>r : Symbol(Derived.r, Decl(derivedClassOverridesPublicMembers.ts, 24, 29))

var r5 = Derived.s(y);
>r5 : Symbol(r5, Decl(derivedClassOverridesPublicMembers.ts, 42, 3))
>Derived.s : Symbol(Derived.s, Decl(derivedClassOverridesPublicMembers.ts, 26, 23))
>Derived : Symbol(Derived, Decl(derivedClassOverridesPublicMembers.ts, 17, 1))
>s : Symbol(Derived.s, Decl(derivedClassOverridesPublicMembers.ts, 26, 23))
>y : Symbol(y, Decl(derivedClassOverridesPublicMembers.ts, 1, 3))

var r6 = Derived.t;
>r6 : Symbol(r6, Decl(derivedClassOverridesPublicMembers.ts, 43, 3))
>Derived.t : Symbol(Derived.t, Decl(derivedClassOverridesPublicMembers.ts, 27, 29), Decl(derivedClassOverridesPublicMembers.ts, 28, 32))
>Derived : Symbol(Derived, Decl(derivedClassOverridesPublicMembers.ts, 17, 1))
>t : Symbol(Derived.t, Decl(derivedClassOverridesPublicMembers.ts, 27, 29), Decl(derivedClassOverridesPublicMembers.ts, 28, 32))

var r6a = Derived.u;
>r6a : Symbol(r6a, Decl(derivedClassOverridesPublicMembers.ts, 44, 3))
>Derived.u : Symbol(Derived.u, Decl(derivedClassOverridesPublicMembers.ts, 29, 33))
>Derived : Symbol(Derived, Decl(derivedClassOverridesPublicMembers.ts, 17, 1))
>u : Symbol(Derived.u, Decl(derivedClassOverridesPublicMembers.ts, 29, 33))

Derived.t = y;
>Derived.t : Symbol(Derived.t, Decl(derivedClassOverridesPublicMembers.ts, 27, 29), Decl(derivedClassOverridesPublicMembers.ts, 28, 32))
>Derived : Symbol(Derived, Decl(derivedClassOverridesPublicMembers.ts, 17, 1))
>t : Symbol(Derived.t, Decl(derivedClassOverridesPublicMembers.ts, 27, 29), Decl(derivedClassOverridesPublicMembers.ts, 28, 32))
>y : Symbol(y, Decl(derivedClassOverridesPublicMembers.ts, 1, 3))

class Base2 {
>Base2 : Symbol(Base2, Decl(derivedClassOverridesPublicMembers.ts, 45, 14))

    [i: string]: Object;
>i : Symbol(i, Decl(derivedClassOverridesPublicMembers.ts, 48, 5))
>Object : Symbol(Object, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))

    [i: number]: typeof x;
>i : Symbol(i, Decl(derivedClassOverridesPublicMembers.ts, 49, 5))
>x : Symbol(x, Decl(derivedClassOverridesPublicMembers.ts, 0, 3))
}

class Derived2 extends Base2 {
>Derived2 : Symbol(Derived2, Decl(derivedClassOverridesPublicMembers.ts, 50, 1))
>Base2 : Symbol(Base2, Decl(derivedClassOverridesPublicMembers.ts, 45, 14))

    [i: string]: typeof x;
>i : Symbol(i, Decl(derivedClassOverridesPublicMembers.ts, 53, 5))
>x : Symbol(x, Decl(derivedClassOverridesPublicMembers.ts, 0, 3))

    [i: number]: typeof y;
>i : Symbol(i, Decl(derivedClassOverridesPublicMembers.ts, 54, 5))
>y : Symbol(y, Decl(derivedClassOverridesPublicMembers.ts, 1, 3))
}

var d2: Derived2;
>d2 : Symbol(d2, Decl(derivedClassOverridesPublicMembers.ts, 57, 3))
>Derived2 : Symbol(Derived2, Decl(derivedClassOverridesPublicMembers.ts, 50, 1))

var r7 = d2[''];
>r7 : Symbol(r7, Decl(derivedClassOverridesPublicMembers.ts, 58, 3))
>d2 : Symbol(d2, Decl(derivedClassOverridesPublicMembers.ts, 57, 3))

var r8 = d2[1];
>r8 : Symbol(r8, Decl(derivedClassOverridesPublicMembers.ts, 59, 3))
>d2 : Symbol(d2, Decl(derivedClassOverridesPublicMembers.ts, 57, 3))


