=== tests/cases/compiler/augmentedTypesInterface.ts ===
// interface then interface

interface i {
>i : Symbol(i, Decl(augmentedTypesInterface.ts, 0, 0), Decl(augmentedTypesInterface.ts, 4, 1))

    foo(): void;
>foo : Symbol(i.foo, Decl(augmentedTypesInterface.ts, 2, 13))
}

interface i {
>i : Symbol(i, Decl(augmentedTypesInterface.ts, 0, 0), Decl(augmentedTypesInterface.ts, 4, 1))

    bar(): number;
>bar : Symbol(i.bar, Decl(augmentedTypesInterface.ts, 6, 13))
}

// interface then class
interface i2 {
>i2 : Symbol(i2, Decl(augmentedTypesInterface.ts, 8, 1), Decl(augmentedTypesInterface.ts, 13, 1))

    foo(): void;
>foo : Symbol(i2.foo, Decl(augmentedTypesInterface.ts, 11, 14))
}

class i2 {
>i2 : Symbol(i2, Decl(augmentedTypesInterface.ts, 8, 1), Decl(augmentedTypesInterface.ts, 13, 1))

    bar() {
>bar : Symbol(i2.bar, Decl(augmentedTypesInterface.ts, 15, 10))

        return 1;
    }
}

// interface then enum
interface i3 { // error
>i3 : Symbol(i3, Decl(augmentedTypesInterface.ts, 19, 1))

    foo(): void;
>foo : Symbol(i3.foo, Decl(augmentedTypesInterface.ts, 22, 14))
}
enum i3 { One }; // error
>i3 : Symbol(i3, Decl(augmentedTypesInterface.ts, 24, 1))
>One : Symbol(i3.One, Decl(augmentedTypesInterface.ts, 25, 9))

// interface then import
interface i4 {
>i4 : Symbol(i4, Decl(augmentedTypesInterface.ts, 25, 16))

    foo(): void;
>foo : Symbol(i4.foo, Decl(augmentedTypesInterface.ts, 28, 14))
}

//import i4 = require('');  // error
