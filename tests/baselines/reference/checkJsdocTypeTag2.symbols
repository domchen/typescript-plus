=== tests/cases/conformance/jsdoc/0.js ===
// @ts-check
/** @type {String} */
var S = true;
>S : Symbol(S, Decl(0.js, 2, 3))

/** @type {number} */
var n = "hello";
>n : Symbol(n, Decl(0.js, 5, 3))

/** @type {function (number)} */
const x1 = (a) => a + 1;
>x1 : Symbol(x1, Decl(0.js, 8, 5))
>a : Symbol(a, Decl(0.js, 8, 12))
>a : Symbol(a, Decl(0.js, 8, 12))

x1("string");
>x1 : Symbol(x1, Decl(0.js, 8, 5))

/** @type {function (number): number} */
const x2 = (a) => a + 1;
>x2 : Symbol(x2, Decl(0.js, 12, 5))
>a : Symbol(a, Decl(0.js, 12, 12))
>a : Symbol(a, Decl(0.js, 12, 12))

/** @type {string} */
var a;
>a : Symbol(a, Decl(0.js, 15, 3))

a = x2(0);
>a : Symbol(a, Decl(0.js, 15, 3))
>x2 : Symbol(x2, Decl(0.js, 12, 5))

/** @type {function (number): number} */
const x3 = (a) => a.concat("hi");
>x3 : Symbol(x3, Decl(0.js, 19, 5))
>a : Symbol(a, Decl(0.js, 19, 12))
>a : Symbol(a, Decl(0.js, 19, 12))

x3(0);
>x3 : Symbol(x3, Decl(0.js, 19, 5))

/** @type {function (number): string} */
const x4 = (a) => a + 1;
>x4 : Symbol(x4, Decl(0.js, 23, 5))
>a : Symbol(a, Decl(0.js, 23, 12))
>a : Symbol(a, Decl(0.js, 23, 12))

x4(0);
>x4 : Symbol(x4, Decl(0.js, 23, 5))

