=== tests/cases/conformance/types/intersection/intersectionAndUnionTypes.ts ===
interface A { a: string }
>A : Symbol(A, Decl(intersectionAndUnionTypes.ts, 0, 0))
>a : Symbol(A.a, Decl(intersectionAndUnionTypes.ts, 0, 13))

interface B { b: string }
>B : Symbol(B, Decl(intersectionAndUnionTypes.ts, 0, 25))
>b : Symbol(B.b, Decl(intersectionAndUnionTypes.ts, 1, 13))

interface C { c: string }
>C : Symbol(C, Decl(intersectionAndUnionTypes.ts, 1, 25))
>c : Symbol(C.c, Decl(intersectionAndUnionTypes.ts, 2, 13))

interface D { d: string }
>D : Symbol(D, Decl(intersectionAndUnionTypes.ts, 2, 25))
>d : Symbol(D.d, Decl(intersectionAndUnionTypes.ts, 3, 13))

var a: A;
>a : Symbol(a, Decl(intersectionAndUnionTypes.ts, 5, 3))
>A : Symbol(A, Decl(intersectionAndUnionTypes.ts, 0, 0))

var b: B;
>b : Symbol(b, Decl(intersectionAndUnionTypes.ts, 6, 3))
>B : Symbol(B, Decl(intersectionAndUnionTypes.ts, 0, 25))

var c: C;
>c : Symbol(c, Decl(intersectionAndUnionTypes.ts, 7, 3))
>C : Symbol(C, Decl(intersectionAndUnionTypes.ts, 1, 25))

var d: D;
>d : Symbol(d, Decl(intersectionAndUnionTypes.ts, 8, 3))
>D : Symbol(D, Decl(intersectionAndUnionTypes.ts, 2, 25))

var anb: A & B;
>anb : Symbol(anb, Decl(intersectionAndUnionTypes.ts, 9, 3))
>A : Symbol(A, Decl(intersectionAndUnionTypes.ts, 0, 0))
>B : Symbol(B, Decl(intersectionAndUnionTypes.ts, 0, 25))

var aob: A | B;
>aob : Symbol(aob, Decl(intersectionAndUnionTypes.ts, 10, 3))
>A : Symbol(A, Decl(intersectionAndUnionTypes.ts, 0, 0))
>B : Symbol(B, Decl(intersectionAndUnionTypes.ts, 0, 25))

var cnd: C & D;
>cnd : Symbol(cnd, Decl(intersectionAndUnionTypes.ts, 11, 3))
>C : Symbol(C, Decl(intersectionAndUnionTypes.ts, 1, 25))
>D : Symbol(D, Decl(intersectionAndUnionTypes.ts, 2, 25))

var cod: C | D;
>cod : Symbol(cod, Decl(intersectionAndUnionTypes.ts, 12, 3))
>C : Symbol(C, Decl(intersectionAndUnionTypes.ts, 1, 25))
>D : Symbol(D, Decl(intersectionAndUnionTypes.ts, 2, 25))

var x: A & B | C & D;
>x : Symbol(x, Decl(intersectionAndUnionTypes.ts, 13, 3))
>A : Symbol(A, Decl(intersectionAndUnionTypes.ts, 0, 0))
>B : Symbol(B, Decl(intersectionAndUnionTypes.ts, 0, 25))
>C : Symbol(C, Decl(intersectionAndUnionTypes.ts, 1, 25))
>D : Symbol(D, Decl(intersectionAndUnionTypes.ts, 2, 25))

var y: (A | B) & (C | D);
>y : Symbol(y, Decl(intersectionAndUnionTypes.ts, 14, 3))
>A : Symbol(A, Decl(intersectionAndUnionTypes.ts, 0, 0))
>B : Symbol(B, Decl(intersectionAndUnionTypes.ts, 0, 25))
>C : Symbol(C, Decl(intersectionAndUnionTypes.ts, 1, 25))
>D : Symbol(D, Decl(intersectionAndUnionTypes.ts, 2, 25))

a = anb;  // Ok
>a : Symbol(a, Decl(intersectionAndUnionTypes.ts, 5, 3))
>anb : Symbol(anb, Decl(intersectionAndUnionTypes.ts, 9, 3))

b = anb;  // Ok
>b : Symbol(b, Decl(intersectionAndUnionTypes.ts, 6, 3))
>anb : Symbol(anb, Decl(intersectionAndUnionTypes.ts, 9, 3))

anb = a;
>anb : Symbol(anb, Decl(intersectionAndUnionTypes.ts, 9, 3))
>a : Symbol(a, Decl(intersectionAndUnionTypes.ts, 5, 3))

anb = b;
>anb : Symbol(anb, Decl(intersectionAndUnionTypes.ts, 9, 3))
>b : Symbol(b, Decl(intersectionAndUnionTypes.ts, 6, 3))

x = anb;  // Ok
>x : Symbol(x, Decl(intersectionAndUnionTypes.ts, 13, 3))
>anb : Symbol(anb, Decl(intersectionAndUnionTypes.ts, 9, 3))

x = aob;
>x : Symbol(x, Decl(intersectionAndUnionTypes.ts, 13, 3))
>aob : Symbol(aob, Decl(intersectionAndUnionTypes.ts, 10, 3))

x = cnd;  // Ok
>x : Symbol(x, Decl(intersectionAndUnionTypes.ts, 13, 3))
>cnd : Symbol(cnd, Decl(intersectionAndUnionTypes.ts, 11, 3))

x = cod;
>x : Symbol(x, Decl(intersectionAndUnionTypes.ts, 13, 3))
>cod : Symbol(cod, Decl(intersectionAndUnionTypes.ts, 12, 3))

anb = x;
>anb : Symbol(anb, Decl(intersectionAndUnionTypes.ts, 9, 3))
>x : Symbol(x, Decl(intersectionAndUnionTypes.ts, 13, 3))

aob = x;
>aob : Symbol(aob, Decl(intersectionAndUnionTypes.ts, 10, 3))
>x : Symbol(x, Decl(intersectionAndUnionTypes.ts, 13, 3))

cnd = x;
>cnd : Symbol(cnd, Decl(intersectionAndUnionTypes.ts, 11, 3))
>x : Symbol(x, Decl(intersectionAndUnionTypes.ts, 13, 3))

cod = x;
>cod : Symbol(cod, Decl(intersectionAndUnionTypes.ts, 12, 3))
>x : Symbol(x, Decl(intersectionAndUnionTypes.ts, 13, 3))

y = anb;
>y : Symbol(y, Decl(intersectionAndUnionTypes.ts, 14, 3))
>anb : Symbol(anb, Decl(intersectionAndUnionTypes.ts, 9, 3))

y = aob;
>y : Symbol(y, Decl(intersectionAndUnionTypes.ts, 14, 3))
>aob : Symbol(aob, Decl(intersectionAndUnionTypes.ts, 10, 3))

y = cnd;
>y : Symbol(y, Decl(intersectionAndUnionTypes.ts, 14, 3))
>cnd : Symbol(cnd, Decl(intersectionAndUnionTypes.ts, 11, 3))

y = cod;
>y : Symbol(y, Decl(intersectionAndUnionTypes.ts, 14, 3))
>cod : Symbol(cod, Decl(intersectionAndUnionTypes.ts, 12, 3))

anb = y;
>anb : Symbol(anb, Decl(intersectionAndUnionTypes.ts, 9, 3))
>y : Symbol(y, Decl(intersectionAndUnionTypes.ts, 14, 3))

aob = y;  // Ok
>aob : Symbol(aob, Decl(intersectionAndUnionTypes.ts, 10, 3))
>y : Symbol(y, Decl(intersectionAndUnionTypes.ts, 14, 3))

cnd = y;
>cnd : Symbol(cnd, Decl(intersectionAndUnionTypes.ts, 11, 3))
>y : Symbol(y, Decl(intersectionAndUnionTypes.ts, 14, 3))

cod = y;  // Ok
>cod : Symbol(cod, Decl(intersectionAndUnionTypes.ts, 12, 3))
>y : Symbol(y, Decl(intersectionAndUnionTypes.ts, 14, 3))

