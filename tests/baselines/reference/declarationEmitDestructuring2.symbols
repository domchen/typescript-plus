=== tests/cases/compiler/declarationEmitDestructuring2.ts ===
function f({x = 10, y: [a, b, c, d] = [1, 2, 3, 4]} = { x: 10, y: [2, 4, 6, 8] }) { }
>f : Symbol(f, Decl(declarationEmitDestructuring2.ts, 0, 0))
>x : Symbol(x, Decl(declarationEmitDestructuring2.ts, 0, 12))
>y : Symbol(y, Decl(declarationEmitDestructuring2.ts, 0, 62))
>a : Symbol(a, Decl(declarationEmitDestructuring2.ts, 0, 24))
>b : Symbol(b, Decl(declarationEmitDestructuring2.ts, 0, 26))
>c : Symbol(c, Decl(declarationEmitDestructuring2.ts, 0, 29))
>d : Symbol(d, Decl(declarationEmitDestructuring2.ts, 0, 32))
>x : Symbol(x, Decl(declarationEmitDestructuring2.ts, 0, 55))
>y : Symbol(y, Decl(declarationEmitDestructuring2.ts, 0, 62))

function g([a, b, c, d] = [1, 2, 3, 4]) { }
>g : Symbol(g, Decl(declarationEmitDestructuring2.ts, 0, 85))
>a : Symbol(a, Decl(declarationEmitDestructuring2.ts, 1, 12))
>b : Symbol(b, Decl(declarationEmitDestructuring2.ts, 1, 14))
>c : Symbol(c, Decl(declarationEmitDestructuring2.ts, 1, 17))
>d : Symbol(d, Decl(declarationEmitDestructuring2.ts, 1, 20))

function h([a, [b], [[c]], {x = 10, y: [a, b, c], z: {a1, b1}}]){ }
>h : Symbol(h, Decl(declarationEmitDestructuring2.ts, 1, 43))
>a : Symbol(a, Decl(declarationEmitDestructuring2.ts, 2, 12))
>b : Symbol(b, Decl(declarationEmitDestructuring2.ts, 2, 16))
>c : Symbol(c, Decl(declarationEmitDestructuring2.ts, 2, 22))
>x : Symbol(x, Decl(declarationEmitDestructuring2.ts, 2, 28))
>y : Symbol(y)
>a : Symbol(a, Decl(declarationEmitDestructuring2.ts, 2, 40))
>b : Symbol(b, Decl(declarationEmitDestructuring2.ts, 2, 42))
>c : Symbol(c, Decl(declarationEmitDestructuring2.ts, 2, 45))
>z : Symbol(z)
>a1 : Symbol(a1, Decl(declarationEmitDestructuring2.ts, 2, 54))
>b1 : Symbol(b1, Decl(declarationEmitDestructuring2.ts, 2, 57))

function h1([a, [b], [[c]], {x = 10, y = [1, 2, 3], z: {a1, b1}}]){ }
>h1 : Symbol(h1, Decl(declarationEmitDestructuring2.ts, 2, 67))
>a : Symbol(a, Decl(declarationEmitDestructuring2.ts, 3, 13))
>b : Symbol(b, Decl(declarationEmitDestructuring2.ts, 3, 17))
>c : Symbol(c, Decl(declarationEmitDestructuring2.ts, 3, 23))
>x : Symbol(x, Decl(declarationEmitDestructuring2.ts, 3, 29))
>y : Symbol(y, Decl(declarationEmitDestructuring2.ts, 3, 36))
>z : Symbol(z)
>a1 : Symbol(a1, Decl(declarationEmitDestructuring2.ts, 3, 56))
>b1 : Symbol(b1, Decl(declarationEmitDestructuring2.ts, 3, 59))

