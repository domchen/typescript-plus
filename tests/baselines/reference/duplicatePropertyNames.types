=== tests/cases/conformance/types/members/duplicatePropertyNames.ts ===
// duplicate property names are an error in all types

interface Number {
>Number : Number

    foo: string;
>foo : string

    foo: string;
>foo : string
}

interface String {
>String : String

    foo(): string;
>foo : { (): string; (): string; }

    foo(): string;
>foo : { (): string; (): string; }
}

interface Array<T> {
>Array : T[]
>T : T

    foo: T;
>foo : T
>T : T

    foo: T;
>foo : T
>T : T
}

class C {
>C : C

    foo: string;
>foo : string

    foo: string;
>foo : string

    bar(x) { }
>bar : (x: any) => void
>x : any

    bar(x) { }
>bar : (x: any) => void
>x : any

    baz = () => { }
>baz : () => void
>() => { } : () => void

    baz = () => { }
>baz : () => void
>() => { } : () => void
}

interface I {
>I : I

    foo: string;
>foo : string

    foo: string;
>foo : string
}

var a: {
>a : { foo: string; bar: () => {}; }

    foo: string;
>foo : string

    foo: string;
>foo : string

    bar: () => {};
>bar : () => {}

    bar: () => {};
>bar : () => {}
}

var b = {
>b : { foo: string; bar: () => void; }
>{    foo: '',    foo: '',    bar: () => { },    bar: () => { }} : { foo: string; bar: () => void; }

    foo: '',
>foo : string
>'' : ""

    foo: '',
>foo : string
>'' : ""

    bar: () => { },
>bar : () => void
>() => { } : () => void

    bar: () => { }
>bar : () => void
>() => { } : () => void
}

