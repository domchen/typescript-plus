=== tests/cases/compiler/forIn.ts ===
var arr = null;
>arr : Symbol(arr, Decl(forIn.ts, 0, 3))

for (var i:number in arr) { // error
>i : Symbol(i, Decl(forIn.ts, 1, 8))
>arr : Symbol(arr, Decl(forIn.ts, 0, 3))

    var x1 = arr[i];
>x1 : Symbol(x1, Decl(forIn.ts, 2, 7))
>arr : Symbol(arr, Decl(forIn.ts, 0, 3))
>i : Symbol(i, Decl(forIn.ts, 1, 8))

    var y1 = arr[i];
>y1 : Symbol(y1, Decl(forIn.ts, 3, 7))
>arr : Symbol(arr, Decl(forIn.ts, 0, 3))
>i : Symbol(i, Decl(forIn.ts, 1, 8))
}

for (var j in arr) { // ok
>j : Symbol(j, Decl(forIn.ts, 6, 8))
>arr : Symbol(arr, Decl(forIn.ts, 0, 3))

    var x2 = arr[j];
>x2 : Symbol(x2, Decl(forIn.ts, 7, 7))
>arr : Symbol(arr, Decl(forIn.ts, 0, 3))
>j : Symbol(j, Decl(forIn.ts, 6, 8))

    var y2 = arr[j];
>y2 : Symbol(y2, Decl(forIn.ts, 8, 7))
>arr : Symbol(arr, Decl(forIn.ts, 0, 3))
>j : Symbol(j, Decl(forIn.ts, 6, 8))
}

var arr2 = [];
>arr2 : Symbol(arr2, Decl(forIn.ts, 11, 3))

for (j in arr2) { // ok
>j : Symbol(j, Decl(forIn.ts, 6, 8))
>arr2 : Symbol(arr2, Decl(forIn.ts, 11, 3))

    var x3 = arr2[j];
>x3 : Symbol(x3, Decl(forIn.ts, 13, 7))
>arr2 : Symbol(arr2, Decl(forIn.ts, 11, 3))
>j : Symbol(j, Decl(forIn.ts, 6, 8))

    var y3 = arr2[j];
>y3 : Symbol(y3, Decl(forIn.ts, 14, 7))
>arr2 : Symbol(arr2, Decl(forIn.ts, 11, 3))
>j : Symbol(j, Decl(forIn.ts, 6, 8))
}

for (var l in arr) { 
>l : Symbol(l, Decl(forIn.ts, 17, 8))
>arr : Symbol(arr, Decl(forIn.ts, 0, 3))

   // error in the body
   k[l] = 1;
>l : Symbol(l, Decl(forIn.ts, 17, 8))
}
