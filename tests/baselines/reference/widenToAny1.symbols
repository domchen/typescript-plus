=== tests/cases/compiler/widenToAny1.ts ===
function foo1<T>(f1: { x: T; y: T }): T {
>foo1 : Symbol(foo1, Decl(widenToAny1.ts, 0, 0))
>T : Symbol(T, Decl(widenToAny1.ts, 0, 14))
>f1 : Symbol(f1, Decl(widenToAny1.ts, 0, 17))
>x : Symbol(x, Decl(widenToAny1.ts, 0, 22))
>T : Symbol(T, Decl(widenToAny1.ts, 0, 14))
>y : Symbol(y, Decl(widenToAny1.ts, 0, 28))
>T : Symbol(T, Decl(widenToAny1.ts, 0, 14))
>T : Symbol(T, Decl(widenToAny1.ts, 0, 14))

    return undefined;
>undefined : Symbol(undefined)
}
var z1: number = foo1({ x: undefined, y: "def" });  // Best common type is any
>z1 : Symbol(z1, Decl(widenToAny1.ts, 3, 3))
>foo1 : Symbol(foo1, Decl(widenToAny1.ts, 0, 0))
>x : Symbol(x, Decl(widenToAny1.ts, 3, 23))
>undefined : Symbol(undefined)
>y : Symbol(y, Decl(widenToAny1.ts, 3, 37))

