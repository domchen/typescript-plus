=== tests/cases/conformance/classes/constructorDeclarations/constructorParameters/constructorOverloadsWithDefaultValues.ts ===
class C {
>C : Symbol(C, Decl(constructorOverloadsWithDefaultValues.ts, 0, 0))

    foo: string;
>foo : Symbol(C.foo, Decl(constructorOverloadsWithDefaultValues.ts, 0, 9))

    constructor(x = 1); // error
>x : Symbol(x, Decl(constructorOverloadsWithDefaultValues.ts, 2, 16))

    constructor() {
    }
}

class D<T> {
>D : Symbol(D, Decl(constructorOverloadsWithDefaultValues.ts, 5, 1))
>T : Symbol(T, Decl(constructorOverloadsWithDefaultValues.ts, 7, 8))

    foo: string;
>foo : Symbol(D.foo, Decl(constructorOverloadsWithDefaultValues.ts, 7, 12))

    constructor(x = 1); // error
>x : Symbol(x, Decl(constructorOverloadsWithDefaultValues.ts, 9, 16))

    constructor() {
    }
}
