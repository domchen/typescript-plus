=== tests/cases/compiler/generics4.ts ===
class C<T> { private x: T; }
>C : Symbol(C, Decl(generics4.ts, 0, 0))
>T : Symbol(T, Decl(generics4.ts, 0, 8))
>x : Symbol(C.x, Decl(generics4.ts, 0, 12))
>T : Symbol(T, Decl(generics4.ts, 0, 8))

interface X { f(): string; }
>X : Symbol(X, Decl(generics4.ts, 0, 28))
>f : Symbol(X.f, Decl(generics4.ts, 1, 13))

interface Y { f(): boolean; }
>Y : Symbol(Y, Decl(generics4.ts, 1, 28))
>f : Symbol(Y.f, Decl(generics4.ts, 2, 13))

var a: C<X>;
>a : Symbol(a, Decl(generics4.ts, 3, 3))
>C : Symbol(C, Decl(generics4.ts, 0, 0))
>X : Symbol(X, Decl(generics4.ts, 0, 28))

var b: C<Y>;
>b : Symbol(b, Decl(generics4.ts, 4, 3))
>C : Symbol(C, Decl(generics4.ts, 0, 0))
>Y : Symbol(Y, Decl(generics4.ts, 1, 28))

a = b; // Not ok - return types of "f" are different
>a : Symbol(a, Decl(generics4.ts, 3, 3))
>b : Symbol(b, Decl(generics4.ts, 4, 3))

