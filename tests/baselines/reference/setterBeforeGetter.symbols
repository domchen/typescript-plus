=== tests/cases/compiler/setterBeforeGetter.ts ===
class Foo {
>Foo : Symbol(Foo, Decl(setterBeforeGetter.ts, 0, 0))

    private _bar: { a: string; };
>_bar : Symbol(Foo._bar, Decl(setterBeforeGetter.ts, 0, 11))
>a : Symbol(a, Decl(setterBeforeGetter.ts, 2, 19))

    // should not be an error to order them this way
    set bar(thing: { a: string; }) {
>bar : Symbol(Foo.bar, Decl(setterBeforeGetter.ts, 2, 33), Decl(setterBeforeGetter.ts, 6, 5))
>thing : Symbol(thing, Decl(setterBeforeGetter.ts, 4, 12))
>a : Symbol(a, Decl(setterBeforeGetter.ts, 4, 20))

        this._bar = thing;
>this._bar : Symbol(Foo._bar, Decl(setterBeforeGetter.ts, 0, 11))
>this : Symbol(Foo, Decl(setterBeforeGetter.ts, 0, 0))
>_bar : Symbol(Foo._bar, Decl(setterBeforeGetter.ts, 0, 11))
>thing : Symbol(thing, Decl(setterBeforeGetter.ts, 4, 12))
    }
    get bar(): { a: string; } {
>bar : Symbol(Foo.bar, Decl(setterBeforeGetter.ts, 2, 33), Decl(setterBeforeGetter.ts, 6, 5))
>a : Symbol(a, Decl(setterBeforeGetter.ts, 7, 16))

        return this._bar;
>this._bar : Symbol(Foo._bar, Decl(setterBeforeGetter.ts, 0, 11))
>this : Symbol(Foo, Decl(setterBeforeGetter.ts, 0, 0))
>_bar : Symbol(Foo._bar, Decl(setterBeforeGetter.ts, 0, 11))
    }
}

