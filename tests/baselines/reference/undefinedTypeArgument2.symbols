=== tests/cases/compiler/undefinedTypeArgument2.ts ===
// once caused stack overflow
interface Query<T> {
>Query : Symbol(Query, Decl(undefinedTypeArgument2.ts, 0, 0))
>T : Symbol(T, Decl(undefinedTypeArgument2.ts, 1, 16))

    selectMany<U>(selector: (item: T) => U[]): Query<U>;
>selectMany : Symbol(Query.selectMany, Decl(undefinedTypeArgument2.ts, 1, 20), Decl(undefinedTypeArgument2.ts, 2, 56))
>U : Symbol(U, Decl(undefinedTypeArgument2.ts, 2, 15))
>selector : Symbol(selector, Decl(undefinedTypeArgument2.ts, 2, 18))
>item : Symbol(item, Decl(undefinedTypeArgument2.ts, 2, 29))
>T : Symbol(T, Decl(undefinedTypeArgument2.ts, 1, 16))
>U : Symbol(U, Decl(undefinedTypeArgument2.ts, 2, 15))
>Query : Symbol(Query, Decl(undefinedTypeArgument2.ts, 0, 0))
>U : Symbol(U, Decl(undefinedTypeArgument2.ts, 2, 15))

    selectMany<U>(arraySelector: (item: T) => U[], resultSelector: (outer: T, inner: U) => R): Query<R>;
>selectMany : Symbol(Query.selectMany, Decl(undefinedTypeArgument2.ts, 1, 20), Decl(undefinedTypeArgument2.ts, 2, 56))
>U : Symbol(U, Decl(undefinedTypeArgument2.ts, 3, 15))
>arraySelector : Symbol(arraySelector, Decl(undefinedTypeArgument2.ts, 3, 18))
>item : Symbol(item, Decl(undefinedTypeArgument2.ts, 3, 34))
>T : Symbol(T, Decl(undefinedTypeArgument2.ts, 1, 16))
>U : Symbol(U, Decl(undefinedTypeArgument2.ts, 3, 15))
>resultSelector : Symbol(resultSelector, Decl(undefinedTypeArgument2.ts, 3, 50))
>outer : Symbol(outer, Decl(undefinedTypeArgument2.ts, 3, 68))
>T : Symbol(T, Decl(undefinedTypeArgument2.ts, 1, 16))
>inner : Symbol(inner, Decl(undefinedTypeArgument2.ts, 3, 77))
>U : Symbol(U, Decl(undefinedTypeArgument2.ts, 3, 15))
>Query : Symbol(Query, Decl(undefinedTypeArgument2.ts, 0, 0))
}
