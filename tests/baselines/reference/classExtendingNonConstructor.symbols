=== tests/cases/conformance/classes/classDeclarations/classExtendingNonConstructor.ts ===
var x: {};
>x : Symbol(x, Decl(classExtendingNonConstructor.ts, 0, 3))

function foo() {
>foo : Symbol(foo, Decl(classExtendingNonConstructor.ts, 0, 10))

    this.x = 1;
}

class C1 extends undefined { }
>C1 : Symbol(C1, Decl(classExtendingNonConstructor.ts, 4, 1))
>undefined : Symbol(undefined)

class C2 extends true { }
>C2 : Symbol(C2, Decl(classExtendingNonConstructor.ts, 6, 30))

class C3 extends false { }
>C3 : Symbol(C3, Decl(classExtendingNonConstructor.ts, 7, 25))

class C4 extends 42 { }
>C4 : Symbol(C4, Decl(classExtendingNonConstructor.ts, 8, 26))

class C5 extends "hello" { }
>C5 : Symbol(C5, Decl(classExtendingNonConstructor.ts, 9, 23))

class C6 extends x { }
>C6 : Symbol(C6, Decl(classExtendingNonConstructor.ts, 10, 28))
>x : Symbol(x, Decl(classExtendingNonConstructor.ts, 0, 3))

class C7 extends foo { }
>C7 : Symbol(C7, Decl(classExtendingNonConstructor.ts, 11, 22))
>foo : Symbol(foo, Decl(classExtendingNonConstructor.ts, 0, 10))

