=== tests/cases/compiler/b.ts ===
export const zzz = 123;
>zzz : Symbol(zzz, Decl(b.ts, 0, 12))

export default zzz;
>zzz : Symbol(zzz, Decl(b.ts, 0, 12))

=== tests/cases/compiler/a.ts ===
export default interface zzz {
>zzz : Symbol(zzz, Decl(a.ts, 0, 0), Decl(a.ts, 9, 8))

    x: string;
>x : Symbol(zzz.x, Decl(a.ts, 0, 30))
}

import zzz from "./b";
>zzz : Symbol(zzz, Decl(a.ts, 0, 0), Decl(a.ts, 4, 6))

const x: zzz = { x: "" };
>x : Symbol(x, Decl(a.ts, 6, 5))
>zzz : Symbol(zzz, Decl(a.ts, 0, 0), Decl(a.ts, 9, 8))
>x : Symbol(x, Decl(a.ts, 6, 16))

zzz;
>zzz : Symbol(zzz, Decl(a.ts, 0, 0), Decl(a.ts, 4, 6))

export { zzz as default };
>zzz : Symbol(zzz, Decl(a.ts, 0, 0), Decl(a.ts, 9, 8))
>default : Symbol(zzz, Decl(a.ts, 0, 0), Decl(a.ts, 9, 8))

=== tests/cases/compiler/index.ts ===
import zzz from "./a";
>zzz : Symbol(zzz, Decl(index.ts, 0, 6))

const x: zzz = { x: "" };
>x : Symbol(x, Decl(index.ts, 2, 5))
>zzz : Symbol(zzz, Decl(index.ts, 0, 6))
>x : Symbol(x, Decl(index.ts, 2, 16))

zzz;

import originalZZZ from "./b";
>originalZZZ : Symbol(originalZZZ, Decl(index.ts, 5, 6))

originalZZZ;
>originalZZZ : Symbol(originalZZZ, Decl(index.ts, 5, 6))

const y: originalZZZ = x;
>y : Symbol(y, Decl(index.ts, 8, 5))
>x : Symbol(x, Decl(index.ts, 2, 5))

