tests/cases/conformance/types/typeRelationships/apparentType/apparentTypeSupertype.ts(10,5): error TS2416: Property 'x' in type 'Derived<U>' is not assignable to the same property in base type 'Base'.
  Type 'U' is not assignable to type 'string'.
    Type 'String' is not assignable to type 'string'.
      'string' is a primitive, but 'String' is a wrapper object. Prefer using 'string' when possible.


==== tests/cases/conformance/types/typeRelationships/apparentType/apparentTypeSupertype.ts (1 errors) ====
    // subtype checks use the apparent type of the target type
    // S is a subtype of a type T, and T is a supertype of S, if one of the following is true, where S' denotes the apparent type (section 3.8.1) of S:
    
    class Base {
        x: string;
    }
    
    // is String (S) a subtype of U extends String (T)? Would only be true if we used the apparent type of U (T)
    class Derived<U extends String> extends Base { // error
        x: U;
        ~
!!! error TS2416: Property 'x' in type 'Derived<U>' is not assignable to the same property in base type 'Base'.
!!! error TS2416:   Type 'U' is not assignable to type 'string'.
!!! error TS2416:     Type 'String' is not assignable to type 'string'.
!!! error TS2416:       'string' is a primitive, but 'String' is a wrapper object. Prefer using 'string' when possible.
    }