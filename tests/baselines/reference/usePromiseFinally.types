=== tests/cases/conformance/es2018/usePromiseFinally.ts ===
let promise1 = new Promise(function(resolve, reject) {})
>promise1 : Promise<{}>
>new Promise(function(resolve, reject) {})                .finally(function() {}) : Promise<{}>
>new Promise(function(resolve, reject) {})                .finally : (onfinally?: () => void) => Promise<{}>
>new Promise(function(resolve, reject) {}) : Promise<{}>
>Promise : PromiseConstructor
>function(resolve, reject) {} : (resolve: (value?: {} | PromiseLike<{}>) => void, reject: (reason?: any) => void) => void
>resolve : (value?: {} | PromiseLike<{}>) => void
>reject : (reason?: any) => void

                .finally(function() {});
>finally : (onfinally?: () => void) => Promise<{}>
>function() {} : () => void

