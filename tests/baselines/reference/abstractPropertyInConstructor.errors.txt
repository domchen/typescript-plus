tests/cases/compiler/abstractPropertyInConstructor.ts(4,24): error TS2715: Abstract property 'prop' in class 'AbstractClass' cannot be accessed in the constructor.
tests/cases/compiler/abstractPropertyInConstructor.ts(7,18): error TS2715: Abstract property 'prop' in class 'AbstractClass' cannot be accessed in the constructor.
tests/cases/compiler/abstractPropertyInConstructor.ts(9,14): error TS2715: Abstract property 'cb' in class 'AbstractClass' cannot be accessed in the constructor.


==== tests/cases/compiler/abstractPropertyInConstructor.ts (3 errors) ====
    abstract class AbstractClass {
        constructor(str: string, other: AbstractClass) {
            this.method(parseInt(str));
            let val = this.prop.toLowerCase();
                           ~~~~
!!! error TS2715: Abstract property 'prop' in class 'AbstractClass' cannot be accessed in the constructor.
    
            if (!str) {
                this.prop = "Hello World";
                     ~~~~
!!! error TS2715: Abstract property 'prop' in class 'AbstractClass' cannot be accessed in the constructor.
            }
            this.cb(str);
                 ~~
!!! error TS2715: Abstract property 'cb' in class 'AbstractClass' cannot be accessed in the constructor.
    
            // OK, reference is inside function
            const innerFunction = () => {
                return this.prop;
            }
    
            // OK, references are to another instance
            other.cb(other.prop);
        }
    
        abstract prop: string;
        abstract cb: (s: string) => void;
    
        abstract method(num: number): void;
    
        method2() {
            this.prop = this.prop + "!";
        }
    }
    
    class User {
        constructor(a: AbstractClass) {
            a.prop;
            a.cb("hi");
            a.method(12);
            a.method2();
        }
    }
    