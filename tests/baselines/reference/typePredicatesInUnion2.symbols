=== tests/cases/compiler/typePredicatesInUnion2.ts ===
declare function isString(x: any): x is string;
>isString : Symbol(isString, Decl(typePredicatesInUnion2.ts, 0, 0))
>x : Symbol(x, Decl(typePredicatesInUnion2.ts, 0, 26))
>x : Symbol(x, Decl(typePredicatesInUnion2.ts, 0, 26))

declare function isNumber(x: any): x is number;
>isNumber : Symbol(isNumber, Decl(typePredicatesInUnion2.ts, 0, 47))
>x : Symbol(x, Decl(typePredicatesInUnion2.ts, 1, 26))
>x : Symbol(x, Decl(typePredicatesInUnion2.ts, 1, 26))

declare function f(p: typeof isString | typeof isNumber): void;
>f : Symbol(f, Decl(typePredicatesInUnion2.ts, 1, 47))
>p : Symbol(p, Decl(typePredicatesInUnion2.ts, 2, 19))
>isString : Symbol(isString, Decl(typePredicatesInUnion2.ts, 0, 0))
>isNumber : Symbol(isNumber, Decl(typePredicatesInUnion2.ts, 0, 47))

f(isString);
>f : Symbol(f, Decl(typePredicatesInUnion2.ts, 1, 47))
>isString : Symbol(isString, Decl(typePredicatesInUnion2.ts, 0, 0))

f(isNumber);
>f : Symbol(f, Decl(typePredicatesInUnion2.ts, 1, 47))
>isNumber : Symbol(isNumber, Decl(typePredicatesInUnion2.ts, 0, 47))

