=== tests/cases/compiler/declarationEmitNestedGenerics.ts ===
function f<T>(p: T) {
>f : <T>(p: T) => <T>(x: T) => T
>p : T

    let g: <T>(x: T) => typeof p = null as any;
>g : <T>(x: T) => T
>x : T
>p : T
>null as any : any
>null : null

    return g;
>g : <T>(x: T) => T
}

function g<T>(x: T) {
>g : <T>(x: T) => T extends (infer T)[] ? T : T
>x : T

    let y: typeof x extends (infer T)[] ? T : typeof x = null as any;
>y : T extends (infer T)[] ? T : T
>x : T
>x : T
>null as any : any
>null : null

    return y;
>y : T extends (infer T)[] ? T : T
}
