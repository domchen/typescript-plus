=== tests/cases/conformance/classes/classDeclarations/classAbstractKeyword/classAbstractExtends.ts ===
class A {
>A : Symbol(A, Decl(classAbstractExtends.ts, 0, 0))

    foo() {}
>foo : Symbol(A.foo, Decl(classAbstractExtends.ts, 0, 9))
}

abstract class B extends A {
>B : Symbol(B, Decl(classAbstractExtends.ts, 2, 1))
>A : Symbol(A, Decl(classAbstractExtends.ts, 0, 0))

    abstract bar();
>bar : Symbol(B.bar, Decl(classAbstractExtends.ts, 4, 28))
}

class C extends B { }
>C : Symbol(C, Decl(classAbstractExtends.ts, 6, 1))
>B : Symbol(B, Decl(classAbstractExtends.ts, 2, 1))

abstract class D extends B {}
>D : Symbol(D, Decl(classAbstractExtends.ts, 8, 21))
>B : Symbol(B, Decl(classAbstractExtends.ts, 2, 1))

class E extends B {
>E : Symbol(E, Decl(classAbstractExtends.ts, 10, 29))
>B : Symbol(B, Decl(classAbstractExtends.ts, 2, 1))

    bar() {}
>bar : Symbol(E.bar, Decl(classAbstractExtends.ts, 12, 19))
}
