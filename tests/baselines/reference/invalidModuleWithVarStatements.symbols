=== tests/cases/conformance/internalModules/moduleBody/invalidModuleWithVarStatements.ts ===
// All of these should be an error

module Y {
>Y : Symbol(Y, Decl(invalidModuleWithVarStatements.ts, 0, 0))

    public var x: number = 0;
>x : Symbol(x, Decl(invalidModuleWithVarStatements.ts, 3, 14))
}

module Y2 {
>Y2 : Symbol(Y2, Decl(invalidModuleWithVarStatements.ts, 4, 1))

    public function fn(x: string) { }
>fn : Symbol(fn, Decl(invalidModuleWithVarStatements.ts, 6, 11))
>x : Symbol(x, Decl(invalidModuleWithVarStatements.ts, 7, 23))
}

module Y4 {
>Y4 : Symbol(Y4, Decl(invalidModuleWithVarStatements.ts, 8, 1))

    static var x: number = 0;
>x : Symbol(x, Decl(invalidModuleWithVarStatements.ts, 11, 14))
}

module YY {
>YY : Symbol(YY, Decl(invalidModuleWithVarStatements.ts, 12, 1))

    static function fn(x: string) { }
>fn : Symbol(fn, Decl(invalidModuleWithVarStatements.ts, 14, 11))
>x : Symbol(x, Decl(invalidModuleWithVarStatements.ts, 15, 23))
}

module YY2 {
>YY2 : Symbol(YY2, Decl(invalidModuleWithVarStatements.ts, 16, 1))

    private var x: number = 0;
>x : Symbol(x, Decl(invalidModuleWithVarStatements.ts, 19, 15))
}


module YY3 {
>YY3 : Symbol(YY3, Decl(invalidModuleWithVarStatements.ts, 20, 1))

    private function fn(x: string) { }
>fn : Symbol(fn, Decl(invalidModuleWithVarStatements.ts, 23, 12))
>x : Symbol(x, Decl(invalidModuleWithVarStatements.ts, 24, 24))
}

