=== tests/cases/conformance/types/import/importTypeAmbient.ts ===
declare module "foo" {
>"foo" : Symbol("foo", Decl(importTypeAmbient.ts, 0, 0))

    interface Point {
>Point : Symbol(Point, Decl(importTypeAmbient.ts, 0, 22))

        x: number;
>x : Symbol(Point.x, Decl(importTypeAmbient.ts, 1, 21))

        y: number;
>y : Symbol(Point.y, Decl(importTypeAmbient.ts, 2, 18))
    }
    export = Point;
>Point : Symbol(Point, Decl(importTypeAmbient.ts, 0, 22))
}
const x: import("foo") = { x: 0, y: 0 };
>x : Symbol(x, Decl(importTypeAmbient.ts, 7, 5))
>x : Symbol(x, Decl(importTypeAmbient.ts, 7, 26))
>y : Symbol(y, Decl(importTypeAmbient.ts, 7, 32))

declare module "foo2" {
>"foo2" : Symbol("foo2", Decl(importTypeAmbient.ts, 7, 40))

    namespace Bar {
>Bar : Symbol(Bar, Decl(importTypeAmbient.ts, 9, 23), Decl(importTypeAmbient.ts, 22, 5))

        interface I {
>I : Symbol(I, Decl(importTypeAmbient.ts, 10, 19))

            a: string;
>a : Symbol(I.a, Decl(importTypeAmbient.ts, 11, 21))

            b: number;
>b : Symbol(I.b, Decl(importTypeAmbient.ts, 12, 22))
        }
    }

    namespace Baz {
>Baz : Symbol(Baz, Decl(importTypeAmbient.ts, 15, 5))

        interface J {
>J : Symbol(J, Decl(importTypeAmbient.ts, 17, 19))

            a: number;
>a : Symbol(J.a, Decl(importTypeAmbient.ts, 18, 21))

            b: string;
>b : Symbol(J.b, Decl(importTypeAmbient.ts, 19, 22))
        }
    }

    class Bar {
>Bar : Symbol(Bar, Decl(importTypeAmbient.ts, 9, 23), Decl(importTypeAmbient.ts, 22, 5))

        item: Bar.I;
>item : Symbol(Bar.item, Decl(importTypeAmbient.ts, 24, 15))
>Bar : Symbol(Bar, Decl(importTypeAmbient.ts, 9, 23), Decl(importTypeAmbient.ts, 22, 5))
>I : Symbol(Bar.I, Decl(importTypeAmbient.ts, 10, 19))

        constructor(input: Baz.J);
>input : Symbol(input, Decl(importTypeAmbient.ts, 26, 20))
>Baz : Symbol(Baz, Decl(importTypeAmbient.ts, 15, 5))
>J : Symbol(Baz.J, Decl(importTypeAmbient.ts, 17, 19))
    }
}

let y: import("foo2").Bar.I = { a: "", b: 0 };
>y : Symbol(y, Decl(importTypeAmbient.ts, 30, 3))
>Bar : Symbol(Bar, Decl(importTypeAmbient.ts, 9, 23), Decl(importTypeAmbient.ts, 22, 5))
>I : Symbol(Bar.I, Decl(importTypeAmbient.ts, 10, 19))
>a : Symbol(a, Decl(importTypeAmbient.ts, 30, 31))
>b : Symbol(b, Decl(importTypeAmbient.ts, 30, 38))

class Bar2 {
>Bar2 : Symbol(Bar2, Decl(importTypeAmbient.ts, 30, 46))

    item: {a: string, b: number, c: object};
>item : Symbol(Bar2.item, Decl(importTypeAmbient.ts, 32, 12))
>a : Symbol(a, Decl(importTypeAmbient.ts, 33, 11))
>b : Symbol(b, Decl(importTypeAmbient.ts, 33, 21))
>c : Symbol(c, Decl(importTypeAmbient.ts, 33, 32))

    constructor(input?: any) {}
>input : Symbol(input, Decl(importTypeAmbient.ts, 34, 16))
}

let shim: typeof import("foo2") = {
>shim : Symbol(shim, Decl(importTypeAmbient.ts, 37, 3))

    Bar: Bar2
>Bar : Symbol(Bar, Decl(importTypeAmbient.ts, 37, 35))
>Bar2 : Symbol(Bar2, Decl(importTypeAmbient.ts, 30, 46))

};

