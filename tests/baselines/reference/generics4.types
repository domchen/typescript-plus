=== tests/cases/compiler/generics4.ts ===
class C<T> { private x: T; }
>C : C<T>
>T : T
>x : T
>T : T

interface X { f(): string; }
>X : X
>f : () => string

interface Y { f(): boolean; }
>Y : Y
>f : () => boolean

var a: C<X>;
>a : C<X>
>C : C<T>
>X : X

var b: C<Y>;
>b : C<Y>
>C : C<T>
>Y : Y

a = b; // Not ok - return types of "f" are different
>a = b : C<Y>
>a : C<X>
>b : C<Y>

