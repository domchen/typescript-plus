=== tests/cases/compiler/typeParameterAssignmentCompat1.ts ===
interface Foo<T> {
>Foo : Symbol(Foo, Decl(typeParameterAssignmentCompat1.ts, 0, 0))
>T : Symbol(T, Decl(typeParameterAssignmentCompat1.ts, 0, 14))

    frobble(value: T): T;
>frobble : Symbol(Foo.frobble, Decl(typeParameterAssignmentCompat1.ts, 0, 18))
>value : Symbol(value, Decl(typeParameterAssignmentCompat1.ts, 1, 12))
>T : Symbol(T, Decl(typeParameterAssignmentCompat1.ts, 0, 14))
>T : Symbol(T, Decl(typeParameterAssignmentCompat1.ts, 0, 14))
}

function f<T, U>(): Foo<U> {
>f : Symbol(f, Decl(typeParameterAssignmentCompat1.ts, 2, 1))
>T : Symbol(T, Decl(typeParameterAssignmentCompat1.ts, 4, 11))
>U : Symbol(U, Decl(typeParameterAssignmentCompat1.ts, 4, 13))
>Foo : Symbol(Foo, Decl(typeParameterAssignmentCompat1.ts, 0, 0))
>U : Symbol(U, Decl(typeParameterAssignmentCompat1.ts, 4, 13))

    var x: Foo<T>;
>x : Symbol(x, Decl(typeParameterAssignmentCompat1.ts, 5, 7))
>Foo : Symbol(Foo, Decl(typeParameterAssignmentCompat1.ts, 0, 0))
>T : Symbol(T, Decl(typeParameterAssignmentCompat1.ts, 4, 11))

    var y: Foo<U>;
>y : Symbol(y, Decl(typeParameterAssignmentCompat1.ts, 6, 7))
>Foo : Symbol(Foo, Decl(typeParameterAssignmentCompat1.ts, 0, 0))
>U : Symbol(U, Decl(typeParameterAssignmentCompat1.ts, 4, 13))

    x = y; // should be an error
>x : Symbol(x, Decl(typeParameterAssignmentCompat1.ts, 5, 7))
>y : Symbol(y, Decl(typeParameterAssignmentCompat1.ts, 6, 7))

    return x;
>x : Symbol(x, Decl(typeParameterAssignmentCompat1.ts, 5, 7))
}

class C<T> {
>C : Symbol(C, Decl(typeParameterAssignmentCompat1.ts, 9, 1))
>T : Symbol(T, Decl(typeParameterAssignmentCompat1.ts, 11, 8))

    f<U>(): Foo<U> {
>f : Symbol(C.f, Decl(typeParameterAssignmentCompat1.ts, 11, 12))
>U : Symbol(U, Decl(typeParameterAssignmentCompat1.ts, 12, 6))
>Foo : Symbol(Foo, Decl(typeParameterAssignmentCompat1.ts, 0, 0))
>U : Symbol(U, Decl(typeParameterAssignmentCompat1.ts, 12, 6))

        var x: Foo<T>;
>x : Symbol(x, Decl(typeParameterAssignmentCompat1.ts, 13, 11))
>Foo : Symbol(Foo, Decl(typeParameterAssignmentCompat1.ts, 0, 0))
>T : Symbol(T, Decl(typeParameterAssignmentCompat1.ts, 11, 8))

        var y: Foo<U>;
>y : Symbol(y, Decl(typeParameterAssignmentCompat1.ts, 14, 11))
>Foo : Symbol(Foo, Decl(typeParameterAssignmentCompat1.ts, 0, 0))
>U : Symbol(U, Decl(typeParameterAssignmentCompat1.ts, 12, 6))

        x = y; // should be an error
>x : Symbol(x, Decl(typeParameterAssignmentCompat1.ts, 13, 11))
>y : Symbol(y, Decl(typeParameterAssignmentCompat1.ts, 14, 11))

        return x;
>x : Symbol(x, Decl(typeParameterAssignmentCompat1.ts, 13, 11))
    }
}
