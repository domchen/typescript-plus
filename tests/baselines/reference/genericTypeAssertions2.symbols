=== tests/cases/compiler/genericTypeAssertions2.ts ===
class A<T> { foo(x: T) { } }
>A : Symbol(A, Decl(genericTypeAssertions2.ts, 0, 0))
>T : Symbol(T, Decl(genericTypeAssertions2.ts, 0, 8))
>foo : Symbol(A.foo, Decl(genericTypeAssertions2.ts, 0, 12))
>x : Symbol(x, Decl(genericTypeAssertions2.ts, 0, 17))
>T : Symbol(T, Decl(genericTypeAssertions2.ts, 0, 8))

class B<T> extends A<T> {
>B : Symbol(B, Decl(genericTypeAssertions2.ts, 0, 28))
>T : Symbol(T, Decl(genericTypeAssertions2.ts, 1, 8))
>A : Symbol(A, Decl(genericTypeAssertions2.ts, 0, 0))
>T : Symbol(T, Decl(genericTypeAssertions2.ts, 1, 8))

    bar(): T {
>bar : Symbol(B.bar, Decl(genericTypeAssertions2.ts, 1, 25))
>T : Symbol(T, Decl(genericTypeAssertions2.ts, 1, 8))

        return null;
    }
}

var foo = new A<number>();
>foo : Symbol(foo, Decl(genericTypeAssertions2.ts, 7, 3))
>A : Symbol(A, Decl(genericTypeAssertions2.ts, 0, 0))

var r: A<string> = <B<string>>new B();
>r : Symbol(r, Decl(genericTypeAssertions2.ts, 8, 3))
>A : Symbol(A, Decl(genericTypeAssertions2.ts, 0, 0))
>B : Symbol(B, Decl(genericTypeAssertions2.ts, 0, 28))
>B : Symbol(B, Decl(genericTypeAssertions2.ts, 0, 28))

var r2: A<number> = <B<string>>new B(); // error
>r2 : Symbol(r2, Decl(genericTypeAssertions2.ts, 9, 3))
>A : Symbol(A, Decl(genericTypeAssertions2.ts, 0, 0))
>B : Symbol(B, Decl(genericTypeAssertions2.ts, 0, 28))
>B : Symbol(B, Decl(genericTypeAssertions2.ts, 0, 28))

var r3: B<number> = <A<number>>new B(); // error
>r3 : Symbol(r3, Decl(genericTypeAssertions2.ts, 10, 3))
>B : Symbol(B, Decl(genericTypeAssertions2.ts, 0, 28))
>A : Symbol(A, Decl(genericTypeAssertions2.ts, 0, 0))
>B : Symbol(B, Decl(genericTypeAssertions2.ts, 0, 28))

var r4: A<number> = <A<number>>new A();
>r4 : Symbol(r4, Decl(genericTypeAssertions2.ts, 11, 3))
>A : Symbol(A, Decl(genericTypeAssertions2.ts, 0, 0))
>A : Symbol(A, Decl(genericTypeAssertions2.ts, 0, 0))
>A : Symbol(A, Decl(genericTypeAssertions2.ts, 0, 0))

var r5: A<number> = <A<number>>[]; // error
>r5 : Symbol(r5, Decl(genericTypeAssertions2.ts, 12, 3))
>A : Symbol(A, Decl(genericTypeAssertions2.ts, 0, 0))
>A : Symbol(A, Decl(genericTypeAssertions2.ts, 0, 0))

