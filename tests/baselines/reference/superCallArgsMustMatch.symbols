=== tests/cases/compiler/superCallArgsMustMatch.ts ===
class T5<T>{
>T5 : Symbol(T5, Decl(superCallArgsMustMatch.ts, 0, 0))
>T : Symbol(T, Decl(superCallArgsMustMatch.ts, 0, 9))

    public foo: T;
>foo : Symbol(T5.foo, Decl(superCallArgsMustMatch.ts, 0, 12))
>T : Symbol(T, Decl(superCallArgsMustMatch.ts, 0, 9))

    constructor(public bar: T) { }
>bar : Symbol(T5.bar, Decl(superCallArgsMustMatch.ts, 4, 16))
>T : Symbol(T, Decl(superCallArgsMustMatch.ts, 0, 9))

}

 

class T6 extends T5<number>{
>T6 : Symbol(T6, Decl(superCallArgsMustMatch.ts, 6, 1))
>T5 : Symbol(T5, Decl(superCallArgsMustMatch.ts, 0, 0))

    constructor() {

        // Should error; base constructor has type T for first arg,
        // which is instantiated with 'number' in the extends clause
        super("hi");
>super : Symbol(T5, Decl(superCallArgsMustMatch.ts, 0, 0))

        var x: number = this.foo;
>x : Symbol(x, Decl(superCallArgsMustMatch.ts, 18, 11))
>this.foo : Symbol(T5.foo, Decl(superCallArgsMustMatch.ts, 0, 12))
>this : Symbol(T6, Decl(superCallArgsMustMatch.ts, 6, 1))
>foo : Symbol(T5.foo, Decl(superCallArgsMustMatch.ts, 0, 12))

    }

}


