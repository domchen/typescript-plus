=== tests/cases/conformance/types/literal/literalTypesWidenInParameterPosition.ts ===
class D {
>D : Symbol(D, Decl(literalTypesWidenInParameterPosition.ts, 0, 0))

    readonly noWiden = 1
>noWiden : Symbol(D.noWiden, Decl(literalTypesWidenInParameterPosition.ts, 0, 9))

    constructor(readonly widen = 2) {
>widen : Symbol(D.widen, Decl(literalTypesWidenInParameterPosition.ts, 2, 16))

        this.noWiden = 5; // error
>this.noWiden : Symbol(D.noWiden, Decl(literalTypesWidenInParameterPosition.ts, 0, 9))
>this : Symbol(D, Decl(literalTypesWidenInParameterPosition.ts, 0, 0))
>noWiden : Symbol(D.noWiden, Decl(literalTypesWidenInParameterPosition.ts, 0, 9))

        this.widen = 6; // ok
>this.widen : Symbol(D.widen, Decl(literalTypesWidenInParameterPosition.ts, 2, 16))
>this : Symbol(D, Decl(literalTypesWidenInParameterPosition.ts, 0, 0))
>widen : Symbol(D.widen, Decl(literalTypesWidenInParameterPosition.ts, 2, 16))
    }
}
new D(7); // ok
>D : Symbol(D, Decl(literalTypesWidenInParameterPosition.ts, 0, 0))

