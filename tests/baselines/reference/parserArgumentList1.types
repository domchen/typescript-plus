=== tests/cases/conformance/parser/ecmascript5/parserArgumentList1.ts ===
export function removeClass (node:HTMLElement, className:string) {
>removeClass : (node: any, className: string) => void
>node : any
>HTMLElement : No type information available!
>className : string

	node.className = node.className.replace(_classNameRegexp(className), function (everything, leftDelimiter, name, rightDelimiter) {
>node.className = node.className.replace(_classNameRegexp(className), function (everything, leftDelimiter, name, rightDelimiter) {		return leftDelimiter.length + rightDelimiter.length === 2 ? ' ' : '';	}) : any
>node.className : any
>node : any
>className : any
>node.className.replace(_classNameRegexp(className), function (everything, leftDelimiter, name, rightDelimiter) {		return leftDelimiter.length + rightDelimiter.length === 2 ? ' ' : '';	}) : any
>node.className.replace : any
>node.className : any
>node : any
>className : any
>replace : any
>_classNameRegexp(className) : any
>_classNameRegexp : any
>className : string
>function (everything, leftDelimiter, name, rightDelimiter) {		return leftDelimiter.length + rightDelimiter.length === 2 ? ' ' : '';	} : (everything: any, leftDelimiter: any, name: any, rightDelimiter: any) => " " | ""
>everything : any
>leftDelimiter : any
>name : any
>rightDelimiter : any

		return leftDelimiter.length + rightDelimiter.length === 2 ? ' ' : '';
>leftDelimiter.length + rightDelimiter.length === 2 ? ' ' : '' : " " | ""
>leftDelimiter.length + rightDelimiter.length === 2 : boolean
>leftDelimiter.length + rightDelimiter.length : any
>leftDelimiter.length : any
>leftDelimiter : any
>length : any
>rightDelimiter.length : any
>rightDelimiter : any
>length : any
>2 : 2
>' ' : " "
>'' : ""

	});
}
