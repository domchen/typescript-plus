=== tests/cases/compiler/jsxSpreadFirstUnionNoErrors.tsx ===
import React from "react";
>React : Symbol(React, Decl(jsxSpreadFirstUnionNoErrors.tsx, 0, 6))

type InfoProps =
>InfoProps : Symbol(InfoProps, Decl(jsxSpreadFirstUnionNoErrors.tsx, 0, 26))

| { status: "hidden" }
>status : Symbol(status, Decl(jsxSpreadFirstUnionNoErrors.tsx, 3, 3))

| { status: "visible"; content: string };
>status : Symbol(status, Decl(jsxSpreadFirstUnionNoErrors.tsx, 4, 3))
>content : Symbol(content, Decl(jsxSpreadFirstUnionNoErrors.tsx, 4, 22))

const Info = (props: InfoProps) =>
>Info : Symbol(Info, Decl(jsxSpreadFirstUnionNoErrors.tsx, 6, 5))
>props : Symbol(props, Decl(jsxSpreadFirstUnionNoErrors.tsx, 6, 14))
>InfoProps : Symbol(InfoProps, Decl(jsxSpreadFirstUnionNoErrors.tsx, 0, 26))

props.status === "hidden"
>props.status : Symbol(status, Decl(jsxSpreadFirstUnionNoErrors.tsx, 3, 3), Decl(jsxSpreadFirstUnionNoErrors.tsx, 4, 3))
>props : Symbol(props, Decl(jsxSpreadFirstUnionNoErrors.tsx, 6, 14))
>status : Symbol(status, Decl(jsxSpreadFirstUnionNoErrors.tsx, 3, 3), Decl(jsxSpreadFirstUnionNoErrors.tsx, 4, 3))

  ? <noscript />
>noscript : Symbol(JSX.IntrinsicElements.noscript, Decl(react.d.ts, 2439, 42))

  : <div>{props.content}</div>;
>div : Symbol(JSX.IntrinsicElements.div, Decl(react.d.ts, 2400, 45))
>props.content : Symbol(content, Decl(jsxSpreadFirstUnionNoErrors.tsx, 4, 22))
>props : Symbol(props, Decl(jsxSpreadFirstUnionNoErrors.tsx, 6, 14))
>content : Symbol(content, Decl(jsxSpreadFirstUnionNoErrors.tsx, 4, 22))
>div : Symbol(JSX.IntrinsicElements.div, Decl(react.d.ts, 2400, 45))

const a = <Info status="hidden" />;
>a : Symbol(a, Decl(jsxSpreadFirstUnionNoErrors.tsx, 11, 5))
>Info : Symbol(Info, Decl(jsxSpreadFirstUnionNoErrors.tsx, 6, 5))
>status : Symbol(status, Decl(jsxSpreadFirstUnionNoErrors.tsx, 11, 15))

const b = <Info status="visible" content="hello world" />;
>b : Symbol(b, Decl(jsxSpreadFirstUnionNoErrors.tsx, 12, 5))
>Info : Symbol(Info, Decl(jsxSpreadFirstUnionNoErrors.tsx, 6, 5))
>status : Symbol(status, Decl(jsxSpreadFirstUnionNoErrors.tsx, 12, 15))
>content : Symbol(content, Decl(jsxSpreadFirstUnionNoErrors.tsx, 12, 32))

declare const infoProps: InfoProps;
>infoProps : Symbol(infoProps, Decl(jsxSpreadFirstUnionNoErrors.tsx, 13, 13))
>InfoProps : Symbol(InfoProps, Decl(jsxSpreadFirstUnionNoErrors.tsx, 0, 26))

const c = <Info {...infoProps} />;
>c : Symbol(c, Decl(jsxSpreadFirstUnionNoErrors.tsx, 15, 5))
>Info : Symbol(Info, Decl(jsxSpreadFirstUnionNoErrors.tsx, 6, 5))
>infoProps : Symbol(infoProps, Decl(jsxSpreadFirstUnionNoErrors.tsx, 13, 13))

