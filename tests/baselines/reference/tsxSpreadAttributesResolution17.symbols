=== tests/cases/conformance/jsx/file.tsx ===
declare global {
>global : Symbol(global, Decl(file.tsx, 0, 0))

    namespace JSX {
>JSX : Symbol(JSX, Decl(file.tsx, 0, 16))

        interface Element {}
>Element : Symbol(Element, Decl(file.tsx, 1, 19))

        interface ElementAttributesProperty { props: {} }
>ElementAttributesProperty : Symbol(ElementAttributesProperty, Decl(file.tsx, 2, 28))
>props : Symbol(ElementAttributesProperty.props, Decl(file.tsx, 3, 45))
    }
}
declare var React: any;
>React : Symbol(React, Decl(file.tsx, 6, 11))

export class Empty extends React.Component<{}, {}> {
>Empty : Symbol(Empty, Decl(file.tsx, 6, 23))
>React : Symbol(React, Decl(file.tsx, 6, 11))

    render() {
>render : Symbol(Empty.render, Decl(file.tsx, 8, 52))

        return <div>Hello</div>;
    }
}

declare const obj: { a: number | undefined } | undefined;
>obj : Symbol(obj, Decl(file.tsx, 14, 13))
>a : Symbol(a, Decl(file.tsx, 14, 20))

// OK
let unionedSpread = <Empty {...obj} />;
>unionedSpread : Symbol(unionedSpread, Decl(file.tsx, 17, 3))
>Empty : Symbol(Empty, Decl(file.tsx, 6, 23))
>obj : Symbol(obj, Decl(file.tsx, 14, 13))

