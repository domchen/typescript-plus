=== tests/cases/compiler/objectLiteralExcessProperties.ts ===
interface Book {
>Book : Symbol(Book, Decl(objectLiteralExcessProperties.ts, 0, 0))

    foreword: string;
>foreword : Symbol(Book.foreword, Decl(objectLiteralExcessProperties.ts, 0, 16))
}

interface Cover {
>Cover : Symbol(Cover, Decl(objectLiteralExcessProperties.ts, 2, 1))

    color?: string;
>color : Symbol(Cover.color, Decl(objectLiteralExcessProperties.ts, 4, 17))
}

var b1: Book = { forword: "oops" };
>b1 : Symbol(b1, Decl(objectLiteralExcessProperties.ts, 8, 3))
>Book : Symbol(Book, Decl(objectLiteralExcessProperties.ts, 0, 0))
>forword : Symbol(forword, Decl(objectLiteralExcessProperties.ts, 8, 16))

var b2: Book | string = { foreward: "nope" };
>b2 : Symbol(b2, Decl(objectLiteralExcessProperties.ts, 10, 3))
>Book : Symbol(Book, Decl(objectLiteralExcessProperties.ts, 0, 0))
>foreward : Symbol(foreward, Decl(objectLiteralExcessProperties.ts, 10, 25))

var b3: Book | (Book[]) = [{ foreword: "hello" }, { forwards: "back" }];
>b3 : Symbol(b3, Decl(objectLiteralExcessProperties.ts, 12, 3))
>Book : Symbol(Book, Decl(objectLiteralExcessProperties.ts, 0, 0))
>Book : Symbol(Book, Decl(objectLiteralExcessProperties.ts, 0, 0))
>foreword : Symbol(foreword, Decl(objectLiteralExcessProperties.ts, 12, 28))
>forwards : Symbol(forwards, Decl(objectLiteralExcessProperties.ts, 12, 51))

var b4: Book & Cover = { foreword: "hi", colour: "blue" };
>b4 : Symbol(b4, Decl(objectLiteralExcessProperties.ts, 14, 3))
>Book : Symbol(Book, Decl(objectLiteralExcessProperties.ts, 0, 0))
>Cover : Symbol(Cover, Decl(objectLiteralExcessProperties.ts, 2, 1))
>foreword : Symbol(foreword, Decl(objectLiteralExcessProperties.ts, 14, 24))
>colour : Symbol(colour, Decl(objectLiteralExcessProperties.ts, 14, 40))

var b5: Book & Cover = { foreward: "hi", color: "blue" };
>b5 : Symbol(b5, Decl(objectLiteralExcessProperties.ts, 16, 3))
>Book : Symbol(Book, Decl(objectLiteralExcessProperties.ts, 0, 0))
>Cover : Symbol(Cover, Decl(objectLiteralExcessProperties.ts, 2, 1))
>foreward : Symbol(foreward, Decl(objectLiteralExcessProperties.ts, 16, 24))
>color : Symbol(color, Decl(objectLiteralExcessProperties.ts, 16, 40))

var b6: Book & Cover = { foreword: "hi", color: "blue", price: 10.99 };
>b6 : Symbol(b6, Decl(objectLiteralExcessProperties.ts, 18, 3))
>Book : Symbol(Book, Decl(objectLiteralExcessProperties.ts, 0, 0))
>Cover : Symbol(Cover, Decl(objectLiteralExcessProperties.ts, 2, 1))
>foreword : Symbol(foreword, Decl(objectLiteralExcessProperties.ts, 18, 24))
>color : Symbol(color, Decl(objectLiteralExcessProperties.ts, 18, 40))
>price : Symbol(price, Decl(objectLiteralExcessProperties.ts, 18, 55))

var b7: Book & number = { foreword: "hi", price: 10.99 };
>b7 : Symbol(b7, Decl(objectLiteralExcessProperties.ts, 20, 3))
>Book : Symbol(Book, Decl(objectLiteralExcessProperties.ts, 0, 0))
>foreword : Symbol(foreword, Decl(objectLiteralExcessProperties.ts, 20, 25))
>price : Symbol(price, Decl(objectLiteralExcessProperties.ts, 20, 41))

var b8: Cover | Cover[] = { couleur : "non" };
>b8 : Symbol(b8, Decl(objectLiteralExcessProperties.ts, 22, 3))
>Cover : Symbol(Cover, Decl(objectLiteralExcessProperties.ts, 2, 1))
>Cover : Symbol(Cover, Decl(objectLiteralExcessProperties.ts, 2, 1))
>couleur : Symbol(couleur, Decl(objectLiteralExcessProperties.ts, 22, 27))

var b9: Book | Book[] = { forewarned: "still no" };
>b9 : Symbol(b9, Decl(objectLiteralExcessProperties.ts, 24, 3))
>Book : Symbol(Book, Decl(objectLiteralExcessProperties.ts, 0, 0))
>Book : Symbol(Book, Decl(objectLiteralExcessProperties.ts, 0, 0))
>forewarned : Symbol(forewarned, Decl(objectLiteralExcessProperties.ts, 24, 25))

interface Indexed {
>Indexed : Symbol(Indexed, Decl(objectLiteralExcessProperties.ts, 24, 51))

    [n: number]: Cover;
>n : Symbol(n, Decl(objectLiteralExcessProperties.ts, 27, 5))
>Cover : Symbol(Cover, Decl(objectLiteralExcessProperties.ts, 2, 1))
}

var b10: Indexed = { 0: { }, '1': { } }; // ok
>b10 : Symbol(b10, Decl(objectLiteralExcessProperties.ts, 30, 3))
>Indexed : Symbol(Indexed, Decl(objectLiteralExcessProperties.ts, 24, 51))
>0 : Symbol(0, Decl(objectLiteralExcessProperties.ts, 30, 20))
>'1' : Symbol('1', Decl(objectLiteralExcessProperties.ts, 30, 28))

var b11: Indexed = { 0: { colour: "blue" } }; // nested object literal still errors
>b11 : Symbol(b11, Decl(objectLiteralExcessProperties.ts, 32, 3))
>Indexed : Symbol(Indexed, Decl(objectLiteralExcessProperties.ts, 24, 51))
>0 : Symbol(0, Decl(objectLiteralExcessProperties.ts, 32, 20))
>colour : Symbol(colour, Decl(objectLiteralExcessProperties.ts, 32, 25))

