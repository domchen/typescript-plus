=== tests/cases/conformance/jsx/file.tsx ===
import React = require('react');
>React : Symbol(React, Decl(file.tsx, 0, 0))

interface ComponentProps {
>ComponentProps : Symbol(ComponentProps, Decl(file.tsx, 0, 32))

    property1: string;
>property1 : Symbol(ComponentProps.property1, Decl(file.tsx, 2, 26))

    property2: number;
>property2 : Symbol(ComponentProps.property2, Decl(file.tsx, 3, 22))
}

export default function Component(props: ComponentProps) {
>Component : Symbol(Component, Decl(file.tsx, 5, 1))
>props : Symbol(props, Decl(file.tsx, 7, 34))
>ComponentProps : Symbol(ComponentProps, Decl(file.tsx, 0, 32))

    return (
        // Error: missing property
        <AnotherComponent {...props} />
>AnotherComponent : Symbol(AnotherComponent, Decl(file.tsx, 18, 1))
>props : Symbol(props, Decl(file.tsx, 7, 34))

    );
}

interface AnotherComponentProps {
>AnotherComponentProps : Symbol(AnotherComponentProps, Decl(file.tsx, 12, 1))

    property1: string;
>property1 : Symbol(AnotherComponentProps.property1, Decl(file.tsx, 14, 33))

    AnotherProperty1: string;
>AnotherProperty1 : Symbol(AnotherComponentProps.AnotherProperty1, Decl(file.tsx, 15, 22))

    property2: boolean;
>property2 : Symbol(AnotherComponentProps.property2, Decl(file.tsx, 16, 29))
}

function AnotherComponent({ property1 }: AnotherComponentProps) {
>AnotherComponent : Symbol(AnotherComponent, Decl(file.tsx, 18, 1))
>property1 : Symbol(property1, Decl(file.tsx, 20, 27))
>AnotherComponentProps : Symbol(AnotherComponentProps, Decl(file.tsx, 12, 1))

    return (
        <span>{property1}</span>
>span : Symbol(JSX.IntrinsicElements.span, Decl(react.d.ts, 2461, 51))
>property1 : Symbol(property1, Decl(file.tsx, 20, 27))
>span : Symbol(JSX.IntrinsicElements.span, Decl(react.d.ts, 2461, 51))

    );
}
