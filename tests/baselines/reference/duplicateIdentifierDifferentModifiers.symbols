=== tests/cases/compiler/duplicateIdentifierDifferentModifiers.ts ===
// Not OK
interface B { x; }
>B : Symbol(B, Decl(duplicateIdentifierDifferentModifiers.ts, 0, 0), Decl(duplicateIdentifierDifferentModifiers.ts, 1, 18))
>x : Symbol(B.x, Decl(duplicateIdentifierDifferentModifiers.ts, 1, 13), Decl(duplicateIdentifierDifferentModifiers.ts, 2, 13))

interface B { x?; }
>B : Symbol(B, Decl(duplicateIdentifierDifferentModifiers.ts, 0, 0), Decl(duplicateIdentifierDifferentModifiers.ts, 1, 18))
>x : Symbol(B.x, Decl(duplicateIdentifierDifferentModifiers.ts, 1, 13), Decl(duplicateIdentifierDifferentModifiers.ts, 2, 13))

// OK
class A {
>A : Symbol(A, Decl(duplicateIdentifierDifferentModifiers.ts, 2, 19), Decl(duplicateIdentifierDifferentModifiers.ts, 7, 1))

  public y: string;
>y : Symbol(A.y, Decl(duplicateIdentifierDifferentModifiers.ts, 5, 9), Decl(duplicateIdentifierDifferentModifiers.ts, 9, 13))
}

interface A {
>A : Symbol(A, Decl(duplicateIdentifierDifferentModifiers.ts, 2, 19), Decl(duplicateIdentifierDifferentModifiers.ts, 7, 1))

  y: string;
>y : Symbol(A.y, Decl(duplicateIdentifierDifferentModifiers.ts, 5, 9), Decl(duplicateIdentifierDifferentModifiers.ts, 9, 13))
}

// Not OK
class C {
>C : Symbol(C, Decl(duplicateIdentifierDifferentModifiers.ts, 11, 1), Decl(duplicateIdentifierDifferentModifiers.ts, 16, 1))

  private y: string;
>y : Symbol(C.y, Decl(duplicateIdentifierDifferentModifiers.ts, 14, 9), Decl(duplicateIdentifierDifferentModifiers.ts, 18, 13))
}

interface C {
>C : Symbol(C, Decl(duplicateIdentifierDifferentModifiers.ts, 11, 1), Decl(duplicateIdentifierDifferentModifiers.ts, 16, 1))

  y: string;
>y : Symbol(C.y, Decl(duplicateIdentifierDifferentModifiers.ts, 14, 9), Decl(duplicateIdentifierDifferentModifiers.ts, 18, 13))
}

