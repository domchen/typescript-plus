=== tests/cases/compiler/tupleTypeInference2.ts ===
// Repro from #22564

type A<R> = [R] | [R, string];
>A : Symbol(A, Decl(tupleTypeInference2.ts, 0, 0))
>R : Symbol(R, Decl(tupleTypeInference2.ts, 2, 7))
>R : Symbol(R, Decl(tupleTypeInference2.ts, 2, 7))
>R : Symbol(R, Decl(tupleTypeInference2.ts, 2, 7))

declare function f<T>(x: A<T>): T;
>f : Symbol(f, Decl(tupleTypeInference2.ts, 2, 30))
>T : Symbol(T, Decl(tupleTypeInference2.ts, 3, 19))
>x : Symbol(x, Decl(tupleTypeInference2.ts, 3, 22))
>A : Symbol(A, Decl(tupleTypeInference2.ts, 0, 0))
>T : Symbol(T, Decl(tupleTypeInference2.ts, 3, 19))
>T : Symbol(T, Decl(tupleTypeInference2.ts, 3, 19))

f([undefined, ''] as [never, string]); // T: never
>f : Symbol(f, Decl(tupleTypeInference2.ts, 2, 30))
>undefined : Symbol(undefined)

f([undefined, ''] as [void, string]); // T: void
>f : Symbol(f, Decl(tupleTypeInference2.ts, 2, 30))
>undefined : Symbol(undefined)

// Repro from #22563

type B<R, S> = [R] | [R, S];
>B : Symbol(B, Decl(tupleTypeInference2.ts, 5, 37))
>R : Symbol(R, Decl(tupleTypeInference2.ts, 9, 7))
>S : Symbol(S, Decl(tupleTypeInference2.ts, 9, 9))
>R : Symbol(R, Decl(tupleTypeInference2.ts, 9, 7))
>R : Symbol(R, Decl(tupleTypeInference2.ts, 9, 7))
>S : Symbol(S, Decl(tupleTypeInference2.ts, 9, 9))

declare function g<T, U>(f: B<T, U>): U;
>g : Symbol(g, Decl(tupleTypeInference2.ts, 9, 28))
>T : Symbol(T, Decl(tupleTypeInference2.ts, 10, 19))
>U : Symbol(U, Decl(tupleTypeInference2.ts, 10, 21))
>f : Symbol(f, Decl(tupleTypeInference2.ts, 10, 25))
>B : Symbol(B, Decl(tupleTypeInference2.ts, 5, 37))
>T : Symbol(T, Decl(tupleTypeInference2.ts, 10, 19))
>U : Symbol(U, Decl(tupleTypeInference2.ts, 10, 21))
>U : Symbol(U, Decl(tupleTypeInference2.ts, 10, 21))

g([[]] as [void[]]); // U: {}
>g : Symbol(g, Decl(tupleTypeInference2.ts, 9, 28))

type C<R, S> = [R[]] | [R[], S];
>C : Symbol(C, Decl(tupleTypeInference2.ts, 11, 20))
>R : Symbol(R, Decl(tupleTypeInference2.ts, 13, 7))
>S : Symbol(S, Decl(tupleTypeInference2.ts, 13, 9))
>R : Symbol(R, Decl(tupleTypeInference2.ts, 13, 7))
>R : Symbol(R, Decl(tupleTypeInference2.ts, 13, 7))
>S : Symbol(S, Decl(tupleTypeInference2.ts, 13, 9))

declare function h<T, U>(f: C<T, U>): U;
>h : Symbol(h, Decl(tupleTypeInference2.ts, 13, 32))
>T : Symbol(T, Decl(tupleTypeInference2.ts, 14, 19))
>U : Symbol(U, Decl(tupleTypeInference2.ts, 14, 21))
>f : Symbol(f, Decl(tupleTypeInference2.ts, 14, 25))
>C : Symbol(C, Decl(tupleTypeInference2.ts, 11, 20))
>T : Symbol(T, Decl(tupleTypeInference2.ts, 14, 19))
>U : Symbol(U, Decl(tupleTypeInference2.ts, 14, 21))
>U : Symbol(U, Decl(tupleTypeInference2.ts, 14, 21))

h([[]] as [void[]]); // U: {}
>h : Symbol(h, Decl(tupleTypeInference2.ts, 13, 32))

// Repro from #22562

type C2<R> = [R[]] | [R[], void];
>C2 : Symbol(C2, Decl(tupleTypeInference2.ts, 15, 20))
>R : Symbol(R, Decl(tupleTypeInference2.ts, 19, 8))
>R : Symbol(R, Decl(tupleTypeInference2.ts, 19, 8))
>R : Symbol(R, Decl(tupleTypeInference2.ts, 19, 8))

declare function h2<T>(f: C2<T>): T;
>h2 : Symbol(h2, Decl(tupleTypeInference2.ts, 19, 33))
>T : Symbol(T, Decl(tupleTypeInference2.ts, 20, 20))
>f : Symbol(f, Decl(tupleTypeInference2.ts, 20, 23))
>C2 : Symbol(C2, Decl(tupleTypeInference2.ts, 15, 20))
>T : Symbol(T, Decl(tupleTypeInference2.ts, 20, 20))
>T : Symbol(T, Decl(tupleTypeInference2.ts, 20, 20))

h2([[]] as [never[]]); // T: never
>h2 : Symbol(h2, Decl(tupleTypeInference2.ts, 19, 33))

h2([[]] as [void[]]); // T: void
>h2 : Symbol(h2, Decl(tupleTypeInference2.ts, 19, 33))

