=== tests/cases/compiler/noImplicitAnyParametersInClass.ts ===
class C {
>C : Symbol(C, Decl(noImplicitAnyParametersInClass.ts, 0, 0))

    // No implicit-'any' errors.
    public pub_f1(): void { }
>pub_f1 : Symbol(C.pub_f1, Decl(noImplicitAnyParametersInClass.ts, 0, 9))

    // Implicit-'any' errors for x.
    public pub_f2(x): void { }
>pub_f2 : Symbol(C.pub_f2, Decl(noImplicitAnyParametersInClass.ts, 2, 29))
>x : Symbol(x, Decl(noImplicitAnyParametersInClass.ts, 5, 18))

    // No implicit-'any' errors.
    public pub_f3(x: any): void { }
>pub_f3 : Symbol(C.pub_f3, Decl(noImplicitAnyParametersInClass.ts, 5, 30))
>x : Symbol(x, Decl(noImplicitAnyParametersInClass.ts, 8, 18))

    // Implicit-'any' errors for x, y, and z.
    public pub_f4(x, y, z): void { }
>pub_f4 : Symbol(C.pub_f4, Decl(noImplicitAnyParametersInClass.ts, 8, 35))
>x : Symbol(x, Decl(noImplicitAnyParametersInClass.ts, 11, 18))
>y : Symbol(y, Decl(noImplicitAnyParametersInClass.ts, 11, 20))
>z : Symbol(z, Decl(noImplicitAnyParametersInClass.ts, 11, 23))

    // Implicit-'any' errors for x, and z.
    public pub_f5(x, y: any, z): void { }
>pub_f5 : Symbol(C.pub_f5, Decl(noImplicitAnyParametersInClass.ts, 11, 36))
>x : Symbol(x, Decl(noImplicitAnyParametersInClass.ts, 14, 18))
>y : Symbol(y, Decl(noImplicitAnyParametersInClass.ts, 14, 20))
>z : Symbol(z, Decl(noImplicitAnyParametersInClass.ts, 14, 28))

    // Implicit-'any[]' errors for r.
    public pub_f6(...r): void { }
>pub_f6 : Symbol(C.pub_f6, Decl(noImplicitAnyParametersInClass.ts, 14, 41))
>r : Symbol(r, Decl(noImplicitAnyParametersInClass.ts, 17, 18))

    // Implicit-'any'/'any[]' errors for x, r.
    public pub_f7(x, ...r): void { }
>pub_f7 : Symbol(C.pub_f7, Decl(noImplicitAnyParametersInClass.ts, 17, 33))
>x : Symbol(x, Decl(noImplicitAnyParametersInClass.ts, 20, 18))
>r : Symbol(r, Decl(noImplicitAnyParametersInClass.ts, 20, 20))

    // Implicit-'any' errors for x1, y2, x3, and y3.
    public pub_f8(x1, y1: number): any;
>pub_f8 : Symbol(C.pub_f8, Decl(noImplicitAnyParametersInClass.ts, 20, 36), Decl(noImplicitAnyParametersInClass.ts, 23, 39), Decl(noImplicitAnyParametersInClass.ts, 24, 39))
>x1 : Symbol(x1, Decl(noImplicitAnyParametersInClass.ts, 23, 18))
>y1 : Symbol(y1, Decl(noImplicitAnyParametersInClass.ts, 23, 21))

    public pub_f8(x2: string, y2): any;
>pub_f8 : Symbol(C.pub_f8, Decl(noImplicitAnyParametersInClass.ts, 20, 36), Decl(noImplicitAnyParametersInClass.ts, 23, 39), Decl(noImplicitAnyParametersInClass.ts, 24, 39))
>x2 : Symbol(x2, Decl(noImplicitAnyParametersInClass.ts, 24, 18))
>y2 : Symbol(y2, Decl(noImplicitAnyParametersInClass.ts, 24, 29))

    public pub_f8(x3, y3): any { }
>pub_f8 : Symbol(C.pub_f8, Decl(noImplicitAnyParametersInClass.ts, 20, 36), Decl(noImplicitAnyParametersInClass.ts, 23, 39), Decl(noImplicitAnyParametersInClass.ts, 24, 39))
>x3 : Symbol(x3, Decl(noImplicitAnyParametersInClass.ts, 25, 18))
>y3 : Symbol(y3, Decl(noImplicitAnyParametersInClass.ts, 25, 21))

    // No implicit-'any' errors.
    public pub_f9 = () => "";
>pub_f9 : Symbol(C.pub_f9, Decl(noImplicitAnyParametersInClass.ts, 25, 34))

    // Implicit-'any' errors for x.
    public pub_f10 = (x) => "";
>pub_f10 : Symbol(C.pub_f10, Decl(noImplicitAnyParametersInClass.ts, 28, 29))
>x : Symbol(x, Decl(noImplicitAnyParametersInClass.ts, 31, 22))

    // Implicit-'any' errors for x, y, and z.
    public pub_f11 = (x, y, z) => "";
>pub_f11 : Symbol(C.pub_f11, Decl(noImplicitAnyParametersInClass.ts, 31, 31))
>x : Symbol(x, Decl(noImplicitAnyParametersInClass.ts, 34, 22))
>y : Symbol(y, Decl(noImplicitAnyParametersInClass.ts, 34, 24))
>z : Symbol(z, Decl(noImplicitAnyParametersInClass.ts, 34, 27))

    // Implicit-'any' errors for x and z.
    public pub_f12 = (x, y: any, z) => "";
>pub_f12 : Symbol(C.pub_f12, Decl(noImplicitAnyParametersInClass.ts, 34, 37))
>x : Symbol(x, Decl(noImplicitAnyParametersInClass.ts, 37, 22))
>y : Symbol(y, Decl(noImplicitAnyParametersInClass.ts, 37, 24))
>z : Symbol(z, Decl(noImplicitAnyParametersInClass.ts, 37, 32))

    // Implicit-'any[]' error for r.
    public pub_f13 = (...r) => "";
>pub_f13 : Symbol(C.pub_f13, Decl(noImplicitAnyParametersInClass.ts, 37, 42))
>r : Symbol(r, Decl(noImplicitAnyParametersInClass.ts, 40, 22))

    // Implicit-'any'/'any[]' errors for x, r.
    public pub_f14 = (x, ...r) => "";
>pub_f14 : Symbol(C.pub_f14, Decl(noImplicitAnyParametersInClass.ts, 40, 34))
>x : Symbol(x, Decl(noImplicitAnyParametersInClass.ts, 43, 22))
>r : Symbol(r, Decl(noImplicitAnyParametersInClass.ts, 43, 24))

    ///////////////////////////////////////////

    // No implicit-'any' errors.
    private priv_f1(): void { }
>priv_f1 : Symbol(C.priv_f1, Decl(noImplicitAnyParametersInClass.ts, 43, 37))

    // Implicit-'any' errors for x.
    private priv_f2(x): void { }
>priv_f2 : Symbol(C.priv_f2, Decl(noImplicitAnyParametersInClass.ts, 48, 31))
>x : Symbol(x, Decl(noImplicitAnyParametersInClass.ts, 51, 20))

    // No implicit-'any' errors.
    private priv_f3(x: any): void { }
>priv_f3 : Symbol(C.priv_f3, Decl(noImplicitAnyParametersInClass.ts, 51, 32))
>x : Symbol(x, Decl(noImplicitAnyParametersInClass.ts, 54, 20))

    // Implicit-'any' errors for x, y, and z.
    private priv_f4(x, y, z): void { }
>priv_f4 : Symbol(C.priv_f4, Decl(noImplicitAnyParametersInClass.ts, 54, 37))
>x : Symbol(x, Decl(noImplicitAnyParametersInClass.ts, 57, 20))
>y : Symbol(y, Decl(noImplicitAnyParametersInClass.ts, 57, 22))
>z : Symbol(z, Decl(noImplicitAnyParametersInClass.ts, 57, 25))

    // Implicit-'any' errors for x, and z.
    private priv_f5(x, y: any, z): void { }
>priv_f5 : Symbol(C.priv_f5, Decl(noImplicitAnyParametersInClass.ts, 57, 38))
>x : Symbol(x, Decl(noImplicitAnyParametersInClass.ts, 60, 20))
>y : Symbol(y, Decl(noImplicitAnyParametersInClass.ts, 60, 22))
>z : Symbol(z, Decl(noImplicitAnyParametersInClass.ts, 60, 30))

    // Implicit-'any[]' errors for r.
    private priv_f6(...r): void { }
>priv_f6 : Symbol(C.priv_f6, Decl(noImplicitAnyParametersInClass.ts, 60, 43))
>r : Symbol(r, Decl(noImplicitAnyParametersInClass.ts, 63, 20))

    // Implicit-'any'/'any[]' errors for x, r.
    private priv_f7(x, ...r): void { }
>priv_f7 : Symbol(C.priv_f7, Decl(noImplicitAnyParametersInClass.ts, 63, 35))
>x : Symbol(x, Decl(noImplicitAnyParametersInClass.ts, 66, 20))
>r : Symbol(r, Decl(noImplicitAnyParametersInClass.ts, 66, 22))

    // Implicit-'any' errors for x1, y2, x3, and y3.
    private priv_f8(x1, y1: number): any;
>priv_f8 : Symbol(C.priv_f8, Decl(noImplicitAnyParametersInClass.ts, 66, 38), Decl(noImplicitAnyParametersInClass.ts, 69, 41), Decl(noImplicitAnyParametersInClass.ts, 70, 41))
>x1 : Symbol(x1, Decl(noImplicitAnyParametersInClass.ts, 69, 20))
>y1 : Symbol(y1, Decl(noImplicitAnyParametersInClass.ts, 69, 23))

    private priv_f8(x2: string, y2): any;
>priv_f8 : Symbol(C.priv_f8, Decl(noImplicitAnyParametersInClass.ts, 66, 38), Decl(noImplicitAnyParametersInClass.ts, 69, 41), Decl(noImplicitAnyParametersInClass.ts, 70, 41))
>x2 : Symbol(x2, Decl(noImplicitAnyParametersInClass.ts, 70, 20))
>y2 : Symbol(y2, Decl(noImplicitAnyParametersInClass.ts, 70, 31))

    private priv_f8(x3, y3): any { }
>priv_f8 : Symbol(C.priv_f8, Decl(noImplicitAnyParametersInClass.ts, 66, 38), Decl(noImplicitAnyParametersInClass.ts, 69, 41), Decl(noImplicitAnyParametersInClass.ts, 70, 41))
>x3 : Symbol(x3, Decl(noImplicitAnyParametersInClass.ts, 71, 20))
>y3 : Symbol(y3, Decl(noImplicitAnyParametersInClass.ts, 71, 23))

    // No implicit-'any' errors.
    private priv_f9 = () => "";
>priv_f9 : Symbol(C.priv_f9, Decl(noImplicitAnyParametersInClass.ts, 71, 36))

    // Implicit-'any' errors for x.
    private priv_f10 = (x) => "";
>priv_f10 : Symbol(C.priv_f10, Decl(noImplicitAnyParametersInClass.ts, 74, 31))
>x : Symbol(x, Decl(noImplicitAnyParametersInClass.ts, 77, 24))

    // Implicit-'any' errors for x, y, and z.
    private priv_f11 = (x, y, z) => "";
>priv_f11 : Symbol(C.priv_f11, Decl(noImplicitAnyParametersInClass.ts, 77, 33))
>x : Symbol(x, Decl(noImplicitAnyParametersInClass.ts, 80, 24))
>y : Symbol(y, Decl(noImplicitAnyParametersInClass.ts, 80, 26))
>z : Symbol(z, Decl(noImplicitAnyParametersInClass.ts, 80, 29))

    // Implicit-'any' errors for x and z.
    private priv_f12 = (x, y: any, z) => "";
>priv_f12 : Symbol(C.priv_f12, Decl(noImplicitAnyParametersInClass.ts, 80, 39))
>x : Symbol(x, Decl(noImplicitAnyParametersInClass.ts, 83, 24))
>y : Symbol(y, Decl(noImplicitAnyParametersInClass.ts, 83, 26))
>z : Symbol(z, Decl(noImplicitAnyParametersInClass.ts, 83, 34))

    // Implicit-'any[]' error for r.
    private priv_f13 = (...r) => "";
>priv_f13 : Symbol(C.priv_f13, Decl(noImplicitAnyParametersInClass.ts, 83, 44))
>r : Symbol(r, Decl(noImplicitAnyParametersInClass.ts, 86, 24))

    // Implicit-'any'/'any[]' errors for x, r.
    private priv_f14 = (x, ...r) => "";
>priv_f14 : Symbol(C.priv_f14, Decl(noImplicitAnyParametersInClass.ts, 86, 36))
>x : Symbol(x, Decl(noImplicitAnyParametersInClass.ts, 89, 24))
>r : Symbol(r, Decl(noImplicitAnyParametersInClass.ts, 89, 26))
}
