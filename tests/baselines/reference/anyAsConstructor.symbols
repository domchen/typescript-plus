=== tests/cases/conformance/types/any/anyAsConstructor.ts ===
// any is considered an untyped function call
// can be called except with type arguments which is an error

var x: any;
>x : Symbol(x, Decl(anyAsConstructor.ts, 3, 3))

var a = new x();
>a : Symbol(a, Decl(anyAsConstructor.ts, 4, 3))
>x : Symbol(x, Decl(anyAsConstructor.ts, 3, 3))

var b = new x('hello');
>b : Symbol(b, Decl(anyAsConstructor.ts, 5, 3))
>x : Symbol(x, Decl(anyAsConstructor.ts, 3, 3))

var c = new x(x);
>c : Symbol(c, Decl(anyAsConstructor.ts, 6, 3))
>x : Symbol(x, Decl(anyAsConstructor.ts, 3, 3))
>x : Symbol(x, Decl(anyAsConstructor.ts, 3, 3))

// grammar allows this for constructors
var d = new x<any>(x); // no error
>d : Symbol(d, Decl(anyAsConstructor.ts, 9, 3))
>x : Symbol(x, Decl(anyAsConstructor.ts, 3, 3))
>x : Symbol(x, Decl(anyAsConstructor.ts, 3, 3))

