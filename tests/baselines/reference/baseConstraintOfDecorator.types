=== tests/cases/compiler/baseConstraintOfDecorator.ts ===
export function classExtender<TFunction>(superClass: TFunction, _instanceModifier: (instance: any, args: any[]) => void): TFunction {
>classExtender : <TFunction>(superClass: TFunction, _instanceModifier: (instance: any, args: any[]) => void) => TFunction
>superClass : TFunction
>_instanceModifier : (instance: any, args: any[]) => void
>instance : any
>args : any[]

    return class decoratorFunc extends superClass {
>class decoratorFunc extends superClass {        constructor(...args: any[]) {            super(...args);            _instanceModifier(this, args);        }    } : typeof decoratorFunc
>decoratorFunc : typeof decoratorFunc
>superClass : TFunction

        constructor(...args: any[]) {
>args : any[]

            super(...args);
>super(...args) : void
>super : any
>...args : any
>args : any[]

            _instanceModifier(this, args);
>_instanceModifier(this, args) : void
>_instanceModifier : (instance: any, args: any[]) => void
>this : this
>args : any[]
        }
    };
}

