tests/cases/conformance/types/literal/stringLiteralsWithEqualityChecks03.ts(16,5): error TS2367: This condition will always return 'false' since the types '"foo"' and '"bar"' have no overlap.
tests/cases/conformance/types/literal/stringLiteralsWithEqualityChecks03.ts(25,5): error TS2367: This condition will always return 'true' since the types '"foo"' and '"bar"' have no overlap.


==== tests/cases/conformance/types/literal/stringLiteralsWithEqualityChecks03.ts (2 errors) ====
    interface Runnable {
        isRunning: boolean;
    }
    
    interface Refrigerator extends Runnable {
        makesFoodGoBrrr: boolean;
    }
    
    let x: string;
    let y: "foo" | Refrigerator;
    
    let b: boolean;
    b = x === y;
    b = "foo" === y
    b = y === "foo";
    b = "foo" === "bar";
        ~~~~~~~~~~~~~~~
!!! error TS2367: This condition will always return 'false' since the types '"foo"' and '"bar"' have no overlap.
    b = "bar" === x;
    b = x === "bar";
    b = y === "bar";
    b = "bar" === y;
    
    b = x !== y;
    b = "foo" !== y
    b = y !== "foo";
    b = "foo" !== "bar";
        ~~~~~~~~~~~~~~~
!!! error TS2367: This condition will always return 'true' since the types '"foo"' and '"bar"' have no overlap.
    b = "bar" !== x;
    b = x !== "bar";
    b = y !== "bar";
    b = "bar" !== y;
    