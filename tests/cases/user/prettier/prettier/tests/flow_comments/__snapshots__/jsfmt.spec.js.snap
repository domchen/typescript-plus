// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`arrow.js 1`] = `
// Error
const beep = (data/*: Object */) => {}

// OK
const beep = (data/*: Object */, secondData/*: Object */) => {}

const beep = (data/*: /* this is an object *-/ Object */) => {};

const run = (cmd /*: string */) /*: Promise<void> */ => {}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// Error
const beep = (data /*: Object */) => {};

// OK
const beep = (data /*: Object */, secondData /*: Object */) => {};

const beep = (data /*: /* this is an object *-/ Object */) => {};

const run = (cmd /*: string */) /*: Promise<void> */ => {};

`;

exports[`class.js 1`] = `
class A {
  x /*: string */;

  method(a /*: T */, b /*: T */) /*: T */ {}
}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
class A {
  x /*: string */;

  method(a /*: T */, b /*: T */) /*: T */ {}
}

`;

exports[`functions.js 1`] = `
function foo<T>(bar  /*: T[] */, baz  /*: T */) /*: S */ {}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
function foo<T>(bar /*: T[] */, baz /*: T */) /*: S */ {}

`;

exports[`let.js 1`] = `
let foo /*: Groups<T> */;
let foo /*: string */ = 'a';
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
let foo /*: Groups<T> */;
let foo /*: string */ = "a";

`;

exports[`object_type_annotation.js 1`] = `
type Props = // (DispatchProps & StateProps); WHY DON'T YOU WORK FLOW!!!!!!!!!
{
  isPlaying: boolean,
};

type Props = { // (DispatchProps & StateProps); WHY DON'T YOU WORK FLOW!!!!!!!!!
  isPlaying: boolean
};

type Props = {
  // (DispatchProps & StateProps); WHY DON'T YOU WORK FLOW!!!!!!!!!
  isPlaying: boolean
};
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// (DispatchProps & StateProps); WHY DON'T YOU WORK FLOW!!!!!!!!!
type Props = {
  isPlaying: boolean
};

type Props = {
  // (DispatchProps & StateProps); WHY DON'T YOU WORK FLOW!!!!!!!!!
  isPlaying: boolean
};

type Props = {
  // (DispatchProps & StateProps); WHY DON'T YOU WORK FLOW!!!!!!!!!
  isPlaying: boolean
};

`;
