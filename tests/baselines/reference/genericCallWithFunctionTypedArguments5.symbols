=== tests/cases/conformance/types/typeRelationships/typeInference/genericCallWithFunctionTypedArguments5.ts ===
// Generic call with parameter of object type with member of function type of n args passed object whose associated member is call signature with n+1 args

function foo<T, U>(arg: { cb: (t: T) => U }) {
>foo : Symbol(foo, Decl(genericCallWithFunctionTypedArguments5.ts, 0, 0))
>T : Symbol(T, Decl(genericCallWithFunctionTypedArguments5.ts, 2, 13))
>U : Symbol(U, Decl(genericCallWithFunctionTypedArguments5.ts, 2, 15))
>arg : Symbol(arg, Decl(genericCallWithFunctionTypedArguments5.ts, 2, 19))
>cb : Symbol(cb, Decl(genericCallWithFunctionTypedArguments5.ts, 2, 25))
>t : Symbol(t, Decl(genericCallWithFunctionTypedArguments5.ts, 2, 31))
>T : Symbol(T, Decl(genericCallWithFunctionTypedArguments5.ts, 2, 13))
>U : Symbol(U, Decl(genericCallWithFunctionTypedArguments5.ts, 2, 15))

    return arg.cb(null);
>arg.cb : Symbol(cb, Decl(genericCallWithFunctionTypedArguments5.ts, 2, 25))
>arg : Symbol(arg, Decl(genericCallWithFunctionTypedArguments5.ts, 2, 19))
>cb : Symbol(cb, Decl(genericCallWithFunctionTypedArguments5.ts, 2, 25))
}

var arg = { cb: <T>(x: T) => '' };
>arg : Symbol(arg, Decl(genericCallWithFunctionTypedArguments5.ts, 6, 3))
>cb : Symbol(cb, Decl(genericCallWithFunctionTypedArguments5.ts, 6, 11))
>T : Symbol(T, Decl(genericCallWithFunctionTypedArguments5.ts, 6, 17))
>x : Symbol(x, Decl(genericCallWithFunctionTypedArguments5.ts, 6, 20))
>T : Symbol(T, Decl(genericCallWithFunctionTypedArguments5.ts, 6, 17))

var r = foo(arg); // {}
>r : Symbol(r, Decl(genericCallWithFunctionTypedArguments5.ts, 7, 3))
>foo : Symbol(foo, Decl(genericCallWithFunctionTypedArguments5.ts, 0, 0))
>arg : Symbol(arg, Decl(genericCallWithFunctionTypedArguments5.ts, 6, 3))

// more args not allowed
var r2 = foo({ cb: <T>(x: T, y: T) => '' }); // error
>r2 : Symbol(r2, Decl(genericCallWithFunctionTypedArguments5.ts, 9, 3))
>foo : Symbol(foo, Decl(genericCallWithFunctionTypedArguments5.ts, 0, 0))
>cb : Symbol(cb, Decl(genericCallWithFunctionTypedArguments5.ts, 9, 14))
>T : Symbol(T, Decl(genericCallWithFunctionTypedArguments5.ts, 9, 20))
>x : Symbol(x, Decl(genericCallWithFunctionTypedArguments5.ts, 9, 23))
>T : Symbol(T, Decl(genericCallWithFunctionTypedArguments5.ts, 9, 20))
>y : Symbol(y, Decl(genericCallWithFunctionTypedArguments5.ts, 9, 28))
>T : Symbol(T, Decl(genericCallWithFunctionTypedArguments5.ts, 9, 20))

var r3 = foo({ cb: (x: string, y: number) => '' }); // error
>r3 : Symbol(r3, Decl(genericCallWithFunctionTypedArguments5.ts, 10, 3))
>foo : Symbol(foo, Decl(genericCallWithFunctionTypedArguments5.ts, 0, 0))
>cb : Symbol(cb, Decl(genericCallWithFunctionTypedArguments5.ts, 10, 14))
>x : Symbol(x, Decl(genericCallWithFunctionTypedArguments5.ts, 10, 20))
>y : Symbol(y, Decl(genericCallWithFunctionTypedArguments5.ts, 10, 30))

function foo2<T, U>(arg: { cb: (t: T, t2: T) => U }) {
>foo2 : Symbol(foo2, Decl(genericCallWithFunctionTypedArguments5.ts, 10, 51))
>T : Symbol(T, Decl(genericCallWithFunctionTypedArguments5.ts, 12, 14))
>U : Symbol(U, Decl(genericCallWithFunctionTypedArguments5.ts, 12, 16))
>arg : Symbol(arg, Decl(genericCallWithFunctionTypedArguments5.ts, 12, 20))
>cb : Symbol(cb, Decl(genericCallWithFunctionTypedArguments5.ts, 12, 26))
>t : Symbol(t, Decl(genericCallWithFunctionTypedArguments5.ts, 12, 32))
>T : Symbol(T, Decl(genericCallWithFunctionTypedArguments5.ts, 12, 14))
>t2 : Symbol(t2, Decl(genericCallWithFunctionTypedArguments5.ts, 12, 37))
>T : Symbol(T, Decl(genericCallWithFunctionTypedArguments5.ts, 12, 14))
>U : Symbol(U, Decl(genericCallWithFunctionTypedArguments5.ts, 12, 16))

    return arg.cb(null, null);
>arg.cb : Symbol(cb, Decl(genericCallWithFunctionTypedArguments5.ts, 12, 26))
>arg : Symbol(arg, Decl(genericCallWithFunctionTypedArguments5.ts, 12, 20))
>cb : Symbol(cb, Decl(genericCallWithFunctionTypedArguments5.ts, 12, 26))
}

// fewer args ok
var r4 = foo(arg); // {}
>r4 : Symbol(r4, Decl(genericCallWithFunctionTypedArguments5.ts, 17, 3))
>foo : Symbol(foo, Decl(genericCallWithFunctionTypedArguments5.ts, 0, 0))
>arg : Symbol(arg, Decl(genericCallWithFunctionTypedArguments5.ts, 6, 3))

var r5 = foo({ cb: <T>(x: T) => '' }); // {}
>r5 : Symbol(r5, Decl(genericCallWithFunctionTypedArguments5.ts, 18, 3))
>foo : Symbol(foo, Decl(genericCallWithFunctionTypedArguments5.ts, 0, 0))
>cb : Symbol(cb, Decl(genericCallWithFunctionTypedArguments5.ts, 18, 14))
>T : Symbol(T, Decl(genericCallWithFunctionTypedArguments5.ts, 18, 20))
>x : Symbol(x, Decl(genericCallWithFunctionTypedArguments5.ts, 18, 23))
>T : Symbol(T, Decl(genericCallWithFunctionTypedArguments5.ts, 18, 20))

var r6 = foo({ cb: (x: string) => '' }); // string
>r6 : Symbol(r6, Decl(genericCallWithFunctionTypedArguments5.ts, 19, 3))
>foo : Symbol(foo, Decl(genericCallWithFunctionTypedArguments5.ts, 0, 0))
>cb : Symbol(cb, Decl(genericCallWithFunctionTypedArguments5.ts, 19, 14))
>x : Symbol(x, Decl(genericCallWithFunctionTypedArguments5.ts, 19, 20))

var r7 = foo({ cb: () => '' }); // string
>r7 : Symbol(r7, Decl(genericCallWithFunctionTypedArguments5.ts, 20, 3))
>foo : Symbol(foo, Decl(genericCallWithFunctionTypedArguments5.ts, 0, 0))
>cb : Symbol(cb, Decl(genericCallWithFunctionTypedArguments5.ts, 20, 14))

