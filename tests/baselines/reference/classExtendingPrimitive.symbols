=== tests/cases/conformance/classes/classDeclarations/classHeritageSpecification/classExtendingPrimitive.ts ===
// classes cannot extend primitives

class C extends number { }
>C : Symbol(C, Decl(classExtendingPrimitive.ts, 0, 0))

class C2 extends string { }
>C2 : Symbol(C2, Decl(classExtendingPrimitive.ts, 2, 26))

class C3 extends boolean { }
>C3 : Symbol(C3, Decl(classExtendingPrimitive.ts, 3, 27))

class C4 extends Void  { }
>C4 : Symbol(C4, Decl(classExtendingPrimitive.ts, 4, 28))

class C4a extends void {}
>C4a : Symbol(C4a, Decl(classExtendingPrimitive.ts, 5, 26))

class C5 extends Null { }
>C5 : Symbol(C5, Decl(classExtendingPrimitive.ts, 6, 25))

class C5a extends null { }
>C5a : Symbol(C5a, Decl(classExtendingPrimitive.ts, 7, 25))

class C6 extends undefined { }
>C6 : Symbol(C6, Decl(classExtendingPrimitive.ts, 8, 26))
>undefined : Symbol(undefined)

class C7 extends Undefined { }
>C7 : Symbol(C7, Decl(classExtendingPrimitive.ts, 9, 30))

enum E { A }
>E : Symbol(E, Decl(classExtendingPrimitive.ts, 10, 30))
>A : Symbol(E.A, Decl(classExtendingPrimitive.ts, 12, 8))

class C8 extends E { }
>C8 : Symbol(C8, Decl(classExtendingPrimitive.ts, 12, 12))
>E : Symbol(E, Decl(classExtendingPrimitive.ts, 10, 30))

