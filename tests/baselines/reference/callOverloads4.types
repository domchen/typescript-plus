=== tests/cases/compiler/callOverloads4.ts ===
function Foo():Foo; // error
>Foo : { (): any; (s: string): any; }

function Foo(s:string):Foo; // error
>Foo : { (): any; (s: string): any; }
>s : string

class Foo { // error
>Foo : Foo

    bar1() { /*WScript.Echo("bar1");*/ }
>bar1 : () => void

    constructor(s: string);
>s : string

    constructor(x: any) {
>x : any

        // WScript.Echo("Constructor function has executed");
    }
}

var f1 = new Foo("hey");
>f1 : any
>new Foo("hey") : any
>Foo : { (): any; (s: string): any; }
>"hey" : "hey"


f1.bar1();
>f1.bar1() : any
>f1.bar1 : any
>f1 : any
>bar1 : any

Foo();
>Foo() : any
>Foo : { (): any; (s: string): any; }

Foo("s");
>Foo("s") : any
>Foo : { (): any; (s: string): any; }
>"s" : "s"

