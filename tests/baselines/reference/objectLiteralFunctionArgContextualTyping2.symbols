=== tests/cases/compiler/objectLiteralFunctionArgContextualTyping2.ts ===
interface I2 {
>I2 : Symbol(I2, Decl(objectLiteralFunctionArgContextualTyping2.ts, 0, 0))

    value: string;
>value : Symbol(I2.value, Decl(objectLiteralFunctionArgContextualTyping2.ts, 0, 14))

    doStuff: (t: string) => string;
>doStuff : Symbol(I2.doStuff, Decl(objectLiteralFunctionArgContextualTyping2.ts, 1, 18))
>t : Symbol(t, Decl(objectLiteralFunctionArgContextualTyping2.ts, 2, 14))
}

function f2(args: I2) { }
>f2 : Symbol(f2, Decl(objectLiteralFunctionArgContextualTyping2.ts, 3, 1))
>args : Symbol(args, Decl(objectLiteralFunctionArgContextualTyping2.ts, 5, 12))
>I2 : Symbol(I2, Decl(objectLiteralFunctionArgContextualTyping2.ts, 0, 0))

f2({ hello: 1 }) 
>f2 : Symbol(f2, Decl(objectLiteralFunctionArgContextualTyping2.ts, 3, 1))
>hello : Symbol(hello, Decl(objectLiteralFunctionArgContextualTyping2.ts, 7, 4))

f2({ value: '' })
>f2 : Symbol(f2, Decl(objectLiteralFunctionArgContextualTyping2.ts, 3, 1))
>value : Symbol(value, Decl(objectLiteralFunctionArgContextualTyping2.ts, 8, 4))

f2({ value: '', what: 1 }) 
>f2 : Symbol(f2, Decl(objectLiteralFunctionArgContextualTyping2.ts, 3, 1))
>value : Symbol(value, Decl(objectLiteralFunctionArgContextualTyping2.ts, 9, 4))
>what : Symbol(what, Decl(objectLiteralFunctionArgContextualTyping2.ts, 9, 15))

f2({ toString: (s) => s }) 
>f2 : Symbol(f2, Decl(objectLiteralFunctionArgContextualTyping2.ts, 3, 1))
>toString : Symbol(toString, Decl(objectLiteralFunctionArgContextualTyping2.ts, 10, 4))
>s : Symbol(s, Decl(objectLiteralFunctionArgContextualTyping2.ts, 10, 16))
>s : Symbol(s, Decl(objectLiteralFunctionArgContextualTyping2.ts, 10, 16))

f2({ toString: (s: string) => s }) 
>f2 : Symbol(f2, Decl(objectLiteralFunctionArgContextualTyping2.ts, 3, 1))
>toString : Symbol(toString, Decl(objectLiteralFunctionArgContextualTyping2.ts, 11, 4))
>s : Symbol(s, Decl(objectLiteralFunctionArgContextualTyping2.ts, 11, 16))
>s : Symbol(s, Decl(objectLiteralFunctionArgContextualTyping2.ts, 11, 16))

f2({ value: '', toString: (s) => s.uhhh }) 
>f2 : Symbol(f2, Decl(objectLiteralFunctionArgContextualTyping2.ts, 3, 1))
>value : Symbol(value, Decl(objectLiteralFunctionArgContextualTyping2.ts, 12, 4))
>toString : Symbol(toString, Decl(objectLiteralFunctionArgContextualTyping2.ts, 12, 15))
>s : Symbol(s, Decl(objectLiteralFunctionArgContextualTyping2.ts, 12, 27))
>s : Symbol(s, Decl(objectLiteralFunctionArgContextualTyping2.ts, 12, 27))

