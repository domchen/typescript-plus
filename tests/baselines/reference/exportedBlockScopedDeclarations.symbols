=== tests/cases/compiler/exportedBlockScopedDeclarations.ts ===
const foo = foo; // compile error
>foo : Symbol(foo, Decl(exportedBlockScopedDeclarations.ts, 0, 5))
>foo : Symbol(foo, Decl(exportedBlockScopedDeclarations.ts, 0, 5))

export const bar = bar; // should be compile error
>bar : Symbol(bar, Decl(exportedBlockScopedDeclarations.ts, 1, 12))
>bar : Symbol(bar, Decl(exportedBlockScopedDeclarations.ts, 1, 12))

function f() {
>f : Symbol(f, Decl(exportedBlockScopedDeclarations.ts, 1, 23))

  const bar = bar; // compile error
>bar : Symbol(bar, Decl(exportedBlockScopedDeclarations.ts, 3, 7))
>bar : Symbol(bar, Decl(exportedBlockScopedDeclarations.ts, 3, 7))
}
namespace NS {
>NS : Symbol(NS, Decl(exportedBlockScopedDeclarations.ts, 4, 1))

  export const bar = bar; // should be compile error
>bar : Symbol(bar, Decl(exportedBlockScopedDeclarations.ts, 6, 14))
>bar : Symbol(bar, Decl(exportedBlockScopedDeclarations.ts, 6, 14))
}

let foo1 = foo1; // compile error
>foo1 : Symbol(foo1, Decl(exportedBlockScopedDeclarations.ts, 9, 3))
>foo1 : Symbol(foo1, Decl(exportedBlockScopedDeclarations.ts, 9, 3))

export let bar1 = bar1; // should be compile error
>bar1 : Symbol(bar1, Decl(exportedBlockScopedDeclarations.ts, 10, 10))
>bar1 : Symbol(bar1, Decl(exportedBlockScopedDeclarations.ts, 10, 10))

function f1() {
>f1 : Symbol(f1, Decl(exportedBlockScopedDeclarations.ts, 10, 23))

  let bar1 = bar1; // compile error
>bar1 : Symbol(bar1, Decl(exportedBlockScopedDeclarations.ts, 12, 5))
>bar1 : Symbol(bar1, Decl(exportedBlockScopedDeclarations.ts, 12, 5))
}
namespace NS1 {
>NS1 : Symbol(NS1, Decl(exportedBlockScopedDeclarations.ts, 13, 1))

  export let bar1 = bar1; // should be compile error
>bar1 : Symbol(bar1, Decl(exportedBlockScopedDeclarations.ts, 15, 12))
>bar1 : Symbol(bar1, Decl(exportedBlockScopedDeclarations.ts, 15, 12))
}
