=== tests/cases/compiler/innerTypeCheckOfLambdaArgument.ts ===
function takesCallback(callback: (n) =>any) {
>takesCallback : Symbol(takesCallback, Decl(innerTypeCheckOfLambdaArgument.ts, 0, 0))
>callback : Symbol(callback, Decl(innerTypeCheckOfLambdaArgument.ts, 0, 23))
>n : Symbol(n, Decl(innerTypeCheckOfLambdaArgument.ts, 0, 34))

}
 
takesCallback(
>takesCallback : Symbol(takesCallback, Decl(innerTypeCheckOfLambdaArgument.ts, 0, 0))
 
	function inner(n) {
>inner : Symbol(inner, Decl(innerTypeCheckOfLambdaArgument.ts, 4, 14))
>n : Symbol(n, Decl(innerTypeCheckOfLambdaArgument.ts, 6, 16))

                // this line should raise an error
                // otherwise, there's a bug in overload resolution / partial typechecking
		var k: string = 10; 
>k : Symbol(k, Decl(innerTypeCheckOfLambdaArgument.ts, 9, 5))
    }
);

