=== tests/cases/compiler/interfaceExtendsClassWithPrivate1.ts ===
class C {
>C : Symbol(C, Decl(interfaceExtendsClassWithPrivate1.ts, 0, 0))

    public foo(x: any) { return x; }
>foo : Symbol(C.foo, Decl(interfaceExtendsClassWithPrivate1.ts, 0, 9))
>x : Symbol(x, Decl(interfaceExtendsClassWithPrivate1.ts, 1, 15))
>x : Symbol(x, Decl(interfaceExtendsClassWithPrivate1.ts, 1, 15))

    private x = 1;
>x : Symbol(C.x, Decl(interfaceExtendsClassWithPrivate1.ts, 1, 36))
}

interface I extends C {
>I : Symbol(I, Decl(interfaceExtendsClassWithPrivate1.ts, 3, 1))
>C : Symbol(C, Decl(interfaceExtendsClassWithPrivate1.ts, 0, 0))

    other(x: any): any;
>other : Symbol(I.other, Decl(interfaceExtendsClassWithPrivate1.ts, 5, 23))
>x : Symbol(x, Decl(interfaceExtendsClassWithPrivate1.ts, 6, 10))
}

class D extends C implements I {
>D : Symbol(D, Decl(interfaceExtendsClassWithPrivate1.ts, 7, 1))
>C : Symbol(C, Decl(interfaceExtendsClassWithPrivate1.ts, 0, 0))
>I : Symbol(I, Decl(interfaceExtendsClassWithPrivate1.ts, 3, 1))

    public foo(x: any) { return x; }
>foo : Symbol(D.foo, Decl(interfaceExtendsClassWithPrivate1.ts, 9, 32))
>x : Symbol(x, Decl(interfaceExtendsClassWithPrivate1.ts, 10, 15))
>x : Symbol(x, Decl(interfaceExtendsClassWithPrivate1.ts, 10, 15))

    other(x: any) { return x; }
>other : Symbol(D.other, Decl(interfaceExtendsClassWithPrivate1.ts, 10, 36))
>x : Symbol(x, Decl(interfaceExtendsClassWithPrivate1.ts, 11, 10))
>x : Symbol(x, Decl(interfaceExtendsClassWithPrivate1.ts, 11, 10))

    bar() { }
>bar : Symbol(D.bar, Decl(interfaceExtendsClassWithPrivate1.ts, 11, 31))
} 

var c: C;
>c : Symbol(c, Decl(interfaceExtendsClassWithPrivate1.ts, 15, 3))
>C : Symbol(C, Decl(interfaceExtendsClassWithPrivate1.ts, 0, 0))

var i: I;
>i : Symbol(i, Decl(interfaceExtendsClassWithPrivate1.ts, 16, 3))
>I : Symbol(I, Decl(interfaceExtendsClassWithPrivate1.ts, 3, 1))

var d: D;
>d : Symbol(d, Decl(interfaceExtendsClassWithPrivate1.ts, 17, 3))
>D : Symbol(D, Decl(interfaceExtendsClassWithPrivate1.ts, 7, 1))

c = i;
>c : Symbol(c, Decl(interfaceExtendsClassWithPrivate1.ts, 15, 3))
>i : Symbol(i, Decl(interfaceExtendsClassWithPrivate1.ts, 16, 3))

i = c; // error
>i : Symbol(i, Decl(interfaceExtendsClassWithPrivate1.ts, 16, 3))
>c : Symbol(c, Decl(interfaceExtendsClassWithPrivate1.ts, 15, 3))

i = d;
>i : Symbol(i, Decl(interfaceExtendsClassWithPrivate1.ts, 16, 3))
>d : Symbol(d, Decl(interfaceExtendsClassWithPrivate1.ts, 17, 3))

d = i; // error
>d : Symbol(d, Decl(interfaceExtendsClassWithPrivate1.ts, 17, 3))
>i : Symbol(i, Decl(interfaceExtendsClassWithPrivate1.ts, 16, 3))

c = d;
>c : Symbol(c, Decl(interfaceExtendsClassWithPrivate1.ts, 15, 3))
>d : Symbol(d, Decl(interfaceExtendsClassWithPrivate1.ts, 17, 3))

d = c; // error
>d : Symbol(d, Decl(interfaceExtendsClassWithPrivate1.ts, 17, 3))
>c : Symbol(c, Decl(interfaceExtendsClassWithPrivate1.ts, 15, 3))

