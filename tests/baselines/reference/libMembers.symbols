=== tests/cases/compiler/libMembers.ts ===
var s="hello";
>s : Symbol(s, Decl(libMembers.ts, 0, 3))

s.substring(0);
>s.substring : Symbol(String.substring, Decl(lib.d.ts, --, --))
>s : Symbol(s, Decl(libMembers.ts, 0, 3))
>substring : Symbol(String.substring, Decl(lib.d.ts, --, --))

s.substring(3,4);
>s.substring : Symbol(String.substring, Decl(lib.d.ts, --, --))
>s : Symbol(s, Decl(libMembers.ts, 0, 3))
>substring : Symbol(String.substring, Decl(lib.d.ts, --, --))

s.subby(12);   // error unresolved
>s : Symbol(s, Decl(libMembers.ts, 0, 3))

String.fromCharCode(12);
>String.fromCharCode : Symbol(StringConstructor.fromCharCode, Decl(lib.d.ts, --, --))
>String : Symbol(String, Decl(lib.d.ts, --, --), Decl(lib.d.ts, --, --), Decl(lib.d.ts, --, --))
>fromCharCode : Symbol(StringConstructor.fromCharCode, Decl(lib.d.ts, --, --))

module M {
>M : Symbol(M, Decl(libMembers.ts, 4, 24))

    export class C {
>C : Symbol(C, Decl(libMembers.ts, 5, 10))
    }
    var a=new C[];
>a : Symbol(a, Decl(libMembers.ts, 8, 7))
>C : Symbol(C, Decl(libMembers.ts, 5, 10))

    a.length;
>a : Symbol(a, Decl(libMembers.ts, 8, 7))

    a.push(new C());
>a : Symbol(a, Decl(libMembers.ts, 8, 7))
>C : Symbol(C, Decl(libMembers.ts, 5, 10))

    (new C()).prototype;
>C : Symbol(C, Decl(libMembers.ts, 5, 10))
}


