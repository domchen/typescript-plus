=== tests/cases/conformance/statements/breakStatements/invalidDoWhileBreakStatements.ts ===
// All errors

// naked break not allowed
break;

// non-existent label
ONE:
do break TWO; while (true)

// break from inside function
TWO:
do {
    var x = () => {
>x : Symbol(x, Decl(invalidDoWhileBreakStatements.ts, 12, 7))

        break TWO;
    }
}while (true)

THREE:
do {
    var fn = function () {
>fn : Symbol(fn, Decl(invalidDoWhileBreakStatements.ts, 19, 7))

        break THREE;
    }
}while (true)

// break forward
do {
    break FIVE;
    FIVE:
    do { } while (true)
}while (true)

// label on non-loop statement
NINE:
var y = 12;
>y : Symbol(y, Decl(invalidDoWhileBreakStatements.ts, 33, 3))

do {
    break NINE;
}while (true)
