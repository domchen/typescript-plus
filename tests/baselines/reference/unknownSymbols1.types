=== tests/cases/compiler/unknownSymbols1.ts ===
var x = asdf;
>x : any
>asdf : any

var y: asdf;
>y : any
>asdf : No type information available!

function foo(x: asdf, y: number): asdf { }
>foo : (x: any, y: number) => any
>x : any
>asdf : No type information available!
>y : number
>asdf : No type information available!

function foo2() {
>foo2 : () => any

    return asdf;
>asdf : any
}

var z = <asdf>x; // should be an error
>z : any
><asdf>x : any
>asdf : No type information available!
>x : any

class C<T> {
>C : C<T>
>T : T

    foo: asdf;
>foo : any
>asdf : No type information available!

    bar: C<asdf>;
>bar : C<any>
>C : C<T>
>asdf : No type information available!
}

class C2 implements asdf { }
>C2 : C2
>asdf : No type information available!

interface I extends adsf { }
>I : I
>adsf : No type information available!

class C3 { constructor(x: any) { } }
>C3 : C3
>x : any

class C4 extends C3 {
>C4 : C4
>C3 : C3

    constructor() {
        super(asdf);
>super(asdf) : void
>super : typeof C3
>asdf : any
    }
}

var x2 = this.asdf; // no error, this is any
>x2 : any
>this.asdf : any
>this : any
>asdf : any

class C5 {
>C5 : C5

    constructor() {
        this.asdf = asdf;
>this.asdf = asdf : any
>this.asdf : any
>this : this
>asdf : any
>asdf : any
    }
}
