=== tests/cases/compiler/ThingA.ts ===
// https://github.com/Microsoft/TypeScript/issues/8612
export class ThingA { } 
>ThingA : Symbol(ThingA, Decl(ThingA.ts, 0, 0))

=== tests/cases/compiler/ThingB.ts ===
export class ThingB { }
>ThingB : Symbol(ThingB, Decl(ThingB.ts, 0, 0))

=== tests/cases/compiler/Things.ts ===
export {ThingA} from "./ThingA";
>ThingA : Symbol(ThingA, Decl(Things.ts, 0, 8))

export {ThingB} from "./ThingB";
>ThingB : Symbol(ThingB, Decl(Things.ts, 1, 8))

=== tests/cases/compiler/Test.ts ===
import * as things from "./Things";
>things : Symbol(things, Decl(Test.ts, 0, 6))

export class Test {
>Test : Symbol(Test, Decl(Test.ts, 0, 35))

    public method = (input: things.ThingA)  => { };
>method : Symbol(Test.method, Decl(Test.ts, 2, 19))
>input : Symbol(input, Decl(Test.ts, 3, 21))
>things : Symbol(things, Decl(Test.ts, 0, 6))
>ThingA : Symbol(things.ThingA, Decl(Things.ts, 0, 8))
}
