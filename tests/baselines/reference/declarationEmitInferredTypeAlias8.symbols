=== tests/cases/compiler/declarationEmitInferredTypeAlias8.ts ===
type Foo<T> = T | { x: Foo<T> };
>Foo : Symbol(Foo, Decl(declarationEmitInferredTypeAlias8.ts, 0, 0))
>T : Symbol(T, Decl(declarationEmitInferredTypeAlias8.ts, 0, 9))
>T : Symbol(T, Decl(declarationEmitInferredTypeAlias8.ts, 0, 9))
>x : Symbol(x, Decl(declarationEmitInferredTypeAlias8.ts, 0, 19))
>Foo : Symbol(Foo, Decl(declarationEmitInferredTypeAlias8.ts, 0, 0))
>T : Symbol(T, Decl(declarationEmitInferredTypeAlias8.ts, 0, 9))

var x: Foo<number[]>;
>x : Symbol(x, Decl(declarationEmitInferredTypeAlias8.ts, 1, 3))
>Foo : Symbol(Foo, Decl(declarationEmitInferredTypeAlias8.ts, 0, 0))

function returnSomeGlobalValue() {
>returnSomeGlobalValue : Symbol(returnSomeGlobalValue, Decl(declarationEmitInferredTypeAlias8.ts, 1, 21))

    return x;
>x : Symbol(x, Decl(declarationEmitInferredTypeAlias8.ts, 1, 3))
}
