=== tests/cases/compiler/defaultBestCommonTypesHaveDecls.ts ===
var obj1: {};
>obj1 : {}

obj1.length;
>obj1.length : any
>obj1 : {}
>length : any

var obj2: Object;
>obj2 : Object
>Object : Object

obj2.length;
>obj2.length : any
>obj2 : Object
>length : any

function concat<T>(x: T, y: T): T { return null; }
>concat : <T>(x: T, y: T) => T
>T : T
>x : T
>T : T
>y : T
>T : T
>T : T
>null : null

var result = concat(1, ""); // error
>result : any
>concat(1, "") : any
>concat : <T>(x: T, y: T) => T
>1 : 1
>"" : ""

var elementCount = result.length; 
>elementCount : any
>result.length : any
>result : any
>length : any

function concat2<T, U>(x: T, y: U) { return null; }
>concat2 : <T, U>(x: T, y: U) => any
>T : T
>U : U
>x : T
>T : T
>y : U
>U : U
>null : null

var result2 = concat2(1, ""); // result2 will be number|string
>result2 : any
>concat2(1, "") : any
>concat2 : <T, U>(x: T, y: U) => any
>1 : 1
>"" : ""

var elementCount2 = result.length; 
>elementCount2 : any
>result.length : any
>result : any
>length : any


