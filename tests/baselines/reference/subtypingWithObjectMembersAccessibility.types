=== tests/cases/conformance/types/typeRelationships/subtypesAndSuperTypes/subtypingWithObjectMembersAccessibility.ts ===
// Derived member is private, base member is not causes errors

class Base {
>Base : Base

    foo: string;
>foo : string
}

class Derived extends Base {
>Derived : Derived
>Base : Base

    bar: string;
>bar : string
}

class A {
>A : A

    public foo: Base;
>foo : Base
>Base : Base
}

class B extends A {
>B : B
>A : A

    private foo: Derived; // error
>foo : Derived
>Derived : Derived
}

class A2 {
>A2 : A2

    public 1: Base; 
>Base : Base
}

class B2 extends A2 {
>B2 : B2
>A2 : A2

    private 1: Derived; // error
>Derived : Derived
}

class A3 {
>A3 : A3

    public '1': Base;
>Base : Base
}

class B3 extends A3 {
>B3 : B3
>A3 : A3

    private '1': Derived; // error
>Derived : Derived
}
