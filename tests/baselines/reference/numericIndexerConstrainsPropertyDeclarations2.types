=== tests/cases/conformance/types/objectTypeLiteral/indexSignatures/numericIndexerConstrainsPropertyDeclarations2.ts ===
// String indexer providing a constraint of a user defined type

class A {
>A : A

    foo(): string { return ''; }
>foo : () => string
>'' : ""
}

class B extends A {
>B : B
>A : A

    bar(): string { return ''; }
>bar : () => string
>'' : ""
}

class Foo {
>Foo : Foo

    [x: number]: A;
>x : number
>A : A

    1.0: A; // ok
>A : A

    2.0: B; // ok
>B : B

    "2.5": B // ok
>B : B

    3.0: number; // error
    "4.0": string; // error
}

interface Foo2 {
>Foo2 : Foo2

    [x: number]: A;
>x : number
>A : A

    1.0: A; // ok
>A : A

    2.0: B; // ok
>B : B

    "2.5": B // ok
>B : B

    3.0: number; // error
    "4.0": string; // error
}

var a: {
>a : { [x: number]: A; 1.0: A; 2.0: B; "2.5": B; 3.0: number; "4.0": string; }

    [x: number]: A;
>x : number
>A : A

    1.0: A; // ok
>A : A

    2.0: B; // ok
>B : B

    "2.5": B // ok
>B : B

    3.0: number; // error
    "4.0": string; // error
};

// error
var b: { [x: number]: A } = {
>b : { [x: number]: A; }
>x : number
>A : A
>{    1.0: new A(),     2.0: new B(),     "2.5": new B(),    3.0: 1,    "4.0": ''} : { 1.0: A; 2.0: B; "2.5": B; 3.0: number; "4.0": string; }

    1.0: new A(), 
>new A() : A
>A : typeof A

    2.0: new B(), 
>new B() : B
>B : typeof B

    "2.5": new B(),
>new B() : B
>B : typeof B

    3.0: 1,
>1 : 1

    "4.0": ''
>'' : ""
}
