=== tests/cases/conformance/types/typeRelationships/subtypesAndSuperTypes/subtypesOfTypeParameterWithConstraints4.ts ===
// checking whether other types are subtypes of type parameters with constraints

class Foo { foo: number; }
>Foo : Symbol(Foo, Decl(subtypesOfTypeParameterWithConstraints4.ts, 0, 0))
>foo : Symbol(Foo.foo, Decl(subtypesOfTypeParameterWithConstraints4.ts, 2, 11))

function f<T extends Foo, U extends Foo, V>(t: T, u: U, v: V) {
>f : Symbol(f, Decl(subtypesOfTypeParameterWithConstraints4.ts, 2, 26))
>T : Symbol(T, Decl(subtypesOfTypeParameterWithConstraints4.ts, 3, 11))
>Foo : Symbol(Foo, Decl(subtypesOfTypeParameterWithConstraints4.ts, 0, 0))
>U : Symbol(U, Decl(subtypesOfTypeParameterWithConstraints4.ts, 3, 25))
>Foo : Symbol(Foo, Decl(subtypesOfTypeParameterWithConstraints4.ts, 0, 0))
>V : Symbol(V, Decl(subtypesOfTypeParameterWithConstraints4.ts, 3, 40))
>t : Symbol(t, Decl(subtypesOfTypeParameterWithConstraints4.ts, 3, 44))
>T : Symbol(T, Decl(subtypesOfTypeParameterWithConstraints4.ts, 3, 11))
>u : Symbol(u, Decl(subtypesOfTypeParameterWithConstraints4.ts, 3, 49))
>U : Symbol(U, Decl(subtypesOfTypeParameterWithConstraints4.ts, 3, 25))
>v : Symbol(v, Decl(subtypesOfTypeParameterWithConstraints4.ts, 3, 55))
>V : Symbol(V, Decl(subtypesOfTypeParameterWithConstraints4.ts, 3, 40))

    // ok
    var r = true ? t : u;
>r : Symbol(r, Decl(subtypesOfTypeParameterWithConstraints4.ts, 5, 7), Decl(subtypesOfTypeParameterWithConstraints4.ts, 6, 7))
>t : Symbol(t, Decl(subtypesOfTypeParameterWithConstraints4.ts, 3, 44))
>u : Symbol(u, Decl(subtypesOfTypeParameterWithConstraints4.ts, 3, 49))

    var r = true ? u : t;
>r : Symbol(r, Decl(subtypesOfTypeParameterWithConstraints4.ts, 5, 7), Decl(subtypesOfTypeParameterWithConstraints4.ts, 6, 7))
>u : Symbol(u, Decl(subtypesOfTypeParameterWithConstraints4.ts, 3, 49))
>t : Symbol(t, Decl(subtypesOfTypeParameterWithConstraints4.ts, 3, 44))

    // ok
    var r2 = true ? t : v;
>r2 : Symbol(r2, Decl(subtypesOfTypeParameterWithConstraints4.ts, 9, 7), Decl(subtypesOfTypeParameterWithConstraints4.ts, 10, 7))
>t : Symbol(t, Decl(subtypesOfTypeParameterWithConstraints4.ts, 3, 44))
>v : Symbol(v, Decl(subtypesOfTypeParameterWithConstraints4.ts, 3, 55))

    var r2 = true ? v : t;
>r2 : Symbol(r2, Decl(subtypesOfTypeParameterWithConstraints4.ts, 9, 7), Decl(subtypesOfTypeParameterWithConstraints4.ts, 10, 7))
>v : Symbol(v, Decl(subtypesOfTypeParameterWithConstraints4.ts, 3, 55))
>t : Symbol(t, Decl(subtypesOfTypeParameterWithConstraints4.ts, 3, 44))

    // ok
    var r3 = true ? v : u;
>r3 : Symbol(r3, Decl(subtypesOfTypeParameterWithConstraints4.ts, 13, 7), Decl(subtypesOfTypeParameterWithConstraints4.ts, 14, 7))
>v : Symbol(v, Decl(subtypesOfTypeParameterWithConstraints4.ts, 3, 55))
>u : Symbol(u, Decl(subtypesOfTypeParameterWithConstraints4.ts, 3, 49))

    var r3 = true ? u : v;
>r3 : Symbol(r3, Decl(subtypesOfTypeParameterWithConstraints4.ts, 13, 7), Decl(subtypesOfTypeParameterWithConstraints4.ts, 14, 7))
>u : Symbol(u, Decl(subtypesOfTypeParameterWithConstraints4.ts, 3, 49))
>v : Symbol(v, Decl(subtypesOfTypeParameterWithConstraints4.ts, 3, 55))

    // ok
    var r4 = true ? t : new Foo();
>r4 : Symbol(r4, Decl(subtypesOfTypeParameterWithConstraints4.ts, 17, 7), Decl(subtypesOfTypeParameterWithConstraints4.ts, 18, 7))
>t : Symbol(t, Decl(subtypesOfTypeParameterWithConstraints4.ts, 3, 44))
>Foo : Symbol(Foo, Decl(subtypesOfTypeParameterWithConstraints4.ts, 0, 0))

    var r4 = true ? new Foo() : t;
>r4 : Symbol(r4, Decl(subtypesOfTypeParameterWithConstraints4.ts, 17, 7), Decl(subtypesOfTypeParameterWithConstraints4.ts, 18, 7))
>Foo : Symbol(Foo, Decl(subtypesOfTypeParameterWithConstraints4.ts, 0, 0))
>t : Symbol(t, Decl(subtypesOfTypeParameterWithConstraints4.ts, 3, 44))

    // ok
    var r5 = true ? u : new Foo();
>r5 : Symbol(r5, Decl(subtypesOfTypeParameterWithConstraints4.ts, 21, 7), Decl(subtypesOfTypeParameterWithConstraints4.ts, 22, 7))
>u : Symbol(u, Decl(subtypesOfTypeParameterWithConstraints4.ts, 3, 49))
>Foo : Symbol(Foo, Decl(subtypesOfTypeParameterWithConstraints4.ts, 0, 0))

    var r5 = true ? new Foo() : u;
>r5 : Symbol(r5, Decl(subtypesOfTypeParameterWithConstraints4.ts, 21, 7), Decl(subtypesOfTypeParameterWithConstraints4.ts, 22, 7))
>Foo : Symbol(Foo, Decl(subtypesOfTypeParameterWithConstraints4.ts, 0, 0))
>u : Symbol(u, Decl(subtypesOfTypeParameterWithConstraints4.ts, 3, 49))

    // ok
    var r6 = true ? v : new Foo();
>r6 : Symbol(r6, Decl(subtypesOfTypeParameterWithConstraints4.ts, 25, 7), Decl(subtypesOfTypeParameterWithConstraints4.ts, 26, 7))
>v : Symbol(v, Decl(subtypesOfTypeParameterWithConstraints4.ts, 3, 55))
>Foo : Symbol(Foo, Decl(subtypesOfTypeParameterWithConstraints4.ts, 0, 0))

    var r6 = true ? new Foo() : v;
>r6 : Symbol(r6, Decl(subtypesOfTypeParameterWithConstraints4.ts, 25, 7), Decl(subtypesOfTypeParameterWithConstraints4.ts, 26, 7))
>Foo : Symbol(Foo, Decl(subtypesOfTypeParameterWithConstraints4.ts, 0, 0))
>v : Symbol(v, Decl(subtypesOfTypeParameterWithConstraints4.ts, 3, 55))

}

class B1<T> {
>B1 : Symbol(B1, Decl(subtypesOfTypeParameterWithConstraints4.ts, 28, 1))
>T : Symbol(T, Decl(subtypesOfTypeParameterWithConstraints4.ts, 30, 9))

    foo: T;
>foo : Symbol(B1.foo, Decl(subtypesOfTypeParameterWithConstraints4.ts, 30, 13))
>T : Symbol(T, Decl(subtypesOfTypeParameterWithConstraints4.ts, 30, 9))
}

class D1<T extends Foo, U extends Foo, V> extends B1<Foo> {
>D1 : Symbol(D1, Decl(subtypesOfTypeParameterWithConstraints4.ts, 32, 1))
>T : Symbol(T, Decl(subtypesOfTypeParameterWithConstraints4.ts, 34, 9))
>Foo : Symbol(Foo, Decl(subtypesOfTypeParameterWithConstraints4.ts, 0, 0))
>U : Symbol(U, Decl(subtypesOfTypeParameterWithConstraints4.ts, 34, 23))
>Foo : Symbol(Foo, Decl(subtypesOfTypeParameterWithConstraints4.ts, 0, 0))
>V : Symbol(V, Decl(subtypesOfTypeParameterWithConstraints4.ts, 34, 38))
>B1 : Symbol(B1, Decl(subtypesOfTypeParameterWithConstraints4.ts, 28, 1))
>Foo : Symbol(Foo, Decl(subtypesOfTypeParameterWithConstraints4.ts, 0, 0))

    [x: string]: Foo;
>x : Symbol(x, Decl(subtypesOfTypeParameterWithConstraints4.ts, 35, 5))
>Foo : Symbol(Foo, Decl(subtypesOfTypeParameterWithConstraints4.ts, 0, 0))

    foo: T; // ok
>foo : Symbol(D1.foo, Decl(subtypesOfTypeParameterWithConstraints4.ts, 35, 21))
>T : Symbol(T, Decl(subtypesOfTypeParameterWithConstraints4.ts, 34, 9))
}

class D2<T extends Foo, U extends Foo, V> extends B1<Foo> {
>D2 : Symbol(D2, Decl(subtypesOfTypeParameterWithConstraints4.ts, 37, 1))
>T : Symbol(T, Decl(subtypesOfTypeParameterWithConstraints4.ts, 39, 9))
>Foo : Symbol(Foo, Decl(subtypesOfTypeParameterWithConstraints4.ts, 0, 0))
>U : Symbol(U, Decl(subtypesOfTypeParameterWithConstraints4.ts, 39, 23))
>Foo : Symbol(Foo, Decl(subtypesOfTypeParameterWithConstraints4.ts, 0, 0))
>V : Symbol(V, Decl(subtypesOfTypeParameterWithConstraints4.ts, 39, 38))
>B1 : Symbol(B1, Decl(subtypesOfTypeParameterWithConstraints4.ts, 28, 1))
>Foo : Symbol(Foo, Decl(subtypesOfTypeParameterWithConstraints4.ts, 0, 0))

    [x: string]: Foo;
>x : Symbol(x, Decl(subtypesOfTypeParameterWithConstraints4.ts, 40, 5))
>Foo : Symbol(Foo, Decl(subtypesOfTypeParameterWithConstraints4.ts, 0, 0))

    foo: U; // ok
>foo : Symbol(D2.foo, Decl(subtypesOfTypeParameterWithConstraints4.ts, 40, 21))
>U : Symbol(U, Decl(subtypesOfTypeParameterWithConstraints4.ts, 39, 23))
}

class D3<T extends Foo, U extends Foo, V> extends B1<Foo> {
>D3 : Symbol(D3, Decl(subtypesOfTypeParameterWithConstraints4.ts, 42, 1))
>T : Symbol(T, Decl(subtypesOfTypeParameterWithConstraints4.ts, 44, 9))
>Foo : Symbol(Foo, Decl(subtypesOfTypeParameterWithConstraints4.ts, 0, 0))
>U : Symbol(U, Decl(subtypesOfTypeParameterWithConstraints4.ts, 44, 23))
>Foo : Symbol(Foo, Decl(subtypesOfTypeParameterWithConstraints4.ts, 0, 0))
>V : Symbol(V, Decl(subtypesOfTypeParameterWithConstraints4.ts, 44, 38))
>B1 : Symbol(B1, Decl(subtypesOfTypeParameterWithConstraints4.ts, 28, 1))
>Foo : Symbol(Foo, Decl(subtypesOfTypeParameterWithConstraints4.ts, 0, 0))

    [x: string]: Foo;
>x : Symbol(x, Decl(subtypesOfTypeParameterWithConstraints4.ts, 45, 5))
>Foo : Symbol(Foo, Decl(subtypesOfTypeParameterWithConstraints4.ts, 0, 0))

    foo: V; // error
>foo : Symbol(D3.foo, Decl(subtypesOfTypeParameterWithConstraints4.ts, 45, 21))
>V : Symbol(V, Decl(subtypesOfTypeParameterWithConstraints4.ts, 44, 38))
}

class D4<T extends Foo, U extends Foo, V> extends B1<T> {
>D4 : Symbol(D4, Decl(subtypesOfTypeParameterWithConstraints4.ts, 47, 1))
>T : Symbol(T, Decl(subtypesOfTypeParameterWithConstraints4.ts, 49, 9))
>Foo : Symbol(Foo, Decl(subtypesOfTypeParameterWithConstraints4.ts, 0, 0))
>U : Symbol(U, Decl(subtypesOfTypeParameterWithConstraints4.ts, 49, 23))
>Foo : Symbol(Foo, Decl(subtypesOfTypeParameterWithConstraints4.ts, 0, 0))
>V : Symbol(V, Decl(subtypesOfTypeParameterWithConstraints4.ts, 49, 38))
>B1 : Symbol(B1, Decl(subtypesOfTypeParameterWithConstraints4.ts, 28, 1))
>T : Symbol(T, Decl(subtypesOfTypeParameterWithConstraints4.ts, 49, 9))

    [x: string]: T;
>x : Symbol(x, Decl(subtypesOfTypeParameterWithConstraints4.ts, 50, 5))
>T : Symbol(T, Decl(subtypesOfTypeParameterWithConstraints4.ts, 49, 9))

    foo: T; // ok
>foo : Symbol(D4.foo, Decl(subtypesOfTypeParameterWithConstraints4.ts, 50, 19))
>T : Symbol(T, Decl(subtypesOfTypeParameterWithConstraints4.ts, 49, 9))
}

class D5<T extends Foo, U extends Foo, V> extends B1<T> {
>D5 : Symbol(D5, Decl(subtypesOfTypeParameterWithConstraints4.ts, 52, 1))
>T : Symbol(T, Decl(subtypesOfTypeParameterWithConstraints4.ts, 54, 9))
>Foo : Symbol(Foo, Decl(subtypesOfTypeParameterWithConstraints4.ts, 0, 0))
>U : Symbol(U, Decl(subtypesOfTypeParameterWithConstraints4.ts, 54, 23))
>Foo : Symbol(Foo, Decl(subtypesOfTypeParameterWithConstraints4.ts, 0, 0))
>V : Symbol(V, Decl(subtypesOfTypeParameterWithConstraints4.ts, 54, 38))
>B1 : Symbol(B1, Decl(subtypesOfTypeParameterWithConstraints4.ts, 28, 1))
>T : Symbol(T, Decl(subtypesOfTypeParameterWithConstraints4.ts, 54, 9))

    [x: string]: T;
>x : Symbol(x, Decl(subtypesOfTypeParameterWithConstraints4.ts, 55, 5))
>T : Symbol(T, Decl(subtypesOfTypeParameterWithConstraints4.ts, 54, 9))

    foo: U; // error
>foo : Symbol(D5.foo, Decl(subtypesOfTypeParameterWithConstraints4.ts, 55, 19))
>U : Symbol(U, Decl(subtypesOfTypeParameterWithConstraints4.ts, 54, 23))
}

class D6<T extends Foo, U extends Foo, V> extends B1<T> {
>D6 : Symbol(D6, Decl(subtypesOfTypeParameterWithConstraints4.ts, 57, 1))
>T : Symbol(T, Decl(subtypesOfTypeParameterWithConstraints4.ts, 59, 9))
>Foo : Symbol(Foo, Decl(subtypesOfTypeParameterWithConstraints4.ts, 0, 0))
>U : Symbol(U, Decl(subtypesOfTypeParameterWithConstraints4.ts, 59, 23))
>Foo : Symbol(Foo, Decl(subtypesOfTypeParameterWithConstraints4.ts, 0, 0))
>V : Symbol(V, Decl(subtypesOfTypeParameterWithConstraints4.ts, 59, 38))
>B1 : Symbol(B1, Decl(subtypesOfTypeParameterWithConstraints4.ts, 28, 1))
>T : Symbol(T, Decl(subtypesOfTypeParameterWithConstraints4.ts, 59, 9))

    [x: string]: T;
>x : Symbol(x, Decl(subtypesOfTypeParameterWithConstraints4.ts, 60, 5))
>T : Symbol(T, Decl(subtypesOfTypeParameterWithConstraints4.ts, 59, 9))

    foo: V; // error
>foo : Symbol(D6.foo, Decl(subtypesOfTypeParameterWithConstraints4.ts, 60, 19))
>V : Symbol(V, Decl(subtypesOfTypeParameterWithConstraints4.ts, 59, 38))
}

class D7<T extends Foo, U extends Foo, V> extends B1<U> {
>D7 : Symbol(D7, Decl(subtypesOfTypeParameterWithConstraints4.ts, 62, 1))
>T : Symbol(T, Decl(subtypesOfTypeParameterWithConstraints4.ts, 64, 9))
>Foo : Symbol(Foo, Decl(subtypesOfTypeParameterWithConstraints4.ts, 0, 0))
>U : Symbol(U, Decl(subtypesOfTypeParameterWithConstraints4.ts, 64, 23))
>Foo : Symbol(Foo, Decl(subtypesOfTypeParameterWithConstraints4.ts, 0, 0))
>V : Symbol(V, Decl(subtypesOfTypeParameterWithConstraints4.ts, 64, 38))
>B1 : Symbol(B1, Decl(subtypesOfTypeParameterWithConstraints4.ts, 28, 1))
>U : Symbol(U, Decl(subtypesOfTypeParameterWithConstraints4.ts, 64, 23))

    [x: string]: U;
>x : Symbol(x, Decl(subtypesOfTypeParameterWithConstraints4.ts, 65, 5))
>U : Symbol(U, Decl(subtypesOfTypeParameterWithConstraints4.ts, 64, 23))

    foo: T; // error
>foo : Symbol(D7.foo, Decl(subtypesOfTypeParameterWithConstraints4.ts, 65, 19))
>T : Symbol(T, Decl(subtypesOfTypeParameterWithConstraints4.ts, 64, 9))
}

class D8<T extends Foo, U extends Foo, V> extends B1<U> {
>D8 : Symbol(D8, Decl(subtypesOfTypeParameterWithConstraints4.ts, 67, 1))
>T : Symbol(T, Decl(subtypesOfTypeParameterWithConstraints4.ts, 69, 9))
>Foo : Symbol(Foo, Decl(subtypesOfTypeParameterWithConstraints4.ts, 0, 0))
>U : Symbol(U, Decl(subtypesOfTypeParameterWithConstraints4.ts, 69, 23))
>Foo : Symbol(Foo, Decl(subtypesOfTypeParameterWithConstraints4.ts, 0, 0))
>V : Symbol(V, Decl(subtypesOfTypeParameterWithConstraints4.ts, 69, 38))
>B1 : Symbol(B1, Decl(subtypesOfTypeParameterWithConstraints4.ts, 28, 1))
>U : Symbol(U, Decl(subtypesOfTypeParameterWithConstraints4.ts, 69, 23))

    [x: string]: U;
>x : Symbol(x, Decl(subtypesOfTypeParameterWithConstraints4.ts, 70, 5))
>U : Symbol(U, Decl(subtypesOfTypeParameterWithConstraints4.ts, 69, 23))

    foo: U; // ok
>foo : Symbol(D8.foo, Decl(subtypesOfTypeParameterWithConstraints4.ts, 70, 19))
>U : Symbol(U, Decl(subtypesOfTypeParameterWithConstraints4.ts, 69, 23))
}

class D9<T extends Foo, U extends Foo, V> extends B1<U> {
>D9 : Symbol(D9, Decl(subtypesOfTypeParameterWithConstraints4.ts, 72, 1))
>T : Symbol(T, Decl(subtypesOfTypeParameterWithConstraints4.ts, 74, 9))
>Foo : Symbol(Foo, Decl(subtypesOfTypeParameterWithConstraints4.ts, 0, 0))
>U : Symbol(U, Decl(subtypesOfTypeParameterWithConstraints4.ts, 74, 23))
>Foo : Symbol(Foo, Decl(subtypesOfTypeParameterWithConstraints4.ts, 0, 0))
>V : Symbol(V, Decl(subtypesOfTypeParameterWithConstraints4.ts, 74, 38))
>B1 : Symbol(B1, Decl(subtypesOfTypeParameterWithConstraints4.ts, 28, 1))
>U : Symbol(U, Decl(subtypesOfTypeParameterWithConstraints4.ts, 74, 23))

    [x: string]: U;
>x : Symbol(x, Decl(subtypesOfTypeParameterWithConstraints4.ts, 75, 5))
>U : Symbol(U, Decl(subtypesOfTypeParameterWithConstraints4.ts, 74, 23))

    foo: V; // error
>foo : Symbol(D9.foo, Decl(subtypesOfTypeParameterWithConstraints4.ts, 75, 19))
>V : Symbol(V, Decl(subtypesOfTypeParameterWithConstraints4.ts, 74, 38))
}
