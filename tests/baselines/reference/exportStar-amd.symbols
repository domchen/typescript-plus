=== tests/cases/conformance/es6/modules/t1.ts ===
export var x = 1;
>x : Symbol(x, Decl(t1.ts, 0, 10))

export var y = 2;
>y : Symbol(y, Decl(t1.ts, 1, 10))

=== tests/cases/conformance/es6/modules/t2.ts ===
export default "hello";
export function foo() { }
>foo : Symbol(foo, Decl(t2.ts, 0, 23))

=== tests/cases/conformance/es6/modules/t3.ts ===
var x = "x";
>x : Symbol(x, Decl(t3.ts, 0, 3))

var y = "y";
>y : Symbol(y, Decl(t3.ts, 1, 3))

var z = "z";
>z : Symbol(z, Decl(t3.ts, 2, 3))

export { x, y, z };
>x : Symbol(x, Decl(t3.ts, 3, 8))
>y : Symbol(y, Decl(t3.ts, 3, 11))
>z : Symbol(z, Decl(t3.ts, 3, 14))

=== tests/cases/conformance/es6/modules/t4.ts ===
export * from "./t1";
No type information for this code.export * from "./t2";
No type information for this code.export * from "./t3";
No type information for this code.
No type information for this code.=== tests/cases/conformance/es6/modules/main.ts ===
import hello, { x, y, z, foo } from "./t4";
>hello : Symbol(hello, Decl(main.ts, 0, 6))
>x : Symbol(x, Decl(main.ts, 0, 15))
>y : Symbol(y, Decl(main.ts, 0, 18))
>z : Symbol(z, Decl(main.ts, 0, 21))
>foo : Symbol(foo, Decl(main.ts, 0, 24))

hello;
>hello : Symbol(hello, Decl(main.ts, 0, 6))

x;
>x : Symbol(x, Decl(main.ts, 0, 15))

y;
>y : Symbol(y, Decl(main.ts, 0, 18))

z;
>z : Symbol(z, Decl(main.ts, 0, 21))

foo;
>foo : Symbol(foo, Decl(main.ts, 0, 24))

