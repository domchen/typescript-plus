=== tests/cases/compiler/file1.ts ===
export namespace Library {
>Library : Symbol(Library, Decl(file1.ts, 0, 0))

    export type Bar = { a: number };
>Bar : Symbol(Bar, Decl(file1.ts, 0, 26))
>a : Symbol(a, Decl(file1.ts, 1, 23))
}
var x: Library.Bar; // should work
>x : Symbol(x, Decl(file1.ts, 3, 3))
>Library : Symbol(Library, Decl(file1.ts, 0, 0))
>Bar : Symbol(Library.Bar, Decl(file1.ts, 0, 26))

Library.foo; // should be an error
=== tests/cases/compiler/file2.ts ===
import * as Lib from './file1';
>Lib : Symbol(Lib, Decl(file2.ts, 0, 6), Decl(file2.ts, 0, 31))

namespace Lib { // should fail to merge
>Lib : Symbol(Lib, Decl(file2.ts, 0, 6), Decl(file2.ts, 0, 31))

    export const foo: string = "";
>foo : Symbol(foo, Decl(file2.ts, 2, 16))
}
Lib.foo; // should work
>Lib.foo : Symbol(Lib.foo, Decl(file2.ts, 2, 16))
>Lib : Symbol(Lib, Decl(file2.ts, 0, 6), Decl(file2.ts, 0, 31))
>foo : Symbol(Lib.foo, Decl(file2.ts, 2, 16))

var x: Lib.Bar; // should be an error
>x : Symbol(x, Decl(file2.ts, 5, 3))
>Lib : Symbol(Lib, Decl(file2.ts, 0, 6), Decl(file2.ts, 0, 31))

export { Lib }
>Lib : Symbol(Lib, Decl(file2.ts, 6, 8))

