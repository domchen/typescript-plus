=== tests/cases/compiler/jsxHasLiteralType.tsx ===
import * as React from "react";
>React : Symbol(React, Decl(jsxHasLiteralType.tsx, 0, 6))

interface Props {
>Props : Symbol(Props, Decl(jsxHasLiteralType.tsx, 0, 31))

    x?: "a" | "b";
>x : Symbol(Props.x, Decl(jsxHasLiteralType.tsx, 2, 17))
}
class MyComponent<P extends Props = Props> extends React.Component<P, {}> {}
>MyComponent : Symbol(MyComponent, Decl(jsxHasLiteralType.tsx, 4, 1))
>P : Symbol(P, Decl(jsxHasLiteralType.tsx, 5, 18))
>Props : Symbol(Props, Decl(jsxHasLiteralType.tsx, 0, 31))
>Props : Symbol(Props, Decl(jsxHasLiteralType.tsx, 0, 31))
>React.Component : Symbol(React.Component, Decl(react.d.ts, 158, 55), Decl(react.d.ts, 161, 66))
>React : Symbol(React, Decl(jsxHasLiteralType.tsx, 0, 6))
>Component : Symbol(React.Component, Decl(react.d.ts, 158, 55), Decl(react.d.ts, 161, 66))
>P : Symbol(P, Decl(jsxHasLiteralType.tsx, 5, 18))

const m = <MyComponent x="a"/>
>m : Symbol(m, Decl(jsxHasLiteralType.tsx, 6, 5))
>MyComponent : Symbol(MyComponent, Decl(jsxHasLiteralType.tsx, 4, 1))
>x : Symbol(x, Decl(jsxHasLiteralType.tsx, 6, 22))

