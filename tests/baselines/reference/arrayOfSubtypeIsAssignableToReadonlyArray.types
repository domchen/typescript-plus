=== tests/cases/compiler/arrayOfSubtypeIsAssignableToReadonlyArray.ts ===
class A { a }
>A : A
>a : any

class B extends A { b }
>B : B
>A : A
>b : any

class C<T> extends Array<T> { c }
>C : C<T>
>T : T
>Array : T[]
>T : T
>c : any

declare var ara: A[];
>ara : A[]
>A : A

declare var arb: B[];
>arb : B[]
>B : B

declare var cra: C<A>;
>cra : C<A>
>C : C<T>
>A : A

declare var crb: C<B>;
>crb : C<B>
>C : C<T>
>B : B

declare var rra: ReadonlyArray<A>;
>rra : ReadonlyArray<A>
>ReadonlyArray : ReadonlyArray<T>
>A : A

declare var rrb: ReadonlyArray<B>;
>rrb : ReadonlyArray<B>
>ReadonlyArray : ReadonlyArray<T>
>B : B

rra = ara;
>rra = ara : A[]
>rra : ReadonlyArray<A>
>ara : A[]

rrb = arb; // OK, Array<B> is assignable to ReadonlyArray<A>
>rrb = arb : B[]
>rrb : ReadonlyArray<B>
>arb : B[]

rra = arb;
>rra = arb : B[]
>rra : ReadonlyArray<A>
>arb : B[]

rrb = ara; // error: 'A' is not assignable to 'B'
>rrb = ara : A[]
>rrb : ReadonlyArray<B>
>ara : A[]

rra = cra;
>rra = cra : C<A>
>rra : ReadonlyArray<A>
>cra : C<A>

rra = crb; // OK, C<B> is assignable to ReadonlyArray<A>
>rra = crb : C<B>
>rra : ReadonlyArray<A>
>crb : C<B>

rrb = crb;
>rrb = crb : C<B>
>rrb : ReadonlyArray<B>
>crb : C<B>

rrb = cra; // error: 'A' is not assignable to 'B'
>rrb = cra : C<A>
>rrb : ReadonlyArray<B>
>cra : C<A>

