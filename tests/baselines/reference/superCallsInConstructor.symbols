=== tests/cases/compiler/superCallsInConstructor.ts ===
class C {
>C : Symbol(C, Decl(superCallsInConstructor.ts, 0, 0))

    foo() {}
>foo : Symbol(C.foo, Decl(superCallsInConstructor.ts, 0, 9))

    bar() {}
>bar : Symbol(C.bar, Decl(superCallsInConstructor.ts, 1, 12))
}

class Base {
>Base : Symbol(Base, Decl(superCallsInConstructor.ts, 3, 1))

    x: string;
>x : Symbol(Base.x, Decl(superCallsInConstructor.ts, 5, 12))
}
 
class Derived extends Base {
>Derived : Symbol(Derived, Decl(superCallsInConstructor.ts, 7, 1))
>Base : Symbol(Base, Decl(superCallsInConstructor.ts, 3, 1))

    constructor() {
        with(new C()) {
>C : Symbol(C, Decl(superCallsInConstructor.ts, 0, 0))

            foo();
            super();
            bar();
        }

        try {} catch(e) { super(); }
>e : Symbol(e, Decl(superCallsInConstructor.ts, 17, 21))
>super : Symbol(Base, Decl(superCallsInConstructor.ts, 3, 1))
    }
}
