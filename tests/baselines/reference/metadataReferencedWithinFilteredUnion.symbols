=== tests/cases/compiler/Class1.ts ===
export class Class1 {
>Class1 : Symbol(Class1, Decl(Class1.ts, 0, 0))
}
=== tests/cases/compiler/Class2.ts ===
import { Class1 } from './Class1';
>Class1 : Symbol(Class1, Decl(Class2.ts, 0, 8))

function decorate(target: any, propertyKey: string) {
>decorate : Symbol(decorate, Decl(Class2.ts, 0, 34))
>target : Symbol(target, Decl(Class2.ts, 2, 18))
>propertyKey : Symbol(propertyKey, Decl(Class2.ts, 2, 30))
}

export class Class2 {
>Class2 : Symbol(Class2, Decl(Class2.ts, 3, 1))

    @decorate
>decorate : Symbol(decorate, Decl(Class2.ts, 0, 34))

    get prop(): Class1 | undefined {
>prop : Symbol(Class2.prop, Decl(Class2.ts, 5, 21))
>Class1 : Symbol(Class1, Decl(Class2.ts, 0, 8))

        return undefined;
>undefined : Symbol(undefined)
    }
}
