=== tests/cases/compiler/color.ts ===
interface Color {
>Color : Symbol(Color, Decl(color.ts, 0, 0))

    c: string;
>c : Symbol(Color.c, Decl(color.ts, 0, 17))
}
export default Color;
>Color : Symbol(Color, Decl(color.ts, 0, 0))

=== tests/cases/compiler/file1.ts ===
import Color from "./color";
>Color : Symbol(Color, Decl(file1.ts, 0, 6))

export declare function styled(): Color;
>styled : Symbol(styled, Decl(file1.ts, 0, 28))
>Color : Symbol(Color, Decl(file1.ts, 0, 6))

=== tests/cases/compiler/file2.ts ===
import { styled }  from "./file1";
>styled : Symbol(styled, Decl(file2.ts, 0, 8))

export const A = styled();
>A : Symbol(A, Decl(file2.ts, 1, 12))
>styled : Symbol(styled, Decl(file2.ts, 0, 8))

