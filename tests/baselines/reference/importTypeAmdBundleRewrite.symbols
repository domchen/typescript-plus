=== tests/cases/conformance/types/import/a/b/c.ts ===
export interface Foo {
>Foo : Symbol(Foo, Decl(c.ts, 0, 0))

    x: 12;
>x : Symbol(Foo.x, Decl(c.ts, 0, 22))
}
=== tests/cases/conformance/types/import/a/inner.ts ===
const c: import("./b/c").Foo = {x: 12};
>c : Symbol(c, Decl(inner.ts, 0, 5))
>Foo : Symbol(Foo, Decl(c.ts, 0, 0))
>x : Symbol(x, Decl(inner.ts, 0, 32))

export {c};
>c : Symbol(c, Decl(inner.ts, 1, 8))

=== tests/cases/conformance/types/import/index.ts ===
const d: typeof import("./a/inner")["c"] = {x: 12};
>d : Symbol(d, Decl(index.ts, 0, 5))
>x : Symbol(x, Decl(index.ts, 0, 44))

export {d};
>d : Symbol(d, Decl(index.ts, 1, 8))

