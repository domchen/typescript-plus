=== tests/cases/conformance/classes/classDeclarations/file1.ts ===
declare class C1 {}
>C1 : Symbol(C1, Decl(file1.ts, 0, 0))

declare class C1 {}
>C1 : Symbol(C1, Decl(file1.ts, 0, 19))

declare class C2 {}
>C2 : Symbol(C2, Decl(file1.ts, 2, 19), Decl(file1.ts, 4, 19))

interface C2 {}
>C2 : Symbol(C2, Decl(file1.ts, 2, 19), Decl(file1.ts, 4, 19))

declare class C2 {}
>C2 : Symbol(C2, Decl(file1.ts, 6, 15))

=== tests/cases/conformance/classes/classDeclarations/file2.ts ===
declare class C3 { }
>C3 : Symbol(C3, Decl(file2.ts, 0, 0))

=== tests/cases/conformance/classes/classDeclarations/file3.ts ===
declare class C3 { }
>C3 : Symbol(C3, Decl(file3.ts, 0, 0))

