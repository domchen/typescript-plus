=== tests/cases/compiler/cf.ts ===
function f() {
>f : Symbol(f, Decl(cf.ts, 0, 0))

    var z;
>z : Symbol(z, Decl(cf.ts, 1, 7))

    var x=10;
>x : Symbol(x, Decl(cf.ts, 2, 7))

    var y=3;
>y : Symbol(y, Decl(cf.ts, 3, 7))

    L1: for (var i=0;i<19;i++) {
>i : Symbol(i, Decl(cf.ts, 5, 16))
>i : Symbol(i, Decl(cf.ts, 5, 16))
>i : Symbol(i, Decl(cf.ts, 5, 16))

        if (y==7) {
>y : Symbol(y, Decl(cf.ts, 3, 7))

            continue L1;
            x=11;
>x : Symbol(x, Decl(cf.ts, 2, 7))
        }
        if (y==3) {
>y : Symbol(y, Decl(cf.ts, 3, 7))

            y++;
>y : Symbol(y, Decl(cf.ts, 3, 7))
        }
        else {
            y--;
>y : Symbol(y, Decl(cf.ts, 3, 7))
        }
        do {
            y+=2;
>y : Symbol(y, Decl(cf.ts, 3, 7))

            if (y==20) {
>y : Symbol(y, Decl(cf.ts, 3, 7))

                break;
                x=12;
>x : Symbol(x, Decl(cf.ts, 2, 7))
            }
        } while (y<41);
>y : Symbol(y, Decl(cf.ts, 3, 7))

        y++;
>y : Symbol(y, Decl(cf.ts, 3, 7))
    }
    while (y>2) {
>y : Symbol(y, Decl(cf.ts, 3, 7))

        y=y>>1;
>y : Symbol(y, Decl(cf.ts, 3, 7))
>y : Symbol(y, Decl(cf.ts, 3, 7))
    }
    L2: try {
        L3: if (x<y) {
>x : Symbol(x, Decl(cf.ts, 2, 7))
>y : Symbol(y, Decl(cf.ts, 3, 7))

            break L2;
            x=13;
>x : Symbol(x, Decl(cf.ts, 2, 7))
        }
        else {
            break L3;
            x=14;
>x : Symbol(x, Decl(cf.ts, 2, 7))
        }
    }
    catch (e) {
>e : Symbol(e, Decl(cf.ts, 38, 11))

        x++;
>x : Symbol(x, Decl(cf.ts, 2, 7))
    }
    finally {
        x+=3;
>x : Symbol(x, Decl(cf.ts, 2, 7))
    }
    y++;
>y : Symbol(y, Decl(cf.ts, 3, 7))

    for (var k=0;k<10;k++) {
>k : Symbol(k, Decl(cf.ts, 45, 12))
>k : Symbol(k, Decl(cf.ts, 45, 12))
>k : Symbol(k, Decl(cf.ts, 45, 12))

        z;
>z : Symbol(z, Decl(cf.ts, 1, 7))

        break;
    }
    for (k=0;k<10;k++) {
>k : Symbol(k, Decl(cf.ts, 45, 12))
>k : Symbol(k, Decl(cf.ts, 45, 12))
>k : Symbol(k, Decl(cf.ts, 45, 12))

        if (k==6) {
>k : Symbol(k, Decl(cf.ts, 45, 12))

            continue;
        }
        break;
    }
}

