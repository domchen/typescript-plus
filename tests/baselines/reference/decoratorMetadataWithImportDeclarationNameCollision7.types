=== tests/cases/compiler/db.ts ===
export default class db {
>db : db

    public doSomething() {
>doSomething : () => void
    }
}

=== tests/cases/compiler/service.ts ===
import db from './db';
>db : typeof db

function someDecorator(target) {
>someDecorator : (target: any) => any
>target : any

    return target;
>target : any
}
@someDecorator
>someDecorator : (target: any) => any

class MyClass {
>MyClass : MyClass

    db: db.db; //error
>db : any
>db : any

    constructor(db: db.db) { // error
>db : any
>db : any

        this.db = db;
>this.db = db : any
>this.db : any
>this : this
>db : any
>db : any

        this.db.doSomething();
>this.db.doSomething() : any
>this.db.doSomething : any
>this.db : any
>this : this
>db : any
>doSomething : any
    }
}
export {MyClass};
>MyClass : typeof MyClass

