=== tests/cases/compiler/derivedTypeCallingBaseImplWithOptionalParams.ts ===
interface MyInterface {
>MyInterface : Symbol(MyInterface, Decl(derivedTypeCallingBaseImplWithOptionalParams.ts, 0, 0))

    myMethod(...myList: any[]);
>myMethod : Symbol(MyInterface.myMethod, Decl(derivedTypeCallingBaseImplWithOptionalParams.ts, 0, 23))
>myList : Symbol(myList, Decl(derivedTypeCallingBaseImplWithOptionalParams.ts, 1, 13))
}
class MyClass implements MyInterface {
>MyClass : Symbol(MyClass, Decl(derivedTypeCallingBaseImplWithOptionalParams.ts, 2, 1))
>MyInterface : Symbol(MyInterface, Decl(derivedTypeCallingBaseImplWithOptionalParams.ts, 0, 0))

    myMethod(myList: any[]) { // valid
>myMethod : Symbol(MyClass.myMethod, Decl(derivedTypeCallingBaseImplWithOptionalParams.ts, 3, 38))
>myList : Symbol(myList, Decl(derivedTypeCallingBaseImplWithOptionalParams.ts, 4, 13))
    }
}

var x: MyInterface = new MyClass();
>x : Symbol(x, Decl(derivedTypeCallingBaseImplWithOptionalParams.ts, 8, 3))
>MyInterface : Symbol(MyInterface, Decl(derivedTypeCallingBaseImplWithOptionalParams.ts, 0, 0))
>MyClass : Symbol(MyClass, Decl(derivedTypeCallingBaseImplWithOptionalParams.ts, 2, 1))

x.myMethod(); // should be valid, but MyClass has no implementation to handle it.
>x.myMethod : Symbol(MyInterface.myMethod, Decl(derivedTypeCallingBaseImplWithOptionalParams.ts, 0, 23))
>x : Symbol(x, Decl(derivedTypeCallingBaseImplWithOptionalParams.ts, 8, 3))
>myMethod : Symbol(MyInterface.myMethod, Decl(derivedTypeCallingBaseImplWithOptionalParams.ts, 0, 23))

var y: MyClass = new MyClass();
>y : Symbol(y, Decl(derivedTypeCallingBaseImplWithOptionalParams.ts, 11, 3))
>MyClass : Symbol(MyClass, Decl(derivedTypeCallingBaseImplWithOptionalParams.ts, 2, 1))
>MyClass : Symbol(MyClass, Decl(derivedTypeCallingBaseImplWithOptionalParams.ts, 2, 1))

y.myMethod(); // error
>y.myMethod : Symbol(MyClass.myMethod, Decl(derivedTypeCallingBaseImplWithOptionalParams.ts, 3, 38))
>y : Symbol(y, Decl(derivedTypeCallingBaseImplWithOptionalParams.ts, 11, 3))
>myMethod : Symbol(MyClass.myMethod, Decl(derivedTypeCallingBaseImplWithOptionalParams.ts, 3, 38))

