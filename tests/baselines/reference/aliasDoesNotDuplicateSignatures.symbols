=== tests/cases/compiler/demo.d.ts ===
declare namespace demoNS {
>demoNS : Symbol(demoNS, Decl(demo.d.ts, 0, 0))

    function f(): void;
>f : Symbol(f, Decl(demo.d.ts, 0, 26))
}
declare module 'demoModule' {
>'demoModule' : Symbol('demoModule', Decl(demo.d.ts, 2, 1))

    import alias = demoNS;
>alias : Symbol(alias, Decl(demo.d.ts, 3, 29))
>demoNS : Symbol(alias, Decl(demo.d.ts, 0, 0))

    export = alias;
>alias : Symbol(alias, Decl(demo.d.ts, 3, 29))
}
=== tests/cases/compiler/user.ts ===
import { f } from 'demoModule';
>f : Symbol(f, Decl(user.ts, 0, 8))

// Assign an incorrect type here to see the type of 'f'.
let x1: string = demoNS.f;
>x1 : Symbol(x1, Decl(user.ts, 2, 3))
>demoNS.f : Symbol(f, Decl(demo.d.ts, 0, 26))
>demoNS : Symbol(demoNS, Decl(demo.d.ts, 0, 0))
>f : Symbol(f, Decl(demo.d.ts, 0, 26))

let x2: string = f;
>x2 : Symbol(x2, Decl(user.ts, 3, 3))
>f : Symbol(f, Decl(user.ts, 0, 8))

