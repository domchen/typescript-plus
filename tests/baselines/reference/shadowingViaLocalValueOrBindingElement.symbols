=== tests/cases/compiler/shadowingViaLocalValueOrBindingElement.ts ===
if (true) {
    let x;
>x : Symbol(x, Decl(shadowingViaLocalValueOrBindingElement.ts, 1, 7))

    if (true) {
        var x = 0; // Error
>x : Symbol(x, Decl(shadowingViaLocalValueOrBindingElement.ts, 3, 11), Decl(shadowingViaLocalValueOrBindingElement.ts, 4, 13), Decl(shadowingViaLocalValueOrBindingElement.ts, 5, 13), Decl(shadowingViaLocalValueOrBindingElement.ts, 6, 13), Decl(shadowingViaLocalValueOrBindingElement.ts, 7, 13))

        var { x = 0 } = { x: 0 }; // Error
>x : Symbol(x, Decl(shadowingViaLocalValueOrBindingElement.ts, 3, 11), Decl(shadowingViaLocalValueOrBindingElement.ts, 4, 13), Decl(shadowingViaLocalValueOrBindingElement.ts, 5, 13), Decl(shadowingViaLocalValueOrBindingElement.ts, 6, 13), Decl(shadowingViaLocalValueOrBindingElement.ts, 7, 13))
>x : Symbol(x, Decl(shadowingViaLocalValueOrBindingElement.ts, 4, 25))

        var { x: x = 0 } = { x: 0 }; // Error
>x : Symbol(x, Decl(shadowingViaLocalValueOrBindingElement.ts, 5, 28))
>x : Symbol(x, Decl(shadowingViaLocalValueOrBindingElement.ts, 3, 11), Decl(shadowingViaLocalValueOrBindingElement.ts, 4, 13), Decl(shadowingViaLocalValueOrBindingElement.ts, 5, 13), Decl(shadowingViaLocalValueOrBindingElement.ts, 6, 13), Decl(shadowingViaLocalValueOrBindingElement.ts, 7, 13))
>x : Symbol(x, Decl(shadowingViaLocalValueOrBindingElement.ts, 5, 28))

        var { x } = { x: 0 }; // Error
>x : Symbol(x, Decl(shadowingViaLocalValueOrBindingElement.ts, 3, 11), Decl(shadowingViaLocalValueOrBindingElement.ts, 4, 13), Decl(shadowingViaLocalValueOrBindingElement.ts, 5, 13), Decl(shadowingViaLocalValueOrBindingElement.ts, 6, 13), Decl(shadowingViaLocalValueOrBindingElement.ts, 7, 13))
>x : Symbol(x, Decl(shadowingViaLocalValueOrBindingElement.ts, 6, 21))

        var { x: x } = { x: 0 }; // Error
>x : Symbol(x, Decl(shadowingViaLocalValueOrBindingElement.ts, 7, 24))
>x : Symbol(x, Decl(shadowingViaLocalValueOrBindingElement.ts, 3, 11), Decl(shadowingViaLocalValueOrBindingElement.ts, 4, 13), Decl(shadowingViaLocalValueOrBindingElement.ts, 5, 13), Decl(shadowingViaLocalValueOrBindingElement.ts, 6, 13), Decl(shadowingViaLocalValueOrBindingElement.ts, 7, 13))
>x : Symbol(x, Decl(shadowingViaLocalValueOrBindingElement.ts, 7, 24))
    }
}
