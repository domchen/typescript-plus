=== tests/cases/compiler/genericDerivedTypeWithSpecializedBase.ts ===
class A<T> {
>A : Symbol(A, Decl(genericDerivedTypeWithSpecializedBase.ts, 0, 0))
>T : Symbol(T, Decl(genericDerivedTypeWithSpecializedBase.ts, 0, 8))

    x: T;
>x : Symbol(A.x, Decl(genericDerivedTypeWithSpecializedBase.ts, 0, 12))
>T : Symbol(T, Decl(genericDerivedTypeWithSpecializedBase.ts, 0, 8))
}

class B<U> extends A<string> {
>B : Symbol(B, Decl(genericDerivedTypeWithSpecializedBase.ts, 2, 1))
>U : Symbol(U, Decl(genericDerivedTypeWithSpecializedBase.ts, 4, 8))
>A : Symbol(A, Decl(genericDerivedTypeWithSpecializedBase.ts, 0, 0))

    y: U;
>y : Symbol(B.y, Decl(genericDerivedTypeWithSpecializedBase.ts, 4, 30))
>U : Symbol(U, Decl(genericDerivedTypeWithSpecializedBase.ts, 4, 8))
}

var x: A<number>;
>x : Symbol(x, Decl(genericDerivedTypeWithSpecializedBase.ts, 8, 3))
>A : Symbol(A, Decl(genericDerivedTypeWithSpecializedBase.ts, 0, 0))

var y: B<number>;
>y : Symbol(y, Decl(genericDerivedTypeWithSpecializedBase.ts, 9, 3))
>B : Symbol(B, Decl(genericDerivedTypeWithSpecializedBase.ts, 2, 1))

x = y;  // error
>x : Symbol(x, Decl(genericDerivedTypeWithSpecializedBase.ts, 8, 3))
>y : Symbol(y, Decl(genericDerivedTypeWithSpecializedBase.ts, 9, 3))

