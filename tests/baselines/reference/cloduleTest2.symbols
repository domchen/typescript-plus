=== tests/cases/compiler/cloduleTest2.ts ===
module T1 {
>T1 : Symbol(T1, Decl(cloduleTest2.ts, 0, 0))

    module m3d { export var y = 2; }
>m3d : Symbol(m3d, Decl(cloduleTest2.ts, 0, 11), Decl(cloduleTest2.ts, 1, 36))
>y : Symbol(y, Decl(cloduleTest2.ts, 1, 27))

    declare class m3d { constructor(foo); foo(): void ; static bar(); }
>m3d : Symbol(m3d, Decl(cloduleTest2.ts, 0, 11), Decl(cloduleTest2.ts, 1, 36))
>foo : Symbol(foo, Decl(cloduleTest2.ts, 2, 36))
>foo : Symbol(m3d.foo, Decl(cloduleTest2.ts, 2, 41))
>bar : Symbol(m3d.bar, Decl(cloduleTest2.ts, 2, 55))

    var r = new m3d(); // error
>r : Symbol(r, Decl(cloduleTest2.ts, 3, 7))
>m3d : Symbol(m3d, Decl(cloduleTest2.ts, 0, 11), Decl(cloduleTest2.ts, 1, 36))
}

module T2 {
>T2 : Symbol(T2, Decl(cloduleTest2.ts, 4, 1))

    declare class m3d { constructor(foo); foo(): void; static bar(); }
>m3d : Symbol(m3d, Decl(cloduleTest2.ts, 6, 11), Decl(cloduleTest2.ts, 7, 70))
>foo : Symbol(foo, Decl(cloduleTest2.ts, 7, 36))
>foo : Symbol(m3d.foo, Decl(cloduleTest2.ts, 7, 41))
>bar : Symbol(m3d.bar, Decl(cloduleTest2.ts, 7, 54))

    module m3d { export var y = 2; }
>m3d : Symbol(m3d, Decl(cloduleTest2.ts, 6, 11), Decl(cloduleTest2.ts, 7, 70))
>y : Symbol(y, Decl(cloduleTest2.ts, 8, 27))

    var r = new m3d(); // error
>r : Symbol(r, Decl(cloduleTest2.ts, 9, 7))
>m3d : Symbol(m3d, Decl(cloduleTest2.ts, 6, 11), Decl(cloduleTest2.ts, 7, 70))
}

module T3 {
>T3 : Symbol(T3, Decl(cloduleTest2.ts, 10, 1))

    module m3d { export var y = 2; }
>m3d : Symbol(m3d, Decl(cloduleTest2.ts, 12, 11), Decl(cloduleTest2.ts, 13, 36))
>y : Symbol(y, Decl(cloduleTest2.ts, 13, 27))

    declare class m3d { foo(): void; static bar(); }
>m3d : Symbol(m3d, Decl(cloduleTest2.ts, 12, 11), Decl(cloduleTest2.ts, 13, 36))
>foo : Symbol(m3d.foo, Decl(cloduleTest2.ts, 14, 23))
>bar : Symbol(m3d.bar, Decl(cloduleTest2.ts, 14, 36))

    var r = new m3d();
>r : Symbol(r, Decl(cloduleTest2.ts, 15, 7))
>m3d : Symbol(m3d, Decl(cloduleTest2.ts, 12, 11), Decl(cloduleTest2.ts, 13, 36))

    r.foo();
>r.foo : Symbol(m3d.foo, Decl(cloduleTest2.ts, 14, 23))
>r : Symbol(r, Decl(cloduleTest2.ts, 15, 7))
>foo : Symbol(m3d.foo, Decl(cloduleTest2.ts, 14, 23))

    r.bar(); // error
>r : Symbol(r, Decl(cloduleTest2.ts, 15, 7))

    r.y; // error
>r : Symbol(r, Decl(cloduleTest2.ts, 15, 7))
}

module T4 {
>T4 : Symbol(T4, Decl(cloduleTest2.ts, 19, 1))

    declare class m3d { foo(): void; static bar(); }
>m3d : Symbol(m3d, Decl(cloduleTest2.ts, 21, 11), Decl(cloduleTest2.ts, 22, 52))
>foo : Symbol(m3d.foo, Decl(cloduleTest2.ts, 22, 23))
>bar : Symbol(m3d.bar, Decl(cloduleTest2.ts, 22, 36))

    module m3d { export var y = 2; }
>m3d : Symbol(m3d, Decl(cloduleTest2.ts, 21, 11), Decl(cloduleTest2.ts, 22, 52))
>y : Symbol(y, Decl(cloduleTest2.ts, 23, 27))

    var r = new m3d();
>r : Symbol(r, Decl(cloduleTest2.ts, 24, 7))
>m3d : Symbol(m3d, Decl(cloduleTest2.ts, 21, 11), Decl(cloduleTest2.ts, 22, 52))

    r.foo();
>r.foo : Symbol(m3d.foo, Decl(cloduleTest2.ts, 22, 23))
>r : Symbol(r, Decl(cloduleTest2.ts, 24, 7))
>foo : Symbol(m3d.foo, Decl(cloduleTest2.ts, 22, 23))

    r.bar(); // error
>r : Symbol(r, Decl(cloduleTest2.ts, 24, 7))

    r.y; // error
>r : Symbol(r, Decl(cloduleTest2.ts, 24, 7))
}

module m3d { export var y = 2; }
>m3d : Symbol(m3d, Decl(cloduleTest2.ts, 28, 1), Decl(cloduleTest2.ts, 30, 32))
>y : Symbol(y, Decl(cloduleTest2.ts, 30, 23))

declare class m3d { constructor(foo); foo(): void; static bar(); }
>m3d : Symbol(m3d, Decl(cloduleTest2.ts, 28, 1), Decl(cloduleTest2.ts, 30, 32))
>foo : Symbol(foo, Decl(cloduleTest2.ts, 31, 32))
>foo : Symbol(m3d.foo, Decl(cloduleTest2.ts, 31, 37))
>bar : Symbol(m3d.bar, Decl(cloduleTest2.ts, 31, 50))

var r = new m3d(); // error
>r : Symbol(r, Decl(cloduleTest2.ts, 32, 3))
>m3d : Symbol(m3d, Decl(cloduleTest2.ts, 28, 1), Decl(cloduleTest2.ts, 30, 32))

declare class m4d extends m3d { }
>m4d : Symbol(m4d, Decl(cloduleTest2.ts, 32, 18))
>m3d : Symbol(m3d, Decl(cloduleTest2.ts, 28, 1), Decl(cloduleTest2.ts, 30, 32))

var r2 = new m4d(); // error
>r2 : Symbol(r2, Decl(cloduleTest2.ts, 35, 3))
>m4d : Symbol(m4d, Decl(cloduleTest2.ts, 32, 18))

