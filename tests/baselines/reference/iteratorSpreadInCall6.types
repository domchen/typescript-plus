=== tests/cases/conformance/es6/spread/iteratorSpreadInCall6.ts ===
function foo(...s: (symbol | number)[]) { }
>foo : (...s: (number | symbol)[]) => void
>s : (number | symbol)[]

class SymbolIterator {
>SymbolIterator : SymbolIterator

    next() {
>next : () => { value: symbol; done: boolean; }

        return {
>{            value: Symbol(),            done: false        } : { value: symbol; done: boolean; }

            value: Symbol(),
>value : symbol
>Symbol() : symbol
>Symbol : SymbolConstructor

            done: false
>done : boolean
>false : false

        };
    }

    [Symbol.iterator]() {
>[Symbol.iterator] : () => this
>Symbol.iterator : symbol
>Symbol : SymbolConstructor
>iterator : symbol

        return this;
>this : this
    }
}

class StringIterator {
>StringIterator : StringIterator

    next() {
>next : () => { value: string; done: boolean; }

        return {
>{            value: "",            done: false        } : { value: string; done: boolean; }

            value: "",
>value : string
>"" : ""

            done: false
>done : boolean
>false : false

        };
    }

    [Symbol.iterator]() {
>[Symbol.iterator] : () => this
>Symbol.iterator : symbol
>Symbol : SymbolConstructor
>iterator : symbol

        return this;
>this : this
    }
}

foo(...new SymbolIterator, ...new StringIterator);
>foo(...new SymbolIterator, ...new StringIterator) : void
>foo : (...s: (number | symbol)[]) => void
>...new SymbolIterator : symbol
>new SymbolIterator : SymbolIterator
>SymbolIterator : typeof SymbolIterator
>...new StringIterator : string
>new StringIterator : StringIterator
>StringIterator : typeof StringIterator

