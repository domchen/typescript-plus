=== tests/cases/compiler/collisionSuperAndLocalVarInMethod.ts ===
var _super = 10; // No Error
>_super : Symbol(_super, Decl(collisionSuperAndLocalVarInMethod.ts, 0, 3))

class Foo {
>Foo : Symbol(Foo, Decl(collisionSuperAndLocalVarInMethod.ts, 0, 16))

    x() {
>x : Symbol(Foo.x, Decl(collisionSuperAndLocalVarInMethod.ts, 1, 11))

        var _super = 10; // No error
>_super : Symbol(_super, Decl(collisionSuperAndLocalVarInMethod.ts, 3, 11))
    }
}
class b extends Foo {
>b : Symbol(b, Decl(collisionSuperAndLocalVarInMethod.ts, 5, 1))
>Foo : Symbol(Foo, Decl(collisionSuperAndLocalVarInMethod.ts, 0, 16))

    public foo() {
>foo : Symbol(b.foo, Decl(collisionSuperAndLocalVarInMethod.ts, 6, 21))

        var _super = 10; // Should be error 
>_super : Symbol(_super, Decl(collisionSuperAndLocalVarInMethod.ts, 8, 11))
    }
}
class c extends Foo {
>c : Symbol(c, Decl(collisionSuperAndLocalVarInMethod.ts, 10, 1))
>Foo : Symbol(Foo, Decl(collisionSuperAndLocalVarInMethod.ts, 0, 16))

    public foo() {
>foo : Symbol(c.foo, Decl(collisionSuperAndLocalVarInMethod.ts, 11, 21))

        var x = () => {
>x : Symbol(x, Decl(collisionSuperAndLocalVarInMethod.ts, 13, 11))

            var _super = 10; // Should be error
>_super : Symbol(_super, Decl(collisionSuperAndLocalVarInMethod.ts, 14, 15))
        }
    }
}
