=== tests/cases/compiler/foo.js ===
class C {
>C : Symbol(C, Decl(foo.js, 0, 0))

    constructor() {
        if (cond) {
            this.p = null;
>this.p : Symbol(C.p, Decl(foo.js, 2, 19), Decl(foo.js, 5, 14))
>this : Symbol(C, Decl(foo.js, 0, 0))
>p : Symbol(C.p, Decl(foo.js, 2, 19), Decl(foo.js, 5, 14))
        }
        else {
            this.p = 0;
>this.p : Symbol(C.p, Decl(foo.js, 2, 19), Decl(foo.js, 5, 14))
>this : Symbol(C, Decl(foo.js, 0, 0))
>p : Symbol(C.p, Decl(foo.js, 2, 19), Decl(foo.js, 5, 14))
        }
    }
}

=== tests/cases/compiler/bar.ts ===
(new C()).p = "string"; // Error
>(new C()).p : Symbol(C.p, Decl(foo.js, 2, 19), Decl(foo.js, 5, 14))
>C : Symbol(C, Decl(foo.js, 0, 0))
>p : Symbol(C.p, Decl(foo.js, 2, 19), Decl(foo.js, 5, 14))

