=== tests/cases/compiler/file3.ts ===
import x = require("./file1");
>x : Symbol(x, Decl(file3.ts, 0, 0))

import "./file2";
let a: x.A; // should not work
>a : Symbol(a, Decl(file3.ts, 2, 3))

=== tests/cases/compiler/file1.ts ===
var x = 1;
>x : Symbol(x, Decl(file1.ts, 0, 3))

export = x;
>x : Symbol(x, Decl(file1.ts, 0, 3))

=== tests/cases/compiler/file2.ts ===
import x = require("./file1"); 
>x : Symbol(x, Decl(file2.ts, 0, 0))

// augmentation for './file1'
// should error since './file1' does not have namespace meaning
declare module "./file1" {
>"./file1" : Symbol("./file1", Decl(file2.ts, 0, 30))

    interface A { a }
>A : Symbol(A, Decl(file2.ts, 4, 26))
>a : Symbol(A.a, Decl(file2.ts, 5, 17))
}

