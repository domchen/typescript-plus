=== tests/cases/conformance/jsx/file.tsx ===
import React = require('react');
>React : Symbol(React, Decl(file.tsx, 0, 0))

interface Prop {
>Prop : Symbol(Prop, Decl(file.tsx, 0, 32))

    a: number,
>a : Symbol(Prop.a, Decl(file.tsx, 2, 16))

    b: string,
>b : Symbol(Prop.b, Decl(file.tsx, 3, 14))

    children: string | JSX.Element
>children : Symbol(Prop.children, Decl(file.tsx, 4, 14))
>JSX : Symbol(JSX, Decl(react.d.ts, 2353, 1))
>Element : Symbol(JSX.Element, Decl(react.d.ts, 2356, 27))
}

function Comp(p: Prop) {
>Comp : Symbol(Comp, Decl(file.tsx, 6, 1))
>p : Symbol(p, Decl(file.tsx, 8, 14))
>Prop : Symbol(Prop, Decl(file.tsx, 0, 32))

    return <div>{p.b}</div>;
>div : Symbol(JSX.IntrinsicElements.div, Decl(react.d.ts, 2400, 45))
>p.b : Symbol(Prop.b, Decl(file.tsx, 3, 14))
>p : Symbol(p, Decl(file.tsx, 8, 14))
>b : Symbol(Prop.b, Decl(file.tsx, 3, 14))
>div : Symbol(JSX.IntrinsicElements.div, Decl(react.d.ts, 2400, 45))
}

// Error: missing children
let k = <Comp a={10} b="hi" />;
>k : Symbol(k, Decl(file.tsx, 13, 3))
>Comp : Symbol(Comp, Decl(file.tsx, 6, 1))
>a : Symbol(a, Decl(file.tsx, 13, 13))
>b : Symbol(b, Decl(file.tsx, 13, 20))

let k0 =
>k0 : Symbol(k0, Decl(file.tsx, 15, 3))

    <Comp a={10} b="hi" children="Random" >
>Comp : Symbol(Comp, Decl(file.tsx, 6, 1))
>a : Symbol(a, Decl(file.tsx, 16, 9))
>b : Symbol(b, Decl(file.tsx, 16, 16))
>children : Symbol(children, Decl(file.tsx, 16, 23))

        hi hi hi!
    </Comp>;
>Comp : Symbol(Comp, Decl(file.tsx, 6, 1))

let o = {
>o : Symbol(o, Decl(file.tsx, 20, 3))

     children:"Random"
>children : Symbol(children, Decl(file.tsx, 20, 9))
}
let k1 =
>k1 : Symbol(k1, Decl(file.tsx, 23, 3))

    <Comp a={10} b="hi" {...o} >
>Comp : Symbol(Comp, Decl(file.tsx, 6, 1))
>a : Symbol(a, Decl(file.tsx, 24, 9))
>b : Symbol(b, Decl(file.tsx, 24, 16))
>o : Symbol(o, Decl(file.tsx, 20, 3))

        hi hi hi!
    </Comp>;
>Comp : Symbol(Comp, Decl(file.tsx, 6, 1))

// Error: incorrect type
let k2 =
>k2 : Symbol(k2, Decl(file.tsx, 29, 3))

    <Comp a={10} b="hi">
>Comp : Symbol(Comp, Decl(file.tsx, 6, 1))
>a : Symbol(a, Decl(file.tsx, 30, 9))
>b : Symbol(b, Decl(file.tsx, 30, 16))

        <div> My Div </div>
>div : Symbol(JSX.IntrinsicElements.div, Decl(react.d.ts, 2400, 45))
>div : Symbol(JSX.IntrinsicElements.div, Decl(react.d.ts, 2400, 45))

        {(name: string) => <div> My name {name} </div>}
>name : Symbol(name, Decl(file.tsx, 32, 10))
>div : Symbol(JSX.IntrinsicElements.div, Decl(react.d.ts, 2400, 45))
>name : Symbol(name, Decl(file.tsx, 32, 10))
>div : Symbol(JSX.IntrinsicElements.div, Decl(react.d.ts, 2400, 45))

    </Comp>;
>Comp : Symbol(Comp, Decl(file.tsx, 6, 1))

let k3 =
>k3 : Symbol(k3, Decl(file.tsx, 35, 3))

    <Comp a={10} b="hi">
>Comp : Symbol(Comp, Decl(file.tsx, 6, 1))
>a : Symbol(a, Decl(file.tsx, 36, 9))
>b : Symbol(b, Decl(file.tsx, 36, 16))

        <div> My Div </div>
>div : Symbol(JSX.IntrinsicElements.div, Decl(react.d.ts, 2400, 45))
>div : Symbol(JSX.IntrinsicElements.div, Decl(react.d.ts, 2400, 45))

        {1000000}
    </Comp>;
>Comp : Symbol(Comp, Decl(file.tsx, 6, 1))

let k4 =
>k4 : Symbol(k4, Decl(file.tsx, 41, 3))

    <Comp a={10} b="hi" >
>Comp : Symbol(Comp, Decl(file.tsx, 6, 1))
>a : Symbol(a, Decl(file.tsx, 42, 9))
>b : Symbol(b, Decl(file.tsx, 42, 16))

        <div> My Div </div>
>div : Symbol(JSX.IntrinsicElements.div, Decl(react.d.ts, 2400, 45))
>div : Symbol(JSX.IntrinsicElements.div, Decl(react.d.ts, 2400, 45))

        hi hi hi!
    </Comp>;
>Comp : Symbol(Comp, Decl(file.tsx, 6, 1))

let k5 =
>k5 : Symbol(k5, Decl(file.tsx, 47, 3))

    <Comp a={10} b="hi" >
>Comp : Symbol(Comp, Decl(file.tsx, 6, 1))
>a : Symbol(a, Decl(file.tsx, 48, 9))
>b : Symbol(b, Decl(file.tsx, 48, 16))

        <div> My Div </div>
>div : Symbol(JSX.IntrinsicElements.div, Decl(react.d.ts, 2400, 45))
>div : Symbol(JSX.IntrinsicElements.div, Decl(react.d.ts, 2400, 45))

        <div> My Div </div>
>div : Symbol(JSX.IntrinsicElements.div, Decl(react.d.ts, 2400, 45))
>div : Symbol(JSX.IntrinsicElements.div, Decl(react.d.ts, 2400, 45))

    </Comp>;
>Comp : Symbol(Comp, Decl(file.tsx, 6, 1))

