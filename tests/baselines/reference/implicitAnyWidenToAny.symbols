=== tests/cases/compiler/implicitAnyWidenToAny.ts ===
// these should be errors
var x = null;                        // error at "x"
>x : Symbol(x, Decl(implicitAnyWidenToAny.ts, 1, 3))

var x1 = undefined;		             // error at "x1"
>x1 : Symbol(x1, Decl(implicitAnyWidenToAny.ts, 2, 3))
>undefined : Symbol(undefined)

var widenArray = [null, undefined];  // error at "widenArray"
>widenArray : Symbol(widenArray, Decl(implicitAnyWidenToAny.ts, 3, 3))
>undefined : Symbol(undefined)

var emptyArray = [];
>emptyArray : Symbol(emptyArray, Decl(implicitAnyWidenToAny.ts, 4, 3))

// these should not be error
class AnimalObj {
>AnimalObj : Symbol(AnimalObj, Decl(implicitAnyWidenToAny.ts, 4, 20))

      x:any;
>x : Symbol(AnimalObj.x, Decl(implicitAnyWidenToAny.ts, 7, 17))
}
var foo = 5;
>foo : Symbol(foo, Decl(implicitAnyWidenToAny.ts, 10, 3))

var bar = "Hello World";
>bar : Symbol(bar, Decl(implicitAnyWidenToAny.ts, 11, 3))

var foo1: any = null;
>foo1 : Symbol(foo1, Decl(implicitAnyWidenToAny.ts, 12, 3))

var foo2: any = undefined;
>foo2 : Symbol(foo2, Decl(implicitAnyWidenToAny.ts, 13, 3))
>undefined : Symbol(undefined)

var temp: number = 5;
>temp : Symbol(temp, Decl(implicitAnyWidenToAny.ts, 14, 3))

var c: AnimalObj = { x: null }; 
>c : Symbol(c, Decl(implicitAnyWidenToAny.ts, 15, 3))
>AnimalObj : Symbol(AnimalObj, Decl(implicitAnyWidenToAny.ts, 4, 20))
>x : Symbol(x, Decl(implicitAnyWidenToAny.ts, 15, 20))

var array1 = ["Bob",2];
>array1 : Symbol(array1, Decl(implicitAnyWidenToAny.ts, 16, 3))

var array2: any[] = [];
>array2 : Symbol(array2, Decl(implicitAnyWidenToAny.ts, 17, 3))

var array3: any[] = [null, undefined];
>array3 : Symbol(array3, Decl(implicitAnyWidenToAny.ts, 18, 3))
>undefined : Symbol(undefined)

var array4: number[] = [null, undefined];
>array4 : Symbol(array4, Decl(implicitAnyWidenToAny.ts, 19, 3))
>undefined : Symbol(undefined)

var array5 = <any[]>[null, undefined];
>array5 : Symbol(array5, Decl(implicitAnyWidenToAny.ts, 20, 3))
>undefined : Symbol(undefined)

var objLit: { new (n: number): any; };
>objLit : Symbol(objLit, Decl(implicitAnyWidenToAny.ts, 22, 3))
>n : Symbol(n, Decl(implicitAnyWidenToAny.ts, 22, 19))

function anyReturnFunc(): any { }
>anyReturnFunc : Symbol(anyReturnFunc, Decl(implicitAnyWidenToAny.ts, 22, 38))

var obj0 = new objLit(1);
>obj0 : Symbol(obj0, Decl(implicitAnyWidenToAny.ts, 24, 3))
>objLit : Symbol(objLit, Decl(implicitAnyWidenToAny.ts, 22, 3))

var obj1 = anyReturnFunc();
>obj1 : Symbol(obj1, Decl(implicitAnyWidenToAny.ts, 25, 3))
>anyReturnFunc : Symbol(anyReturnFunc, Decl(implicitAnyWidenToAny.ts, 22, 38))

