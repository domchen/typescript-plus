=== tests/cases/conformance/jsdoc/prefixPostfix.js ===
/**
 * @param {number![]} x - number[]
 * @param {!number[]} y - number[]
 * @param {(number[])!} z - number[]
 * @param {number?[]} a - (number | null)[]
 * @param {?number[]} b - number[] | null
 * @param {(number[])?} c - number[] | null
 * @param {...?number} e - (number | null)[]
 * @param {...number?} f - number[] | null
 * @param {...number!?} g - number[] | null
 * @param {...number?!} h - number[] | null
 * @param {...number[]} i - number[][]
 * @param {...number![]?} j - number[][] | null
 * @param {...number?[]!} k - (number[] | null)[]
 */
function f(x, y, z, a, b, c, e, f, g, h, i, j, k) {
>f : (x: number[], y: number[], z: number[], a: (number | null)[], b: number[] | null, c: number[] | null, e: number | null | undefined, f: number | null | undefined, g: number | null | undefined, h: number | null | undefined, i: number[] | undefined, j: number[] | null | undefined, k: (number | null)[] | undefined) => void
>x : number[]
>y : number[]
>z : number[]
>a : (number | null)[]
>b : number[] | null
>c : number[] | null
>e : number | null | undefined
>f : number | null | undefined
>g : number | null | undefined
>h : number | null | undefined
>i : number[] | undefined
>j : number[] | null | undefined
>k : (number | null)[] | undefined
}

