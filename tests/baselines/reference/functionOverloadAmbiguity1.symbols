=== tests/cases/compiler/functionOverloadAmbiguity1.ts ===
function callb(lam: (l: number) => void );
>callb : Symbol(callb, Decl(functionOverloadAmbiguity1.ts, 0, 0), Decl(functionOverloadAmbiguity1.ts, 0, 42), Decl(functionOverloadAmbiguity1.ts, 1, 42))
>lam : Symbol(lam, Decl(functionOverloadAmbiguity1.ts, 0, 15))
>l : Symbol(l, Decl(functionOverloadAmbiguity1.ts, 0, 21))

function callb(lam: (n: string) => void );
>callb : Symbol(callb, Decl(functionOverloadAmbiguity1.ts, 0, 0), Decl(functionOverloadAmbiguity1.ts, 0, 42), Decl(functionOverloadAmbiguity1.ts, 1, 42))
>lam : Symbol(lam, Decl(functionOverloadAmbiguity1.ts, 1, 15))
>n : Symbol(n, Decl(functionOverloadAmbiguity1.ts, 1, 21))

function callb(a) { }
>callb : Symbol(callb, Decl(functionOverloadAmbiguity1.ts, 0, 0), Decl(functionOverloadAmbiguity1.ts, 0, 42), Decl(functionOverloadAmbiguity1.ts, 1, 42))
>a : Symbol(a, Decl(functionOverloadAmbiguity1.ts, 2, 15))

callb((a) => { a.length; } ); // error, chose first overload
>callb : Symbol(callb, Decl(functionOverloadAmbiguity1.ts, 0, 0), Decl(functionOverloadAmbiguity1.ts, 0, 42), Decl(functionOverloadAmbiguity1.ts, 1, 42))
>a : Symbol(a, Decl(functionOverloadAmbiguity1.ts, 3, 7))
>a : Symbol(a, Decl(functionOverloadAmbiguity1.ts, 3, 7))

function callb2(lam: (n: string) => void );
>callb2 : Symbol(callb2, Decl(functionOverloadAmbiguity1.ts, 3, 29), Decl(functionOverloadAmbiguity1.ts, 5, 43), Decl(functionOverloadAmbiguity1.ts, 6, 43))
>lam : Symbol(lam, Decl(functionOverloadAmbiguity1.ts, 5, 16))
>n : Symbol(n, Decl(functionOverloadAmbiguity1.ts, 5, 22))

function callb2(lam: (l: number) => void );
>callb2 : Symbol(callb2, Decl(functionOverloadAmbiguity1.ts, 3, 29), Decl(functionOverloadAmbiguity1.ts, 5, 43), Decl(functionOverloadAmbiguity1.ts, 6, 43))
>lam : Symbol(lam, Decl(functionOverloadAmbiguity1.ts, 6, 16))
>l : Symbol(l, Decl(functionOverloadAmbiguity1.ts, 6, 22))

function callb2(a) { }
>callb2 : Symbol(callb2, Decl(functionOverloadAmbiguity1.ts, 3, 29), Decl(functionOverloadAmbiguity1.ts, 5, 43), Decl(functionOverloadAmbiguity1.ts, 6, 43))
>a : Symbol(a, Decl(functionOverloadAmbiguity1.ts, 7, 16))

callb2((a) => { a.length; } ); // ok, chose first overload
>callb2 : Symbol(callb2, Decl(functionOverloadAmbiguity1.ts, 3, 29), Decl(functionOverloadAmbiguity1.ts, 5, 43), Decl(functionOverloadAmbiguity1.ts, 6, 43))
>a : Symbol(a, Decl(functionOverloadAmbiguity1.ts, 8, 8))
>a.length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
>a : Symbol(a, Decl(functionOverloadAmbiguity1.ts, 8, 8))
>length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))

