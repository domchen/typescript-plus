=== tests/cases/conformance/types/typeParameters/typeArgumentLists/instantiateGenericClassWithWrongNumberOfTypeArguments.ts ===
// it is always an error to provide a type argument list whose count does not match the type parameter list
// both of these attempts to construct a type is an error

class C<T> {
>C : Symbol(C, Decl(instantiateGenericClassWithWrongNumberOfTypeArguments.ts, 0, 0))
>T : Symbol(T, Decl(instantiateGenericClassWithWrongNumberOfTypeArguments.ts, 3, 8))

    x: T;
>x : Symbol(C.x, Decl(instantiateGenericClassWithWrongNumberOfTypeArguments.ts, 3, 12))
>T : Symbol(T, Decl(instantiateGenericClassWithWrongNumberOfTypeArguments.ts, 3, 8))
}

var c = new C<number, number>();
>c : Symbol(c, Decl(instantiateGenericClassWithWrongNumberOfTypeArguments.ts, 7, 3))
>C : Symbol(C, Decl(instantiateGenericClassWithWrongNumberOfTypeArguments.ts, 0, 0))

class D<T, U> {
>D : Symbol(D, Decl(instantiateGenericClassWithWrongNumberOfTypeArguments.ts, 7, 32))
>T : Symbol(T, Decl(instantiateGenericClassWithWrongNumberOfTypeArguments.ts, 9, 8))
>U : Symbol(U, Decl(instantiateGenericClassWithWrongNumberOfTypeArguments.ts, 9, 10))

    x: T
>x : Symbol(D.x, Decl(instantiateGenericClassWithWrongNumberOfTypeArguments.ts, 9, 15))
>T : Symbol(T, Decl(instantiateGenericClassWithWrongNumberOfTypeArguments.ts, 9, 8))

    y: U
>y : Symbol(D.y, Decl(instantiateGenericClassWithWrongNumberOfTypeArguments.ts, 10, 8))
>U : Symbol(U, Decl(instantiateGenericClassWithWrongNumberOfTypeArguments.ts, 9, 10))
}

// BUG 794238
var d = new D<number>();
>d : Symbol(d, Decl(instantiateGenericClassWithWrongNumberOfTypeArguments.ts, 15, 3))
>D : Symbol(D, Decl(instantiateGenericClassWithWrongNumberOfTypeArguments.ts, 7, 32))

