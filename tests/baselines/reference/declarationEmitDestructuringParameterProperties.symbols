=== tests/cases/compiler/declarationEmitDestructuringParameterProperties.ts ===
class C1 {
>C1 : Symbol(C1, Decl(declarationEmitDestructuringParameterProperties.ts, 0, 0))

    constructor(public [x, y, z]: string[]) {
>x : Symbol(x, Decl(declarationEmitDestructuringParameterProperties.ts, 1, 24))
>y : Symbol(y, Decl(declarationEmitDestructuringParameterProperties.ts, 1, 26))
>z : Symbol(z, Decl(declarationEmitDestructuringParameterProperties.ts, 1, 29))
    }
}

type TupleType1 =[string, number, boolean];
>TupleType1 : Symbol(TupleType1, Decl(declarationEmitDestructuringParameterProperties.ts, 3, 1))

class C2 {
>C2 : Symbol(C2, Decl(declarationEmitDestructuringParameterProperties.ts, 5, 43))

    constructor(public [x, y, z]: TupleType1) {
>x : Symbol(x, Decl(declarationEmitDestructuringParameterProperties.ts, 7, 24))
>y : Symbol(y, Decl(declarationEmitDestructuringParameterProperties.ts, 7, 26))
>z : Symbol(z, Decl(declarationEmitDestructuringParameterProperties.ts, 7, 29))
>TupleType1 : Symbol(TupleType1, Decl(declarationEmitDestructuringParameterProperties.ts, 3, 1))
    }
}

type ObjType1 = { x: number; y: string; z: boolean }
>ObjType1 : Symbol(ObjType1, Decl(declarationEmitDestructuringParameterProperties.ts, 9, 1))
>x : Symbol(x, Decl(declarationEmitDestructuringParameterProperties.ts, 11, 17))
>y : Symbol(y, Decl(declarationEmitDestructuringParameterProperties.ts, 11, 28))
>z : Symbol(z, Decl(declarationEmitDestructuringParameterProperties.ts, 11, 39))

class C3 {
>C3 : Symbol(C3, Decl(declarationEmitDestructuringParameterProperties.ts, 11, 52))

    constructor(public { x, y, z }: ObjType1) {
>x : Symbol(x, Decl(declarationEmitDestructuringParameterProperties.ts, 13, 24))
>y : Symbol(y, Decl(declarationEmitDestructuringParameterProperties.ts, 13, 27))
>z : Symbol(z, Decl(declarationEmitDestructuringParameterProperties.ts, 13, 30))
>ObjType1 : Symbol(ObjType1, Decl(declarationEmitDestructuringParameterProperties.ts, 9, 1))
    }
}
