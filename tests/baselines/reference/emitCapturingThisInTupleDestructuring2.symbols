=== tests/cases/compiler/emitCapturingThisInTupleDestructuring2.ts ===
var array1: [number, number] = [1, 2];
>array1 : Symbol(array1, Decl(emitCapturingThisInTupleDestructuring2.ts, 0, 3))

class B {
>B : Symbol(B, Decl(emitCapturingThisInTupleDestructuring2.ts, 0, 38))

    test: number;
>test : Symbol(B.test, Decl(emitCapturingThisInTupleDestructuring2.ts, 2, 9))

    test1: any;
>test1 : Symbol(B.test1, Decl(emitCapturingThisInTupleDestructuring2.ts, 3, 17))

    test2: any;
>test2 : Symbol(B.test2, Decl(emitCapturingThisInTupleDestructuring2.ts, 4, 15))

    method() {
>method : Symbol(B.method, Decl(emitCapturingThisInTupleDestructuring2.ts, 5, 15))

        () => [this.test, this.test1, this.test2] = array1; // even though there is a compiler error, we should still emit lexical capture for "this" 
>this.test : Symbol(B.test, Decl(emitCapturingThisInTupleDestructuring2.ts, 2, 9))
>this : Symbol(B, Decl(emitCapturingThisInTupleDestructuring2.ts, 0, 38))
>test : Symbol(B.test, Decl(emitCapturingThisInTupleDestructuring2.ts, 2, 9))
>this.test1 : Symbol(B.test1, Decl(emitCapturingThisInTupleDestructuring2.ts, 3, 17))
>this : Symbol(B, Decl(emitCapturingThisInTupleDestructuring2.ts, 0, 38))
>test1 : Symbol(B.test1, Decl(emitCapturingThisInTupleDestructuring2.ts, 3, 17))
>this.test2 : Symbol(B.test2, Decl(emitCapturingThisInTupleDestructuring2.ts, 4, 15))
>this : Symbol(B, Decl(emitCapturingThisInTupleDestructuring2.ts, 0, 38))
>test2 : Symbol(B.test2, Decl(emitCapturingThisInTupleDestructuring2.ts, 4, 15))
>array1 : Symbol(array1, Decl(emitCapturingThisInTupleDestructuring2.ts, 0, 3))
    }
}
