=== tests/cases/conformance/types/forAwait/types.forAwait.esnext.3.ts ===
async function f1() {
>f1 : Symbol(f1, Decl(types.forAwait.esnext.3.ts, 0, 0))

    let y: number;
>y : Symbol(y, Decl(types.forAwait.esnext.3.ts, 1, 7))

    for await (const x of {}) {
>x : Symbol(x, Decl(types.forAwait.esnext.3.ts, 2, 20))
    }
    for await (y of {}) {
>y : Symbol(y, Decl(types.forAwait.esnext.3.ts, 1, 7))
    }
}
async function* f2() {
>f2 : Symbol(f2, Decl(types.forAwait.esnext.3.ts, 6, 1))

    let y: number;
>y : Symbol(y, Decl(types.forAwait.esnext.3.ts, 8, 7))

    for await (const x of {}) {
>x : Symbol(x, Decl(types.forAwait.esnext.3.ts, 9, 20))
    }
    for await (y of {}) {
>y : Symbol(y, Decl(types.forAwait.esnext.3.ts, 8, 7))
    }
}
