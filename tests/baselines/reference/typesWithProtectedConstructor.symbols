=== tests/cases/conformance/types/members/typesWithProtectedConstructor.ts ===
class C {
>C : Symbol(C, Decl(typesWithProtectedConstructor.ts, 0, 0))

    protected constructor() { }
}

var c = new C(); // error C is protected
>c : Symbol(c, Decl(typesWithProtectedConstructor.ts, 4, 3))
>C : Symbol(C, Decl(typesWithProtectedConstructor.ts, 0, 0))

var r: () => void = c.constructor;
>r : Symbol(r, Decl(typesWithProtectedConstructor.ts, 5, 3))
>c : Symbol(c, Decl(typesWithProtectedConstructor.ts, 4, 3))

class C2 {
>C2 : Symbol(C2, Decl(typesWithProtectedConstructor.ts, 5, 34))

    protected constructor(x: number);
>x : Symbol(x, Decl(typesWithProtectedConstructor.ts, 8, 26))

    protected constructor(x: any) { }
>x : Symbol(x, Decl(typesWithProtectedConstructor.ts, 9, 26))
}

var c2 = new C2(); // error C2 is protected
>c2 : Symbol(c2, Decl(typesWithProtectedConstructor.ts, 12, 3))
>C2 : Symbol(C2, Decl(typesWithProtectedConstructor.ts, 5, 34))

var r2: (x: number) => void = c2.constructor;
>r2 : Symbol(r2, Decl(typesWithProtectedConstructor.ts, 13, 3))
>x : Symbol(x, Decl(typesWithProtectedConstructor.ts, 13, 9))
>c2 : Symbol(c2, Decl(typesWithProtectedConstructor.ts, 12, 3))

