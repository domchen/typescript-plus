=== tests/cases/conformance/dynamicImport/0.ts ===
export function foo() { return "foo"; }
>foo : Symbol(foo, Decl(0.ts, 0, 0))

=== tests/cases/conformance/dynamicImport/1.ts ===
import("./0");
>"./0" : Symbol("tests/cases/conformance/dynamicImport/0", Decl(0.ts, 0, 0))

var p1 = import("./0");
>p1 : Symbol(p1, Decl(1.ts, 1, 3))
>"./0" : Symbol("tests/cases/conformance/dynamicImport/0", Decl(0.ts, 0, 0))

p1.then(zero => {
>p1.then : Symbol(Promise.then, Decl(lib.es5.d.ts, --, --))
>p1 : Symbol(p1, Decl(1.ts, 1, 3))
>then : Symbol(Promise.then, Decl(lib.es5.d.ts, --, --))
>zero : Symbol(zero, Decl(1.ts, 2, 8))

    return zero.foo();
>zero.foo : Symbol(foo, Decl(0.ts, 0, 0))
>zero : Symbol(zero, Decl(1.ts, 2, 8))
>foo : Symbol(foo, Decl(0.ts, 0, 0))

});

export var p2 = import("./0");
>p2 : Symbol(p2, Decl(1.ts, 6, 10))
>"./0" : Symbol("tests/cases/conformance/dynamicImport/0", Decl(0.ts, 0, 0))

function foo() {
>foo : Symbol(foo, Decl(1.ts, 6, 30))

    const p2 = import("./0");
>p2 : Symbol(p2, Decl(1.ts, 9, 9))
>"./0" : Symbol("tests/cases/conformance/dynamicImport/0", Decl(0.ts, 0, 0))
}

class C {
>C : Symbol(C, Decl(1.ts, 10, 1))

    method() {
>method : Symbol(C.method, Decl(1.ts, 12, 9))

        const loadAsync = import ("./0");
>loadAsync : Symbol(loadAsync, Decl(1.ts, 14, 13))
>"./0" : Symbol("tests/cases/conformance/dynamicImport/0", Decl(0.ts, 0, 0))
    }
}

export class D {
>D : Symbol(D, Decl(1.ts, 16, 1))

    method() {
>method : Symbol(D.method, Decl(1.ts, 18, 16))

        const loadAsync = import ("./0");
>loadAsync : Symbol(loadAsync, Decl(1.ts, 20, 13))
>"./0" : Symbol("tests/cases/conformance/dynamicImport/0", Decl(0.ts, 0, 0))
    }
}
