=== tests/cases/compiler/illegalSuperCallsInConstructor.ts ===
class Base {
>Base : Symbol(Base, Decl(illegalSuperCallsInConstructor.ts, 0, 0))

    x: string;
>x : Symbol(Base.x, Decl(illegalSuperCallsInConstructor.ts, 0, 12))
}
 
class Derived extends Base {
>Derived : Symbol(Derived, Decl(illegalSuperCallsInConstructor.ts, 2, 1))
>Base : Symbol(Base, Decl(illegalSuperCallsInConstructor.ts, 0, 0))

    constructor() {
        var r2 = () => super();
>r2 : Symbol(r2, Decl(illegalSuperCallsInConstructor.ts, 6, 11))

        var r3 = () => { super(); }
>r3 : Symbol(r3, Decl(illegalSuperCallsInConstructor.ts, 7, 11))

        var r4 = function () { super(); }
>r4 : Symbol(r4, Decl(illegalSuperCallsInConstructor.ts, 8, 11))

        var r5 = {
>r5 : Symbol(r5, Decl(illegalSuperCallsInConstructor.ts, 9, 11))

            get foo() {
>foo : Symbol(foo, Decl(illegalSuperCallsInConstructor.ts, 9, 18), Decl(illegalSuperCallsInConstructor.ts, 13, 14))

                super();
                return 1;
            },
            set foo(v: number) {
>foo : Symbol(foo, Decl(illegalSuperCallsInConstructor.ts, 9, 18), Decl(illegalSuperCallsInConstructor.ts, 13, 14))
>v : Symbol(v, Decl(illegalSuperCallsInConstructor.ts, 14, 20))

                super();
            }
        }
    }
}
