=== tests/cases/conformance/types/typeRelationships/comparable/switchCaseWithUnionTypes01.ts ===
var strOrNum: string | number;
>strOrNum : Symbol(strOrNum, Decl(switchCaseWithUnionTypes01.ts, 0, 3))

var numOrBool: number | boolean;
>numOrBool : Symbol(numOrBool, Decl(switchCaseWithUnionTypes01.ts, 1, 3))

var str: string;
>str : Symbol(str, Decl(switchCaseWithUnionTypes01.ts, 2, 3))

var num: number;
>num : Symbol(num, Decl(switchCaseWithUnionTypes01.ts, 3, 3))

var bool: boolean;
>bool : Symbol(bool, Decl(switchCaseWithUnionTypes01.ts, 4, 3))

switch (strOrNum) {
>strOrNum : Symbol(strOrNum, Decl(switchCaseWithUnionTypes01.ts, 0, 3))

    // Identical
    case strOrNum:
>strOrNum : Symbol(strOrNum, Decl(switchCaseWithUnionTypes01.ts, 0, 3))

        break;

    // Constituents
    case str:
>str : Symbol(str, Decl(switchCaseWithUnionTypes01.ts, 2, 3))

    case num:
>num : Symbol(num, Decl(switchCaseWithUnionTypes01.ts, 3, 3))

        break;

    // Overlap in constituents
    case numOrBool:
>numOrBool : Symbol(numOrBool, Decl(switchCaseWithUnionTypes01.ts, 1, 3))

        break;

    // No relation
    case bool:
>bool : Symbol(bool, Decl(switchCaseWithUnionTypes01.ts, 4, 3))

        break;
}
