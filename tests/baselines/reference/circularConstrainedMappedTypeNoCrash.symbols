=== tests/cases/compiler/circularConstrainedMappedTypeNoCrash.ts ===
type Loop<T, U extends Loop<T, U>> = {
>Loop : Symbol(Loop, Decl(circularConstrainedMappedTypeNoCrash.ts, 0, 0))
>T : Symbol(T, Decl(circularConstrainedMappedTypeNoCrash.ts, 0, 10))
>U : Symbol(U, Decl(circularConstrainedMappedTypeNoCrash.ts, 0, 12))
>Loop : Symbol(Loop, Decl(circularConstrainedMappedTypeNoCrash.ts, 0, 0))
>T : Symbol(T, Decl(circularConstrainedMappedTypeNoCrash.ts, 0, 10))
>U : Symbol(U, Decl(circularConstrainedMappedTypeNoCrash.ts, 0, 12))

    [P in keyof T]: U[P] extends boolean ? number : string;
>P : Symbol(P, Decl(circularConstrainedMappedTypeNoCrash.ts, 1, 5))
>T : Symbol(T, Decl(circularConstrainedMappedTypeNoCrash.ts, 0, 10))
>U : Symbol(U, Decl(circularConstrainedMappedTypeNoCrash.ts, 0, 12))
>P : Symbol(P, Decl(circularConstrainedMappedTypeNoCrash.ts, 1, 5))

};
