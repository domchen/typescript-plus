=== tests/cases/compiler/typeArgInference2.ts ===
interface Item {
>Item : Symbol(Item, Decl(typeArgInference2.ts, 0, 0))

    name: string;
>name : Symbol(Item.name, Decl(typeArgInference2.ts, 0, 16))
}

declare function foo<T extends Item>(x?: T, y?: T): T;
>foo : Symbol(foo, Decl(typeArgInference2.ts, 2, 1))
>T : Symbol(T, Decl(typeArgInference2.ts, 4, 21))
>Item : Symbol(Item, Decl(typeArgInference2.ts, 0, 0))
>x : Symbol(x, Decl(typeArgInference2.ts, 4, 37))
>T : Symbol(T, Decl(typeArgInference2.ts, 4, 21))
>y : Symbol(y, Decl(typeArgInference2.ts, 4, 43))
>T : Symbol(T, Decl(typeArgInference2.ts, 4, 21))
>T : Symbol(T, Decl(typeArgInference2.ts, 4, 21))

var z1 = foo(null);                   // any
>z1 : Symbol(z1, Decl(typeArgInference2.ts, 6, 3))
>foo : Symbol(foo, Decl(typeArgInference2.ts, 2, 1))

var z2 = foo();                       // Item
>z2 : Symbol(z2, Decl(typeArgInference2.ts, 7, 3))
>foo : Symbol(foo, Decl(typeArgInference2.ts, 2, 1))

var z3 = foo({ name: null });         // { name: any }
>z3 : Symbol(z3, Decl(typeArgInference2.ts, 8, 3))
>foo : Symbol(foo, Decl(typeArgInference2.ts, 2, 1))
>name : Symbol(name, Decl(typeArgInference2.ts, 8, 14))

var z4 = foo({ name: "abc" });        // { name: string }
>z4 : Symbol(z4, Decl(typeArgInference2.ts, 9, 3))
>foo : Symbol(foo, Decl(typeArgInference2.ts, 2, 1))
>name : Symbol(name, Decl(typeArgInference2.ts, 9, 14))

var z5 = foo({ name: "abc", a: 5 });  // { name: string; a: number }
>z5 : Symbol(z5, Decl(typeArgInference2.ts, 10, 3))
>foo : Symbol(foo, Decl(typeArgInference2.ts, 2, 1))
>name : Symbol(name, Decl(typeArgInference2.ts, 10, 14))
>a : Symbol(a, Decl(typeArgInference2.ts, 10, 27))

var z6 = foo({ name: "abc", a: 5 }, { name: "def", b: 5 });  // error
>z6 : Symbol(z6, Decl(typeArgInference2.ts, 11, 3))
>foo : Symbol(foo, Decl(typeArgInference2.ts, 2, 1))
>name : Symbol(name, Decl(typeArgInference2.ts, 11, 14))
>a : Symbol(a, Decl(typeArgInference2.ts, 11, 27))
>name : Symbol(name, Decl(typeArgInference2.ts, 11, 37))
>b : Symbol(b, Decl(typeArgInference2.ts, 11, 50))

