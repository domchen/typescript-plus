// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`comments.js 1`] = `
var x = 100

@Hello({
  a: 'a', // Comment is in the wrong place
  // test
  b: '2'
})
class X {

}


@NgModule({
  // Imports.
  imports: [
    // Angular modules.
    BrowserModule,

    // App modules.
    CoreModule,
    SharedModule,
  ],
})
export class AppModule {}

// A
@Foo()
// B
@Bar()
// C
export class Bar{}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
var x = 100;

@Hello({
  a: "a", // Comment is in the wrong place
  // test
  b: "2"
})
class X {}

@NgModule({
  // Imports.
  imports: [
    // Angular modules.
    BrowserModule,

    // App modules.
    CoreModule,
    SharedModule
  ]
})
export class AppModule {}

// A
@Foo()
// B
@Bar()
// C
export class Bar {}

`;

exports[`methods.js 1`] = `

class Yo {
  @foo("hello")
  async plop() {}

  @anotherDecoratorWithALongName("and a very long string as a first argument")
  async plip() {}
}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
class Yo {
  @foo("hello")
  async plop() {}

  @anotherDecoratorWithALongName("and a very long string as a first argument")
  async plip() {}
}

`;

exports[`mobx.js 1`] = `
import {observable} from "mobx";

@observer class OrderLine {
  @observable price:number = 0;
  @observable amount:number = 1;

  constructor(price) {
    this.price = price;
  }

  @computed get total() {
    return this.price * this.amount;
  }

  @action.bound setPrice(price) {
    this.price = price;
  }
}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
import { observable } from "mobx";

@observer
class OrderLine {
  @observable price: number = 0;
  @observable amount: number = 1;

  constructor(price) {
    this.price = price;
  }

  @computed
  get total() {
    return this.price * this.amount;
  }

  @action.bound
  setPrice(price) {
    this.price = price;
  }
}

`;

exports[`multiple.js 1`] = `
const dog = {
  @readonly
  @nonenumerable
  @doubledValue
  legs: 4
};
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
const dog = {
  @readonly
  @nonenumerable
  @doubledValue
  legs: 4
};

`;

exports[`redux.js 1`] = `
@connect(mapStateToProps, mapDispatchToProps)
export class MyApp extends React.Component {}

@connect(state => ({ todos: state.todos }))
export class Home extends React.Component {}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@connect(mapStateToProps, mapDispatchToProps)
export class MyApp extends React.Component {}

@connect(state => ({ todos: state.todos }))
export class Home extends React.Component {}

`;
