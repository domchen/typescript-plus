=== tests/cases/conformance/es7/exponentiationOperator/exponentiationOperatorWithTemplateStringInvalid.ts ===
var a = 1 ** `${ 3 }`;
>a : Symbol(a, Decl(exponentiationOperatorWithTemplateStringInvalid.ts, 0, 3))

var b = 1 ** `2${ 3 }`;
>b : Symbol(b, Decl(exponentiationOperatorWithTemplateStringInvalid.ts, 1, 3))

var c = 1 ** `${ 3 }4`;
>c : Symbol(c, Decl(exponentiationOperatorWithTemplateStringInvalid.ts, 2, 3))

var d = 1 ** `2${ 3 }4`;
>d : Symbol(d, Decl(exponentiationOperatorWithTemplateStringInvalid.ts, 3, 3))

var e = `${ 3 }` ** 5;
>e : Symbol(e, Decl(exponentiationOperatorWithTemplateStringInvalid.ts, 4, 3))

var f = `2${ 3 }` ** 5;
>f : Symbol(f, Decl(exponentiationOperatorWithTemplateStringInvalid.ts, 5, 3))

var g = `${ 3 }4` ** 5;
>g : Symbol(g, Decl(exponentiationOperatorWithTemplateStringInvalid.ts, 6, 3))

var h = `2${ 3 }4` ** 5;
>h : Symbol(h, Decl(exponentiationOperatorWithTemplateStringInvalid.ts, 7, 3))

var k = 10;
>k : Symbol(k, Decl(exponentiationOperatorWithTemplateStringInvalid.ts, 9, 3))

k **= `${ 3 }`;
>k : Symbol(k, Decl(exponentiationOperatorWithTemplateStringInvalid.ts, 9, 3))

k **= `2${ 3 }`;
>k : Symbol(k, Decl(exponentiationOperatorWithTemplateStringInvalid.ts, 9, 3))

k **= `2${ 3 }4`;
>k : Symbol(k, Decl(exponentiationOperatorWithTemplateStringInvalid.ts, 9, 3))

k **= `2${ 3 }4`;
>k : Symbol(k, Decl(exponentiationOperatorWithTemplateStringInvalid.ts, 9, 3))


 
