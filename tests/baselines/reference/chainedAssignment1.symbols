=== tests/cases/compiler/chainedAssignment1.ts ===
class X {
>X : Symbol(X, Decl(chainedAssignment1.ts, 0, 0))

    constructor(public z) { }
>z : Symbol(X.z, Decl(chainedAssignment1.ts, 1, 16))

    a: number;
>a : Symbol(X.a, Decl(chainedAssignment1.ts, 1, 29))
}

class Y {
>Y : Symbol(Y, Decl(chainedAssignment1.ts, 3, 1))

    constructor(public z) {
>z : Symbol(Y.z, Decl(chainedAssignment1.ts, 6, 16))
    }
    a: number;
>a : Symbol(Y.a, Decl(chainedAssignment1.ts, 7, 5))

    b: string;
>b : Symbol(Y.b, Decl(chainedAssignment1.ts, 8, 14))
}

class Z {
>Z : Symbol(Z, Decl(chainedAssignment1.ts, 10, 1))

    z: any;
>z : Symbol(Z.z, Decl(chainedAssignment1.ts, 12, 9))

    c: string;
>c : Symbol(Z.c, Decl(chainedAssignment1.ts, 13, 11))
}

var c1 = new X(3);
>c1 : Symbol(c1, Decl(chainedAssignment1.ts, 17, 3))
>X : Symbol(X, Decl(chainedAssignment1.ts, 0, 0))

var c2 = new Y(5);
>c2 : Symbol(c2, Decl(chainedAssignment1.ts, 18, 3))
>Y : Symbol(Y, Decl(chainedAssignment1.ts, 3, 1))

var c3 = new Z();
>c3 : Symbol(c3, Decl(chainedAssignment1.ts, 19, 3))
>Z : Symbol(Z, Decl(chainedAssignment1.ts, 10, 1))

c1 = c2 = c3; // a bug made this not report the same error as below
>c1 : Symbol(c1, Decl(chainedAssignment1.ts, 17, 3))
>c2 : Symbol(c2, Decl(chainedAssignment1.ts, 18, 3))
>c3 : Symbol(c3, Decl(chainedAssignment1.ts, 19, 3))

c2 = c3; // Error TS111: Cannot convert Z to Y
>c2 : Symbol(c2, Decl(chainedAssignment1.ts, 18, 3))
>c3 : Symbol(c3, Decl(chainedAssignment1.ts, 19, 3))

