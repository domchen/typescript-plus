=== tests/cases/compiler/constructorOverloads4.ts ===
declare module M {    
>M : typeof M

    export class Function {
>Function : M.Function

        constructor(...args: string[]);
>args : string[]
    }
    export function Function(...args: any[]): any;
>Function : { (...args: any[]): any; (...args: string[]): Function; }
>args : any[]

    export function Function(...args: string[]): Function;
>Function : { (...args: any[]): any; (...args: string[]): Function; }
>args : string[]
}


(new M.Function("return 5"))();
>(new M.Function("return 5"))() : any
>(new M.Function("return 5")) : any
>new M.Function("return 5") : any
>M.Function : { (...args: any[]): any; (...args: string[]): Function; }
>M : typeof M
>Function : { (...args: any[]): any; (...args: string[]): Function; }
>"return 5" : "return 5"

M.Function("yo");
>M.Function("yo") : any
>M.Function : { (...args: any[]): any; (...args: string[]): Function; }
>M : typeof M
>Function : { (...args: any[]): any; (...args: string[]): Function; }
>"yo" : "yo"

