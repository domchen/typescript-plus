=== tests/cases/conformance/statements/breakStatements/invalidWhileBreakStatements.ts ===
// All errors

// naked break not allowed
break;

// non-existent label
ONE:
while (true) break TWO;

// break from inside function
TWO:
while (true){
    var x = () => {
>x : Symbol(x, Decl(invalidWhileBreakStatements.ts, 12, 7))

        break TWO;
    }
}

THREE:
while (true) {
    var fn = function () {
>fn : Symbol(fn, Decl(invalidWhileBreakStatements.ts, 19, 7))

        break THREE;
    }
}

// break forward
while (true) {
    break FIVE;
    FIVE:
    while (true) { }
}

// label on non-loop statement
NINE:
var y = 12;
>y : Symbol(y, Decl(invalidWhileBreakStatements.ts, 33, 3))

while (true) {
    break NINE;
}
