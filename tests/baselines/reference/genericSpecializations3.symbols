=== tests/cases/compiler/genericSpecializations3.ts ===
interface IFoo<T> {
>IFoo : Symbol(IFoo, Decl(genericSpecializations3.ts, 0, 0))
>T : Symbol(T, Decl(genericSpecializations3.ts, 0, 15))

    foo(x: T): T;
>foo : Symbol(IFoo.foo, Decl(genericSpecializations3.ts, 0, 19))
>x : Symbol(x, Decl(genericSpecializations3.ts, 1, 8))
>T : Symbol(T, Decl(genericSpecializations3.ts, 0, 15))
>T : Symbol(T, Decl(genericSpecializations3.ts, 0, 15))
}

var iFoo: IFoo<number>;
>iFoo : Symbol(iFoo, Decl(genericSpecializations3.ts, 4, 3))
>IFoo : Symbol(IFoo, Decl(genericSpecializations3.ts, 0, 0))

iFoo.foo(1);
>iFoo.foo : Symbol(IFoo.foo, Decl(genericSpecializations3.ts, 0, 19))
>iFoo : Symbol(iFoo, Decl(genericSpecializations3.ts, 4, 3))
>foo : Symbol(IFoo.foo, Decl(genericSpecializations3.ts, 0, 19))

class IntFooBad implements IFoo<number> { // error
>IntFooBad : Symbol(IntFooBad, Decl(genericSpecializations3.ts, 5, 12))
>IFoo : Symbol(IFoo, Decl(genericSpecializations3.ts, 0, 0))

    foo(x: string): string { return null; }
>foo : Symbol(IntFooBad.foo, Decl(genericSpecializations3.ts, 7, 41))
>x : Symbol(x, Decl(genericSpecializations3.ts, 8, 8))
}

var intFooBad: IntFooBad;
>intFooBad : Symbol(intFooBad, Decl(genericSpecializations3.ts, 11, 3))
>IntFooBad : Symbol(IntFooBad, Decl(genericSpecializations3.ts, 5, 12))

class IntFoo implements IFoo<number> {
>IntFoo : Symbol(IntFoo, Decl(genericSpecializations3.ts, 11, 25))
>IFoo : Symbol(IFoo, Decl(genericSpecializations3.ts, 0, 0))

    foo(x: number): number { return null; }
>foo : Symbol(IntFoo.foo, Decl(genericSpecializations3.ts, 13, 38))
>x : Symbol(x, Decl(genericSpecializations3.ts, 14, 8))
}

var intFoo: IntFoo;
>intFoo : Symbol(intFoo, Decl(genericSpecializations3.ts, 17, 3))
>IntFoo : Symbol(IntFoo, Decl(genericSpecializations3.ts, 11, 25))

class StringFoo2 implements IFoo<string> {
>StringFoo2 : Symbol(StringFoo2, Decl(genericSpecializations3.ts, 17, 19))
>IFoo : Symbol(IFoo, Decl(genericSpecializations3.ts, 0, 0))

    foo(x: string): string { return null; }
>foo : Symbol(StringFoo2.foo, Decl(genericSpecializations3.ts, 19, 42))
>x : Symbol(x, Decl(genericSpecializations3.ts, 20, 8))
}

var stringFoo2: StringFoo2;
>stringFoo2 : Symbol(stringFoo2, Decl(genericSpecializations3.ts, 23, 3))
>StringFoo2 : Symbol(StringFoo2, Decl(genericSpecializations3.ts, 17, 19))

stringFoo2.foo("hm");
>stringFoo2.foo : Symbol(StringFoo2.foo, Decl(genericSpecializations3.ts, 19, 42))
>stringFoo2 : Symbol(stringFoo2, Decl(genericSpecializations3.ts, 23, 3))
>foo : Symbol(StringFoo2.foo, Decl(genericSpecializations3.ts, 19, 42))


intFoo = stringFoo2; // error
>intFoo : Symbol(intFoo, Decl(genericSpecializations3.ts, 17, 3))
>stringFoo2 : Symbol(stringFoo2, Decl(genericSpecializations3.ts, 23, 3))

stringFoo2 = intFoo; // error
>stringFoo2 : Symbol(stringFoo2, Decl(genericSpecializations3.ts, 23, 3))
>intFoo : Symbol(intFoo, Decl(genericSpecializations3.ts, 17, 3))


class StringFoo3 implements IFoo<string> { // error
>StringFoo3 : Symbol(StringFoo3, Decl(genericSpecializations3.ts, 28, 20))
>IFoo : Symbol(IFoo, Decl(genericSpecializations3.ts, 0, 0))

    foo<T>(x: T): T { return null; }
>foo : Symbol(StringFoo3.foo, Decl(genericSpecializations3.ts, 31, 42))
>T : Symbol(T, Decl(genericSpecializations3.ts, 32, 8))
>x : Symbol(x, Decl(genericSpecializations3.ts, 32, 11))
>T : Symbol(T, Decl(genericSpecializations3.ts, 32, 8))
>T : Symbol(T, Decl(genericSpecializations3.ts, 32, 8))
}
var stringFoo3: StringFoo3;
>stringFoo3 : Symbol(stringFoo3, Decl(genericSpecializations3.ts, 34, 3))
>StringFoo3 : Symbol(StringFoo3, Decl(genericSpecializations3.ts, 28, 20))

