=== tests/cases/compiler/thingB.ts ===
export interface ThingB { }
>ThingB : Symbol(ThingB, Decl(thingB.ts, 0, 0))

=== tests/cases/compiler/things.ts ===
export * from "./thingB";
No type information for this code.=== tests/cases/compiler/index.ts ===
import * as things from "./things";
>things : Symbol(things, Decl(index.ts, 0, 6))

export const thing2 = (param: things.ThingB) => null;
>thing2 : Symbol(thing2, Decl(index.ts, 1, 12))
>param : Symbol(param, Decl(index.ts, 1, 23))
>things : Symbol(things, Decl(index.ts, 0, 6))
>ThingB : Symbol(things.ThingB, Decl(thingB.ts, 0, 0))

