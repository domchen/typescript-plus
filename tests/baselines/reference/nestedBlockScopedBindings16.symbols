=== tests/cases/compiler/nestedBlockScopedBindings16.ts ===
var x;
>x : Symbol(x, Decl(nestedBlockScopedBindings16.ts, 0, 3))

for (; false;) {
    {
        let x;
>x : Symbol(x, Decl(nestedBlockScopedBindings16.ts, 3, 11))

        () => x;
>x : Symbol(x, Decl(nestedBlockScopedBindings16.ts, 3, 11))
    }
}

var y;
>y : Symbol(y, Decl(nestedBlockScopedBindings16.ts, 8, 3))

for (; false;) {
    {
        let y;
>y : Symbol(y, Decl(nestedBlockScopedBindings16.ts, 11, 11))

        y = 1;
>y : Symbol(y, Decl(nestedBlockScopedBindings16.ts, 11, 11))
    }
}

var z0;
>z0 : Symbol(z0, Decl(nestedBlockScopedBindings16.ts, 16, 3))

for (; false;) {
    switch (1){
        case 1:
            let z0;
>z0 : Symbol(z0, Decl(nestedBlockScopedBindings16.ts, 20, 15))

            () => z0;
>z0 : Symbol(z0, Decl(nestedBlockScopedBindings16.ts, 20, 15))

            break;
    }
}

var z;
>z : Symbol(z, Decl(nestedBlockScopedBindings16.ts, 26, 3))

for (; false;) {
    switch (1){
        case 1:
            let z;
>z : Symbol(z, Decl(nestedBlockScopedBindings16.ts, 30, 15))

            z = 1;
>z : Symbol(z, Decl(nestedBlockScopedBindings16.ts, 30, 15))

            break;
    }
}
