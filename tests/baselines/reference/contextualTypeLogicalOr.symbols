=== tests/cases/compiler/contextualTypeLogicalOr.ts ===
// Repro from #18005

let x = 123;
>x : Symbol(x, Decl(contextualTypeLogicalOr.ts, 2, 3))

var a =
>a : Symbol(a, Decl(contextualTypeLogicalOr.ts, 3, 3))

    x && [1, 2, 3, 4] ||
>x : Symbol(x, Decl(contextualTypeLogicalOr.ts, 2, 3))

    x && [1, 2, 3, 4] ||
>x : Symbol(x, Decl(contextualTypeLogicalOr.ts, 2, 3))

    x && [1, 2, 3, 4] ||
>x : Symbol(x, Decl(contextualTypeLogicalOr.ts, 2, 3))

    x && [1, 2, 3, 4] ||
>x : Symbol(x, Decl(contextualTypeLogicalOr.ts, 2, 3))

    x && [1, 2, 3, 4] ||
>x : Symbol(x, Decl(contextualTypeLogicalOr.ts, 2, 3))

    x && [1, 2, 3, 4] ||
>x : Symbol(x, Decl(contextualTypeLogicalOr.ts, 2, 3))

    x && [1, 2, 3, 4] ||
>x : Symbol(x, Decl(contextualTypeLogicalOr.ts, 2, 3))

    x && [1, 2, 3, 4] ||
>x : Symbol(x, Decl(contextualTypeLogicalOr.ts, 2, 3))

    x && [1, 2, 3, 4] ||
>x : Symbol(x, Decl(contextualTypeLogicalOr.ts, 2, 3))

    x && [1, 2, 3, 4] ||
>x : Symbol(x, Decl(contextualTypeLogicalOr.ts, 2, 3))

    x && [1, 2, 3, 4] ||
>x : Symbol(x, Decl(contextualTypeLogicalOr.ts, 2, 3))

    x && [1, 2, 3, 4] ||
>x : Symbol(x, Decl(contextualTypeLogicalOr.ts, 2, 3))

    x && [1, 2, 3, 4];
>x : Symbol(x, Decl(contextualTypeLogicalOr.ts, 2, 3))

