=== tests/cases/conformance/interfaces/interfaceDeclarations/interfaceWithStringIndexerHidingBaseTypeIndexer3.ts ===
interface Base {
>Base : Symbol(Base, Decl(interfaceWithStringIndexerHidingBaseTypeIndexer3.ts, 0, 0))

    [x: number]: { a: number }
>x : Symbol(x, Decl(interfaceWithStringIndexerHidingBaseTypeIndexer3.ts, 1, 5))
>a : Symbol(a, Decl(interfaceWithStringIndexerHidingBaseTypeIndexer3.ts, 1, 18))

    1: {
>1 : Symbol(Base[1], Decl(interfaceWithStringIndexerHidingBaseTypeIndexer3.ts, 1, 30))

        a: number; b: number;
>a : Symbol(a, Decl(interfaceWithStringIndexerHidingBaseTypeIndexer3.ts, 2, 8))
>b : Symbol(b, Decl(interfaceWithStringIndexerHidingBaseTypeIndexer3.ts, 3, 18))
    }
}

interface Derived extends Base {
>Derived : Symbol(Derived, Decl(interfaceWithStringIndexerHidingBaseTypeIndexer3.ts, 5, 1))
>Base : Symbol(Base, Decl(interfaceWithStringIndexerHidingBaseTypeIndexer3.ts, 0, 0))

    [x: number]: {
>x : Symbol(x, Decl(interfaceWithStringIndexerHidingBaseTypeIndexer3.ts, 8, 5))

        a: number; b: number
>a : Symbol(a, Decl(interfaceWithStringIndexerHidingBaseTypeIndexer3.ts, 8, 18))
>b : Symbol(b, Decl(interfaceWithStringIndexerHidingBaseTypeIndexer3.ts, 9, 18))

    };
    // error
    2: {
>2 : Symbol(Derived[2], Decl(interfaceWithStringIndexerHidingBaseTypeIndexer3.ts, 10, 6))

        a: number;
>a : Symbol(a, Decl(interfaceWithStringIndexerHidingBaseTypeIndexer3.ts, 12, 8))
    }
}
