=== tests/cases/compiler/arithmeticOnInvalidTypes2.ts ===
var obj = function f<T>(a: T, b: T) {
>obj : Symbol(obj, Decl(arithmeticOnInvalidTypes2.ts, 0, 3))
>f : Symbol(f, Decl(arithmeticOnInvalidTypes2.ts, 0, 9))
>T : Symbol(T, Decl(arithmeticOnInvalidTypes2.ts, 0, 21))
>a : Symbol(a, Decl(arithmeticOnInvalidTypes2.ts, 0, 24))
>T : Symbol(T, Decl(arithmeticOnInvalidTypes2.ts, 0, 21))
>b : Symbol(b, Decl(arithmeticOnInvalidTypes2.ts, 0, 29))
>T : Symbol(T, Decl(arithmeticOnInvalidTypes2.ts, 0, 21))

    var z1 = a + b;
>z1 : Symbol(z1, Decl(arithmeticOnInvalidTypes2.ts, 1, 7))
>a : Symbol(a, Decl(arithmeticOnInvalidTypes2.ts, 0, 24))
>b : Symbol(b, Decl(arithmeticOnInvalidTypes2.ts, 0, 29))

    var z2 = a - b;
>z2 : Symbol(z2, Decl(arithmeticOnInvalidTypes2.ts, 2, 7))
>a : Symbol(a, Decl(arithmeticOnInvalidTypes2.ts, 0, 24))
>b : Symbol(b, Decl(arithmeticOnInvalidTypes2.ts, 0, 29))

    var z3 = a * b;
>z3 : Symbol(z3, Decl(arithmeticOnInvalidTypes2.ts, 3, 7))
>a : Symbol(a, Decl(arithmeticOnInvalidTypes2.ts, 0, 24))
>b : Symbol(b, Decl(arithmeticOnInvalidTypes2.ts, 0, 29))

    var z4 = a / b;
>z4 : Symbol(z4, Decl(arithmeticOnInvalidTypes2.ts, 4, 7))
>a : Symbol(a, Decl(arithmeticOnInvalidTypes2.ts, 0, 24))
>b : Symbol(b, Decl(arithmeticOnInvalidTypes2.ts, 0, 29))

    return a;
>a : Symbol(a, Decl(arithmeticOnInvalidTypes2.ts, 0, 24))

};
