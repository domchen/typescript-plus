=== tests/cases/compiler/generics5.ts ===
interface A { a: string; }
>A : Symbol(A, Decl(generics5.ts, 0, 0))
>a : Symbol(A.a, Decl(generics5.ts, 0, 13))

interface B extends A { b: string; }
>B : Symbol(B, Decl(generics5.ts, 0, 26))
>A : Symbol(A, Decl(generics5.ts, 0, 0))
>b : Symbol(B.b, Decl(generics5.ts, 1, 23))

interface C extends B { c: string; }
>C : Symbol(C, Decl(generics5.ts, 1, 36))
>B : Symbol(B, Decl(generics5.ts, 0, 26))
>c : Symbol(C.c, Decl(generics5.ts, 3, 23))

interface G<T, U extends B> {
>G : Symbol(G, Decl(generics5.ts, 3, 36))
>T : Symbol(T, Decl(generics5.ts, 4, 12))
>U : Symbol(U, Decl(generics5.ts, 4, 14))
>B : Symbol(B, Decl(generics5.ts, 0, 26))


}

var v3: G<A, A>;               // Error, A not valid argument for U
>v3 : Symbol(v3, Decl(generics5.ts, 9, 3))
>G : Symbol(G, Decl(generics5.ts, 3, 36))
>A : Symbol(A, Decl(generics5.ts, 0, 0))
>A : Symbol(A, Decl(generics5.ts, 0, 0))


