=== tests/cases/conformance/classes/members/inheritanceAndOverriding/derivedClassWithPrivateInstanceShadowingProtectedInstance.ts ===
class Base {
>Base : Symbol(Base, Decl(derivedClassWithPrivateInstanceShadowingProtectedInstance.ts, 0, 0))

    protected x: string;
>x : Symbol(Base.x, Decl(derivedClassWithPrivateInstanceShadowingProtectedInstance.ts, 0, 12))

    protected fn(): string {
>fn : Symbol(Base.fn, Decl(derivedClassWithPrivateInstanceShadowingProtectedInstance.ts, 1, 24))

        return '';
    }

    protected get a() { return 1; }
>a : Symbol(Base.a, Decl(derivedClassWithPrivateInstanceShadowingProtectedInstance.ts, 4, 5), Decl(derivedClassWithPrivateInstanceShadowingProtectedInstance.ts, 6, 35))

    protected set a(v) { }
>a : Symbol(Base.a, Decl(derivedClassWithPrivateInstanceShadowingProtectedInstance.ts, 4, 5), Decl(derivedClassWithPrivateInstanceShadowingProtectedInstance.ts, 6, 35))
>v : Symbol(v, Decl(derivedClassWithPrivateInstanceShadowingProtectedInstance.ts, 7, 20))
}

// error, not a subtype
class Derived extends Base {
>Derived : Symbol(Derived, Decl(derivedClassWithPrivateInstanceShadowingProtectedInstance.ts, 8, 1))
>Base : Symbol(Base, Decl(derivedClassWithPrivateInstanceShadowingProtectedInstance.ts, 0, 0))

    private x: string; 
>x : Symbol(Derived.x, Decl(derivedClassWithPrivateInstanceShadowingProtectedInstance.ts, 11, 28))

    private fn(): string {
>fn : Symbol(Derived.fn, Decl(derivedClassWithPrivateInstanceShadowingProtectedInstance.ts, 12, 22))

        return '';
    }

    private get a() { return 1; }
>a : Symbol(Derived.a, Decl(derivedClassWithPrivateInstanceShadowingProtectedInstance.ts, 15, 5), Decl(derivedClassWithPrivateInstanceShadowingProtectedInstance.ts, 17, 33))

    private set a(v) { }
>a : Symbol(Derived.a, Decl(derivedClassWithPrivateInstanceShadowingProtectedInstance.ts, 15, 5), Decl(derivedClassWithPrivateInstanceShadowingProtectedInstance.ts, 17, 33))
>v : Symbol(v, Decl(derivedClassWithPrivateInstanceShadowingProtectedInstance.ts, 18, 18))
}

