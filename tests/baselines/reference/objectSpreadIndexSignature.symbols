=== tests/cases/conformance/types/spread/objectSpreadIndexSignature.ts ===
declare let indexed1: { [n: string]: number; a: number; };
>indexed1 : Symbol(indexed1, Decl(objectSpreadIndexSignature.ts, 0, 11))
>n : Symbol(n, Decl(objectSpreadIndexSignature.ts, 0, 25))
>a : Symbol(a, Decl(objectSpreadIndexSignature.ts, 0, 44))

declare let indexed2: { [n: string]: boolean; c: boolean; };
>indexed2 : Symbol(indexed2, Decl(objectSpreadIndexSignature.ts, 1, 11))
>n : Symbol(n, Decl(objectSpreadIndexSignature.ts, 1, 25))
>c : Symbol(c, Decl(objectSpreadIndexSignature.ts, 1, 45))

declare let indexed3: { [n: string]: number };
>indexed3 : Symbol(indexed3, Decl(objectSpreadIndexSignature.ts, 2, 11))
>n : Symbol(n, Decl(objectSpreadIndexSignature.ts, 2, 25))

let i = { ...indexed1, b: 11 };
>i : Symbol(i, Decl(objectSpreadIndexSignature.ts, 3, 3))
>indexed1 : Symbol(indexed1, Decl(objectSpreadIndexSignature.ts, 0, 11))
>b : Symbol(b, Decl(objectSpreadIndexSignature.ts, 3, 22))

// only indexed has indexer, so i[101]: any
i[101];
>i : Symbol(i, Decl(objectSpreadIndexSignature.ts, 3, 3))

let ii = { ...indexed1, ...indexed2 };
>ii : Symbol(ii, Decl(objectSpreadIndexSignature.ts, 6, 3))
>indexed1 : Symbol(indexed1, Decl(objectSpreadIndexSignature.ts, 0, 11))
>indexed2 : Symbol(indexed2, Decl(objectSpreadIndexSignature.ts, 1, 11))

// both have indexer, so i[1001]: number | boolean
ii[1001];
>ii : Symbol(ii, Decl(objectSpreadIndexSignature.ts, 6, 3))

declare const b: boolean;
>b : Symbol(b, Decl(objectSpreadIndexSignature.ts, 10, 13))

indexed3 = { ...b ? indexed3 : undefined };
>indexed3 : Symbol(indexed3, Decl(objectSpreadIndexSignature.ts, 2, 11))
>b : Symbol(b, Decl(objectSpreadIndexSignature.ts, 10, 13))
>indexed3 : Symbol(indexed3, Decl(objectSpreadIndexSignature.ts, 2, 11))
>undefined : Symbol(undefined)

declare var roindex: { readonly [x:string]: number };
>roindex : Symbol(roindex, Decl(objectSpreadIndexSignature.ts, 13, 11))
>x : Symbol(x, Decl(objectSpreadIndexSignature.ts, 13, 33))

var writable = { ...roindex };
>writable : Symbol(writable, Decl(objectSpreadIndexSignature.ts, 14, 3))
>roindex : Symbol(roindex, Decl(objectSpreadIndexSignature.ts, 13, 11))

writable.a = 0;  // should be ok.
>writable : Symbol(writable, Decl(objectSpreadIndexSignature.ts, 14, 3))

