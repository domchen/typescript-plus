=== tests/cases/compiler/deps.ts ===
export function Input(): any { }
>Input : Symbol(Input, Decl(deps.ts, 0, 0))

export class TemplateRef { }
>TemplateRef : Symbol(TemplateRef, Decl(deps.ts, 0, 32))

=== tests/cases/compiler/index.ts ===
import { Input, TemplateRef } from './deps';
>Input : Symbol(Input, Decl(index.ts, 0, 8))
>TemplateRef : Symbol(TemplateRef, Decl(index.ts, 0, 15))

export class MyComponent {
>MyComponent : Symbol(MyComponent, Decl(index.ts, 0, 44))

    _ref: TemplateRef;
>_ref : Symbol(MyComponent._ref, Decl(index.ts, 2, 26))
>TemplateRef : Symbol(TemplateRef, Decl(index.ts, 0, 15))

    @Input()
>Input : Symbol(Input, Decl(index.ts, 0, 8))

    get ref() { return this._ref; }
>ref : Symbol(MyComponent.ref, Decl(index.ts, 3, 22), Decl(index.ts, 6, 35))
>this._ref : Symbol(MyComponent._ref, Decl(index.ts, 2, 26))
>this : Symbol(MyComponent, Decl(index.ts, 0, 44))
>_ref : Symbol(MyComponent._ref, Decl(index.ts, 2, 26))

    set ref(value: TemplateRef) { this._ref = value; }
>ref : Symbol(MyComponent.ref, Decl(index.ts, 3, 22), Decl(index.ts, 6, 35))
>value : Symbol(value, Decl(index.ts, 7, 12))
>TemplateRef : Symbol(TemplateRef, Decl(index.ts, 0, 15))
>this._ref : Symbol(MyComponent._ref, Decl(index.ts, 2, 26))
>this : Symbol(MyComponent, Decl(index.ts, 0, 44))
>_ref : Symbol(MyComponent._ref, Decl(index.ts, 2, 26))
>value : Symbol(value, Decl(index.ts, 7, 12))
}

