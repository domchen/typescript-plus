=== tests/cases/conformance/types/members/typesWithPublicConstructor.ts ===
// public is allowed on a constructor but is not meaningful

class C {
>C : Symbol(C, Decl(typesWithPublicConstructor.ts, 0, 0))

    public constructor() { }
}

var c = new C();
>c : Symbol(c, Decl(typesWithPublicConstructor.ts, 6, 3))
>C : Symbol(C, Decl(typesWithPublicConstructor.ts, 0, 0))

var r: () => void = c.constructor;
>r : Symbol(r, Decl(typesWithPublicConstructor.ts, 7, 3))
>c.constructor : Symbol(Object.constructor, Decl(lib.es5.d.ts, --, --))
>c : Symbol(c, Decl(typesWithPublicConstructor.ts, 6, 3))
>constructor : Symbol(Object.constructor, Decl(lib.es5.d.ts, --, --))

class C2 {
>C2 : Symbol(C2, Decl(typesWithPublicConstructor.ts, 7, 34))

    public constructor(x: number);
>x : Symbol(x, Decl(typesWithPublicConstructor.ts, 10, 23))

    public constructor(x: any) { }
>x : Symbol(x, Decl(typesWithPublicConstructor.ts, 11, 23))
}

var c2 = new C2();
>c2 : Symbol(c2, Decl(typesWithPublicConstructor.ts, 14, 3))
>C2 : Symbol(C2, Decl(typesWithPublicConstructor.ts, 7, 34))

var r2: (x: number) => void = c2.constructor;
>r2 : Symbol(r2, Decl(typesWithPublicConstructor.ts, 15, 3))
>x : Symbol(x, Decl(typesWithPublicConstructor.ts, 15, 9))
>c2 : Symbol(c2, Decl(typesWithPublicConstructor.ts, 14, 3))

