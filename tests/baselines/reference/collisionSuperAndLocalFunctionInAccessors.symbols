=== tests/cases/compiler/collisionSuperAndLocalFunctionInAccessors.ts ===
function _super() { // No error
>_super : Symbol(_super, Decl(collisionSuperAndLocalFunctionInAccessors.ts, 0, 0))
}
class Foo {
>Foo : Symbol(Foo, Decl(collisionSuperAndLocalFunctionInAccessors.ts, 1, 1))

    get prop1(): number {
>prop1 : Symbol(Foo.prop1, Decl(collisionSuperAndLocalFunctionInAccessors.ts, 2, 11), Decl(collisionSuperAndLocalFunctionInAccessors.ts, 7, 5))

        function _super() { // No error
>_super : Symbol(_super, Decl(collisionSuperAndLocalFunctionInAccessors.ts, 3, 25))
        }
        return 10;
    }
    set prop1(val: number) {
>prop1 : Symbol(Foo.prop1, Decl(collisionSuperAndLocalFunctionInAccessors.ts, 2, 11), Decl(collisionSuperAndLocalFunctionInAccessors.ts, 7, 5))
>val : Symbol(val, Decl(collisionSuperAndLocalFunctionInAccessors.ts, 8, 14))

        function _super() { // No error
>_super : Symbol(_super, Decl(collisionSuperAndLocalFunctionInAccessors.ts, 8, 28))
        }
    }
}
class b extends Foo {
>b : Symbol(b, Decl(collisionSuperAndLocalFunctionInAccessors.ts, 12, 1))
>Foo : Symbol(Foo, Decl(collisionSuperAndLocalFunctionInAccessors.ts, 1, 1))

    get prop2(): number {
>prop2 : Symbol(b.prop2, Decl(collisionSuperAndLocalFunctionInAccessors.ts, 13, 21), Decl(collisionSuperAndLocalFunctionInAccessors.ts, 18, 5))

        function _super() { // Should be error
>_super : Symbol(_super, Decl(collisionSuperAndLocalFunctionInAccessors.ts, 14, 25))
        }
        return 10;
    }
    set prop2(val: number) {
>prop2 : Symbol(b.prop2, Decl(collisionSuperAndLocalFunctionInAccessors.ts, 13, 21), Decl(collisionSuperAndLocalFunctionInAccessors.ts, 18, 5))
>val : Symbol(val, Decl(collisionSuperAndLocalFunctionInAccessors.ts, 19, 14))

        function _super() { // Should be error
>_super : Symbol(_super, Decl(collisionSuperAndLocalFunctionInAccessors.ts, 19, 28))
        }
    }
}
class c extends Foo {
>c : Symbol(c, Decl(collisionSuperAndLocalFunctionInAccessors.ts, 23, 1))
>Foo : Symbol(Foo, Decl(collisionSuperAndLocalFunctionInAccessors.ts, 1, 1))

    get prop2(): number {
>prop2 : Symbol(c.prop2, Decl(collisionSuperAndLocalFunctionInAccessors.ts, 24, 21), Decl(collisionSuperAndLocalFunctionInAccessors.ts, 31, 5))

        var x = () => {
>x : Symbol(x, Decl(collisionSuperAndLocalFunctionInAccessors.ts, 26, 11))

            function _super() { // Should be error
>_super : Symbol(_super, Decl(collisionSuperAndLocalFunctionInAccessors.ts, 26, 23))
            }
        }
        return 10;
    }
    set prop2(val: number) {
>prop2 : Symbol(c.prop2, Decl(collisionSuperAndLocalFunctionInAccessors.ts, 24, 21), Decl(collisionSuperAndLocalFunctionInAccessors.ts, 31, 5))
>val : Symbol(val, Decl(collisionSuperAndLocalFunctionInAccessors.ts, 32, 14))

        var x = () => {
>x : Symbol(x, Decl(collisionSuperAndLocalFunctionInAccessors.ts, 33, 11))

            function _super() { // Should be error
>_super : Symbol(_super, Decl(collisionSuperAndLocalFunctionInAccessors.ts, 33, 23))
            }
        }
    }
}
