// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`class.js 1`] = `
class A {}

var test1 = A.bar; // Error bar doesn't exist
var test2: string = A.name;
var test3: number = A.name; // Error string ~> number

var a = new A();
var test4 = a.constructor.bar; // Error bar doesn't exist
var test5: string = a.constructor.name;
var test6: number = a.constructor.name; // Error string ~> number
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
class A {}

var test1 = A.bar; // Error bar doesn't exist
var test2: string = A.name;
var test3: number = A.name; // Error string ~> number

var a = new A();
var test4 = a.constructor.bar; // Error bar doesn't exist
var test5: string = a.constructor.name;
var test6: number = a.constructor.name; // Error string ~> number

`;

exports[`function.js 1`] = `
/* TODO - we currently say that a function's statics are an AnyObjT and
 * anything goes. When we start enforcing the statics properly, we'll need to
 * know that .name exists
 */
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/* TODO - we currently say that a function's statics are an AnyObjT and
 * anything goes. When we start enforcing the statics properly, we'll need to
 * know that .name exists
 */

`;
