=== tests/cases/compiler/es5-asyncFunctionWithStatements.ts ===
declare var x, y, z, a, b, c;
>x : Symbol(x, Decl(es5-asyncFunctionWithStatements.ts, 0, 11))
>y : Symbol(y, Decl(es5-asyncFunctionWithStatements.ts, 0, 14))
>z : Symbol(z, Decl(es5-asyncFunctionWithStatements.ts, 0, 17))
>a : Symbol(a, Decl(es5-asyncFunctionWithStatements.ts, 0, 20))
>b : Symbol(b, Decl(es5-asyncFunctionWithStatements.ts, 0, 23))
>c : Symbol(c, Decl(es5-asyncFunctionWithStatements.ts, 0, 26))

async function withStatement0() {
>withStatement0 : Symbol(withStatement0, Decl(es5-asyncFunctionWithStatements.ts, 0, 29))

    with (x) {
>x : Symbol(x, Decl(es5-asyncFunctionWithStatements.ts, 0, 11))

        y;
    }
}

async function withStatement1() {
>withStatement1 : Symbol(withStatement1, Decl(es5-asyncFunctionWithStatements.ts, 6, 1))

    with (await x) {
>x : Symbol(x, Decl(es5-asyncFunctionWithStatements.ts, 0, 11))

        y;
    }
}

async function withStatement2() {
>withStatement2 : Symbol(withStatement2, Decl(es5-asyncFunctionWithStatements.ts, 12, 1))

    with (x) {
>x : Symbol(x, Decl(es5-asyncFunctionWithStatements.ts, 0, 11))

        a;
        await y;
        b;
    }
}

async function withStatement3() {
>withStatement3 : Symbol(withStatement3, Decl(es5-asyncFunctionWithStatements.ts, 20, 1))

    with (x) {
>x : Symbol(x, Decl(es5-asyncFunctionWithStatements.ts, 0, 11))

        with (z) {
            a;
            await y;
            b;
        }
    }
}
