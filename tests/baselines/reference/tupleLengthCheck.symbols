=== tests/cases/conformance/types/tuple/tupleLengthCheck.ts ===
declare const a: [number, string]
>a : Symbol(a, Decl(tupleLengthCheck.ts, 0, 13))

declare const rest: [number, string, ...boolean[]]
>rest : Symbol(rest, Decl(tupleLengthCheck.ts, 1, 13))

const a1 = a[1]
>a1 : Symbol(a1, Decl(tupleLengthCheck.ts, 3, 5))
>a : Symbol(a, Decl(tupleLengthCheck.ts, 0, 13))
>1 : Symbol(1)

const a2 = a[2]
>a2 : Symbol(a2, Decl(tupleLengthCheck.ts, 4, 5))
>a : Symbol(a, Decl(tupleLengthCheck.ts, 0, 13))

const a3 = a[1000]
>a3 : Symbol(a3, Decl(tupleLengthCheck.ts, 5, 5))
>a : Symbol(a, Decl(tupleLengthCheck.ts, 0, 13))

const a4 = rest[1]
>a4 : Symbol(a4, Decl(tupleLengthCheck.ts, 7, 5))
>rest : Symbol(rest, Decl(tupleLengthCheck.ts, 1, 13))
>1 : Symbol(1)

const a5 = rest[2]
>a5 : Symbol(a5, Decl(tupleLengthCheck.ts, 8, 5))
>rest : Symbol(rest, Decl(tupleLengthCheck.ts, 1, 13))

const a6 = rest[3]
>a6 : Symbol(a6, Decl(tupleLengthCheck.ts, 9, 5))
>rest : Symbol(rest, Decl(tupleLengthCheck.ts, 1, 13))

const a7 = rest[1000]
>a7 : Symbol(a7, Decl(tupleLengthCheck.ts, 10, 5))
>rest : Symbol(rest, Decl(tupleLengthCheck.ts, 1, 13))

