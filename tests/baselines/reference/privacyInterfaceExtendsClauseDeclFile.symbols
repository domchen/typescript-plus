=== tests/cases/compiler/privacyInterfaceExtendsClauseDeclFile_externalModule.ts ===
export module publicModule {
>publicModule : Symbol(publicModule, Decl(privacyInterfaceExtendsClauseDeclFile_externalModule.ts, 0, 0))

    export interface publicInterfaceInPublicModule {
>publicInterfaceInPublicModule : Symbol(publicInterfaceInPublicModule, Decl(privacyInterfaceExtendsClauseDeclFile_externalModule.ts, 0, 28))
    }

    interface privateInterfaceInPublicModule {
>privateInterfaceInPublicModule : Symbol(privateInterfaceInPublicModule, Decl(privacyInterfaceExtendsClauseDeclFile_externalModule.ts, 2, 5))
    }

    interface privateInterfaceImplementingPublicInterfaceInModule extends publicInterfaceInPublicModule {
>privateInterfaceImplementingPublicInterfaceInModule : Symbol(privateInterfaceImplementingPublicInterfaceInModule, Decl(privacyInterfaceExtendsClauseDeclFile_externalModule.ts, 5, 5))
>publicInterfaceInPublicModule : Symbol(publicInterfaceInPublicModule, Decl(privacyInterfaceExtendsClauseDeclFile_externalModule.ts, 0, 28))
    }
    interface privateInterfaceImplementingPrivateInterfaceInModule extends privateInterfaceInPublicModule {
>privateInterfaceImplementingPrivateInterfaceInModule : Symbol(privateInterfaceImplementingPrivateInterfaceInModule, Decl(privacyInterfaceExtendsClauseDeclFile_externalModule.ts, 8, 5))
>privateInterfaceInPublicModule : Symbol(privateInterfaceInPublicModule, Decl(privacyInterfaceExtendsClauseDeclFile_externalModule.ts, 2, 5))
    }
    export interface publicInterfaceImplementingPublicInterfaceInModule extends publicInterfaceInPublicModule {
>publicInterfaceImplementingPublicInterfaceInModule : Symbol(publicInterfaceImplementingPublicInterfaceInModule, Decl(privacyInterfaceExtendsClauseDeclFile_externalModule.ts, 10, 5))
>publicInterfaceInPublicModule : Symbol(publicInterfaceInPublicModule, Decl(privacyInterfaceExtendsClauseDeclFile_externalModule.ts, 0, 28))
    }
    export interface publicInterfaceImplementingPrivateInterfaceInModule extends privateInterfaceInPublicModule { // Should error
>publicInterfaceImplementingPrivateInterfaceInModule : Symbol(publicInterfaceImplementingPrivateInterfaceInModule, Decl(privacyInterfaceExtendsClauseDeclFile_externalModule.ts, 12, 5))
>privateInterfaceInPublicModule : Symbol(privateInterfaceInPublicModule, Decl(privacyInterfaceExtendsClauseDeclFile_externalModule.ts, 2, 5))
    }

    interface privateInterfaceImplementingFromPrivateModuleInterface extends privateModule.publicInterfaceInPrivateModule {
>privateInterfaceImplementingFromPrivateModuleInterface : Symbol(privateInterfaceImplementingFromPrivateModuleInterface, Decl(privacyInterfaceExtendsClauseDeclFile_externalModule.ts, 14, 5))
>privateModule.publicInterfaceInPrivateModule : Symbol(privateModule.publicInterfaceInPrivateModule, Decl(privacyInterfaceExtendsClauseDeclFile_externalModule.ts, 25, 22))
>privateModule : Symbol(privateModule, Decl(privacyInterfaceExtendsClauseDeclFile_externalModule.ts, 23, 1))
>publicInterfaceInPrivateModule : Symbol(privateModule.publicInterfaceInPrivateModule, Decl(privacyInterfaceExtendsClauseDeclFile_externalModule.ts, 25, 22))
    }
    export interface publicInterfaceImplementingFromPrivateModuleInterface extends privateModule.publicInterfaceInPrivateModule { // Should error
>publicInterfaceImplementingFromPrivateModuleInterface : Symbol(publicInterfaceImplementingFromPrivateModuleInterface, Decl(privacyInterfaceExtendsClauseDeclFile_externalModule.ts, 17, 5))
>privateModule.publicInterfaceInPrivateModule : Symbol(privateModule.publicInterfaceInPrivateModule, Decl(privacyInterfaceExtendsClauseDeclFile_externalModule.ts, 25, 22))
>privateModule : Symbol(privateModule, Decl(privacyInterfaceExtendsClauseDeclFile_externalModule.ts, 23, 1))
>publicInterfaceInPrivateModule : Symbol(privateModule.publicInterfaceInPrivateModule, Decl(privacyInterfaceExtendsClauseDeclFile_externalModule.ts, 25, 22))
    }

    export interface publicInterfaceImplementingPrivateAndPublicInterface extends privateInterfaceInPublicModule, publicInterfaceInPublicModule { // Should error
>publicInterfaceImplementingPrivateAndPublicInterface : Symbol(publicInterfaceImplementingPrivateAndPublicInterface, Decl(privacyInterfaceExtendsClauseDeclFile_externalModule.ts, 19, 5))
>privateInterfaceInPublicModule : Symbol(privateInterfaceInPublicModule, Decl(privacyInterfaceExtendsClauseDeclFile_externalModule.ts, 2, 5))
>publicInterfaceInPublicModule : Symbol(publicInterfaceInPublicModule, Decl(privacyInterfaceExtendsClauseDeclFile_externalModule.ts, 0, 28))
    }
}

module privateModule {
>privateModule : Symbol(privateModule, Decl(privacyInterfaceExtendsClauseDeclFile_externalModule.ts, 23, 1))

    export interface publicInterfaceInPrivateModule {
>publicInterfaceInPrivateModule : Symbol(publicInterfaceInPrivateModule, Decl(privacyInterfaceExtendsClauseDeclFile_externalModule.ts, 25, 22))

    }

    interface privateInterfaceInPrivateModule {
>privateInterfaceInPrivateModule : Symbol(privateInterfaceInPrivateModule, Decl(privacyInterfaceExtendsClauseDeclFile_externalModule.ts, 28, 5))
    }

    interface privateInterfaceImplementingPublicInterfaceInModule extends publicInterfaceInPrivateModule {
>privateInterfaceImplementingPublicInterfaceInModule : Symbol(privateInterfaceImplementingPublicInterfaceInModule, Decl(privacyInterfaceExtendsClauseDeclFile_externalModule.ts, 31, 5))
>publicInterfaceInPrivateModule : Symbol(publicInterfaceInPrivateModule, Decl(privacyInterfaceExtendsClauseDeclFile_externalModule.ts, 25, 22))
    }
    interface privateInterfaceImplementingPrivateInterfaceInModule extends privateInterfaceInPrivateModule {
>privateInterfaceImplementingPrivateInterfaceInModule : Symbol(privateInterfaceImplementingPrivateInterfaceInModule, Decl(privacyInterfaceExtendsClauseDeclFile_externalModule.ts, 34, 5))
>privateInterfaceInPrivateModule : Symbol(privateInterfaceInPrivateModule, Decl(privacyInterfaceExtendsClauseDeclFile_externalModule.ts, 28, 5))
    }
    export interface publicInterfaceImplementingPublicInterfaceInModule extends publicInterfaceInPrivateModule {
>publicInterfaceImplementingPublicInterfaceInModule : Symbol(publicInterfaceImplementingPublicInterfaceInModule, Decl(privacyInterfaceExtendsClauseDeclFile_externalModule.ts, 36, 5))
>publicInterfaceInPrivateModule : Symbol(publicInterfaceInPrivateModule, Decl(privacyInterfaceExtendsClauseDeclFile_externalModule.ts, 25, 22))
    }
    export interface publicInterfaceImplementingPrivateInterfaceInModule extends privateInterfaceInPrivateModule {
>publicInterfaceImplementingPrivateInterfaceInModule : Symbol(publicInterfaceImplementingPrivateInterfaceInModule, Decl(privacyInterfaceExtendsClauseDeclFile_externalModule.ts, 38, 5))
>privateInterfaceInPrivateModule : Symbol(privateInterfaceInPrivateModule, Decl(privacyInterfaceExtendsClauseDeclFile_externalModule.ts, 28, 5))
    }

    interface privateInterfaceImplementingFromPrivateModuleInterface extends privateModule.publicInterfaceInPrivateModule {
>privateInterfaceImplementingFromPrivateModuleInterface : Symbol(privateInterfaceImplementingFromPrivateModuleInterface, Decl(privacyInterfaceExtendsClauseDeclFile_externalModule.ts, 40, 5))
>privateModule.publicInterfaceInPrivateModule : Symbol(publicInterfaceInPrivateModule, Decl(privacyInterfaceExtendsClauseDeclFile_externalModule.ts, 25, 22))
>privateModule : Symbol(privateModule, Decl(privacyInterfaceExtendsClauseDeclFile_externalModule.ts, 23, 1))
>publicInterfaceInPrivateModule : Symbol(publicInterfaceInPrivateModule, Decl(privacyInterfaceExtendsClauseDeclFile_externalModule.ts, 25, 22))
    }
    export interface publicInterfaceImplementingFromPrivateModuleInterface extends privateModule.publicInterfaceInPrivateModule {
>publicInterfaceImplementingFromPrivateModuleInterface : Symbol(publicInterfaceImplementingFromPrivateModuleInterface, Decl(privacyInterfaceExtendsClauseDeclFile_externalModule.ts, 43, 5))
>privateModule.publicInterfaceInPrivateModule : Symbol(publicInterfaceInPrivateModule, Decl(privacyInterfaceExtendsClauseDeclFile_externalModule.ts, 25, 22))
>privateModule : Symbol(privateModule, Decl(privacyInterfaceExtendsClauseDeclFile_externalModule.ts, 23, 1))
>publicInterfaceInPrivateModule : Symbol(publicInterfaceInPrivateModule, Decl(privacyInterfaceExtendsClauseDeclFile_externalModule.ts, 25, 22))
    }
}

export interface publicInterface {
>publicInterface : Symbol(publicInterface, Decl(privacyInterfaceExtendsClauseDeclFile_externalModule.ts, 46, 1))

}

interface privateInterface {
>privateInterface : Symbol(privateInterface, Decl(privacyInterfaceExtendsClauseDeclFile_externalModule.ts, 50, 1))
}

interface privateInterfaceImplementingPublicInterface extends publicInterface {
>privateInterfaceImplementingPublicInterface : Symbol(privateInterfaceImplementingPublicInterface, Decl(privacyInterfaceExtendsClauseDeclFile_externalModule.ts, 53, 1))
>publicInterface : Symbol(publicInterface, Decl(privacyInterfaceExtendsClauseDeclFile_externalModule.ts, 46, 1))
}
interface privateInterfaceImplementingPrivateInterfaceInModule extends privateInterface {
>privateInterfaceImplementingPrivateInterfaceInModule : Symbol(privateInterfaceImplementingPrivateInterfaceInModule, Decl(privacyInterfaceExtendsClauseDeclFile_externalModule.ts, 56, 1))
>privateInterface : Symbol(privateInterface, Decl(privacyInterfaceExtendsClauseDeclFile_externalModule.ts, 50, 1))
}
export interface publicInterfaceImplementingPublicInterface extends publicInterface {
>publicInterfaceImplementingPublicInterface : Symbol(publicInterfaceImplementingPublicInterface, Decl(privacyInterfaceExtendsClauseDeclFile_externalModule.ts, 58, 1))
>publicInterface : Symbol(publicInterface, Decl(privacyInterfaceExtendsClauseDeclFile_externalModule.ts, 46, 1))
}
export interface publicInterfaceImplementingPrivateInterface extends privateInterface { // Should error
>publicInterfaceImplementingPrivateInterface : Symbol(publicInterfaceImplementingPrivateInterface, Decl(privacyInterfaceExtendsClauseDeclFile_externalModule.ts, 60, 1))
>privateInterface : Symbol(privateInterface, Decl(privacyInterfaceExtendsClauseDeclFile_externalModule.ts, 50, 1))
}

interface privateInterfaceImplementingFromPrivateModuleInterface extends privateModule.publicInterfaceInPrivateModule {
>privateInterfaceImplementingFromPrivateModuleInterface : Symbol(privateInterfaceImplementingFromPrivateModuleInterface, Decl(privacyInterfaceExtendsClauseDeclFile_externalModule.ts, 62, 1))
>privateModule.publicInterfaceInPrivateModule : Symbol(privateModule.publicInterfaceInPrivateModule, Decl(privacyInterfaceExtendsClauseDeclFile_externalModule.ts, 25, 22))
>privateModule : Symbol(privateModule, Decl(privacyInterfaceExtendsClauseDeclFile_externalModule.ts, 23, 1))
>publicInterfaceInPrivateModule : Symbol(privateModule.publicInterfaceInPrivateModule, Decl(privacyInterfaceExtendsClauseDeclFile_externalModule.ts, 25, 22))
}
export interface publicInterfaceImplementingFromPrivateModuleInterface extends privateModule.publicInterfaceInPrivateModule { // Should error
>publicInterfaceImplementingFromPrivateModuleInterface : Symbol(publicInterfaceImplementingFromPrivateModuleInterface, Decl(privacyInterfaceExtendsClauseDeclFile_externalModule.ts, 65, 1))
>privateModule.publicInterfaceInPrivateModule : Symbol(privateModule.publicInterfaceInPrivateModule, Decl(privacyInterfaceExtendsClauseDeclFile_externalModule.ts, 25, 22))
>privateModule : Symbol(privateModule, Decl(privacyInterfaceExtendsClauseDeclFile_externalModule.ts, 23, 1))
>publicInterfaceInPrivateModule : Symbol(privateModule.publicInterfaceInPrivateModule, Decl(privacyInterfaceExtendsClauseDeclFile_externalModule.ts, 25, 22))
}

=== tests/cases/compiler/privacyInterfaceExtendsClauseDeclFile_GlobalFile.ts ===
module publicModuleInGlobal {
>publicModuleInGlobal : Symbol(publicModuleInGlobal, Decl(privacyInterfaceExtendsClauseDeclFile_GlobalFile.ts, 0, 0))

    export interface publicInterfaceInPublicModule {
>publicInterfaceInPublicModule : Symbol(publicInterfaceInPublicModule, Decl(privacyInterfaceExtendsClauseDeclFile_GlobalFile.ts, 0, 29))
    }

    interface privateInterfaceInPublicModule {
>privateInterfaceInPublicModule : Symbol(privateInterfaceInPublicModule, Decl(privacyInterfaceExtendsClauseDeclFile_GlobalFile.ts, 2, 5))
    }

    interface privateInterfaceImplementingPublicInterfaceInModule extends publicInterfaceInPublicModule {
>privateInterfaceImplementingPublicInterfaceInModule : Symbol(privateInterfaceImplementingPublicInterfaceInModule, Decl(privacyInterfaceExtendsClauseDeclFile_GlobalFile.ts, 5, 5))
>publicInterfaceInPublicModule : Symbol(publicInterfaceInPublicModule, Decl(privacyInterfaceExtendsClauseDeclFile_GlobalFile.ts, 0, 29))
    }
    interface privateInterfaceImplementingPrivateInterfaceInModule extends privateInterfaceInPublicModule {
>privateInterfaceImplementingPrivateInterfaceInModule : Symbol(privateInterfaceImplementingPrivateInterfaceInModule, Decl(privacyInterfaceExtendsClauseDeclFile_GlobalFile.ts, 8, 5))
>privateInterfaceInPublicModule : Symbol(privateInterfaceInPublicModule, Decl(privacyInterfaceExtendsClauseDeclFile_GlobalFile.ts, 2, 5))
    }
    export interface publicInterfaceImplementingPublicInterfaceInModule extends publicInterfaceInPublicModule {
>publicInterfaceImplementingPublicInterfaceInModule : Symbol(publicInterfaceImplementingPublicInterfaceInModule, Decl(privacyInterfaceExtendsClauseDeclFile_GlobalFile.ts, 10, 5))
>publicInterfaceInPublicModule : Symbol(publicInterfaceInPublicModule, Decl(privacyInterfaceExtendsClauseDeclFile_GlobalFile.ts, 0, 29))
    }
    export interface publicInterfaceImplementingPrivateInterfaceInModule extends privateInterfaceInPublicModule { // Should error
>publicInterfaceImplementingPrivateInterfaceInModule : Symbol(publicInterfaceImplementingPrivateInterfaceInModule, Decl(privacyInterfaceExtendsClauseDeclFile_GlobalFile.ts, 12, 5))
>privateInterfaceInPublicModule : Symbol(privateInterfaceInPublicModule, Decl(privacyInterfaceExtendsClauseDeclFile_GlobalFile.ts, 2, 5))
    }
}
interface publicInterfaceInGlobal {
>publicInterfaceInGlobal : Symbol(publicInterfaceInGlobal, Decl(privacyInterfaceExtendsClauseDeclFile_GlobalFile.ts, 15, 1))
}
interface publicInterfaceImplementingPublicInterfaceInGlobal extends publicInterfaceInGlobal {
>publicInterfaceImplementingPublicInterfaceInGlobal : Symbol(publicInterfaceImplementingPublicInterfaceInGlobal, Decl(privacyInterfaceExtendsClauseDeclFile_GlobalFile.ts, 17, 1))
>publicInterfaceInGlobal : Symbol(publicInterfaceInGlobal, Decl(privacyInterfaceExtendsClauseDeclFile_GlobalFile.ts, 15, 1))
}

