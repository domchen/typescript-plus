=== tests/cases/conformance/dynamicImport/0.ts ===
export class B {
>B : Symbol(B, Decl(0.ts, 0, 0))

    print() { return "I am B"}
>print : Symbol(B.print, Decl(0.ts, 0, 16))
}

=== tests/cases/conformance/dynamicImport/2.ts ===
async function foo() {
>foo : Symbol(foo, Decl(2.ts, 0, 0))

    class C extends (await import("./0")).B {}
>C : Symbol(C, Decl(2.ts, 0, 22))
>(await import("./0")).B : Symbol(B, Decl(0.ts, 0, 0))
>"./0" : Symbol("tests/cases/conformance/dynamicImport/0", Decl(0.ts, 0, 0))
>B : Symbol(B, Decl(0.ts, 0, 0))

    var c = new C();
>c : Symbol(c, Decl(2.ts, 2, 7))
>C : Symbol(C, Decl(2.ts, 0, 22))

    c.print();
>c.print : Symbol(B.print, Decl(0.ts, 0, 16))
>c : Symbol(c, Decl(2.ts, 2, 7))
>print : Symbol(B.print, Decl(0.ts, 0, 16))
}
foo();
>foo : Symbol(foo, Decl(2.ts, 0, 0))

