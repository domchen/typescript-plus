=== tests/cases/compiler/reverseMappedContravariantInference.ts ===
// Repro from #21273

declare function conforms<T>(source: { [K in keyof T]: (val: T[K]) => boolean }): (value: T) => boolean;
>conforms : <T>(source: { [K in keyof T]: (val: T[K]) => boolean; }) => (value: T) => boolean
>T : T
>source : { [K in keyof T]: (val: T[K]) => boolean; }
>K : K
>T : T
>val : T[K]
>T : T
>K : K
>value : T
>T : T

conforms({ foo: (v: string) => false })({ foo: "hello" });
>conforms({ foo: (v: string) => false })({ foo: "hello" }) : boolean
>conforms({ foo: (v: string) => false }) : (value: { foo: any; }) => boolean
>conforms : <T>(source: { [K in keyof T]: (val: T[K]) => boolean; }) => (value: T) => boolean
>{ foo: (v: string) => false } : { foo: (v: string) => boolean; }
>foo : (v: string) => boolean
>(v: string) => false : (v: string) => boolean
>v : string
>false : false
>{ foo: "hello" } : { foo: string; }
>foo : string
>"hello" : "hello"

