tests/cases/conformance/types/tuple/restTupleElements1.ts(3,22): error TS1257: A required element cannot follow an optional element.
tests/cases/conformance/types/tuple/restTupleElements1.ts(8,13): error TS1256: A rest element must be last in a tuple type.
tests/cases/conformance/types/tuple/restTupleElements1.ts(9,13): error TS2574: A rest element type must be an array type.
tests/cases/conformance/types/tuple/restTupleElements1.ts(10,13): error TS2574: A rest element type must be an array type.
tests/cases/conformance/types/tuple/restTupleElements1.ts(10,16): error TS8020: JSDoc types can only be used inside documentation comments.
tests/cases/conformance/types/tuple/restTupleElements1.ts(23,31): error TS2344: Type 'number[]' does not satisfy the constraint '[number, ...number[]]'.
  Property '0' is missing in type 'number[]'.
tests/cases/conformance/types/tuple/restTupleElements1.ts(24,31): error TS2344: Type '[]' does not satisfy the constraint '[number, ...number[]]'.
  Property '0' is missing in type '[]'.
tests/cases/conformance/types/tuple/restTupleElements1.ts(29,18): error TS2344: Type 'number[]' does not satisfy the constraint '[number]'.
  Property '0' is missing in type 'number[]'.
tests/cases/conformance/types/tuple/restTupleElements1.ts(30,18): error TS2344: Type '[number, ...number[]]' does not satisfy the constraint '[number]'.
  Types of property 'length' are incompatible.
    Type 'number' is not assignable to type '1'.
tests/cases/conformance/types/tuple/restTupleElements1.ts(32,31): error TS2344: Type '[number, ...string[]]' does not satisfy the constraint '[number, ...number[]]'.
  Type 'string' is not assignable to type 'number'.
tests/cases/conformance/types/tuple/restTupleElements1.ts(33,31): error TS2344: Type '[string, ...number[]]' does not satisfy the constraint '[number, ...number[]]'.
  Type 'string' is not assignable to type 'number'.
tests/cases/conformance/types/tuple/restTupleElements1.ts(34,31): error TS2344: Type '[number, number, string]' does not satisfy the constraint '[number, ...number[]]'.
  Property '2' is incompatible with rest element type.
    Type 'string' is not assignable to type 'number'.
tests/cases/conformance/types/tuple/restTupleElements1.ts(35,31): error TS2344: Type '[number, number, number, string]' does not satisfy the constraint '[number, ...number[]]'.
  Property '3' is incompatible with rest element type.
    Type 'string' is not assignable to type 'number'.
tests/cases/conformance/types/tuple/restTupleElements1.ts(59,4): error TS2345: Argument of type '[]' is not assignable to parameter of type '[{}, ...{}[]]'.
  Property '0' is missing in type '[]'.


==== tests/cases/conformance/types/tuple/restTupleElements1.ts (14 errors) ====
    type T00 = [string?];
    type T01 = [string, string?];
    type T02 = [string?, string];  // Error
                         ~~~~~~
!!! error TS1257: A required element cannot follow an optional element.
    type T03 = [...string[]];
    type T04 = [...[...string[]]];
    type T05 = [...[...[...string[]]]];
    type T06 = [string, ...string[]];
    type T07 = [...string[], string];  // Error
                ~~~~~~~~~~~
!!! error TS1256: A rest element must be last in a tuple type.
    type T08 = [...string];  // Error
                ~~~~~~~~~
!!! error TS2574: A rest element type must be an array type.
    type T09 = [...string?];  // Error
                ~~~~~~~~~~
!!! error TS2574: A rest element type must be an array type.
                   ~~~~~~~
!!! error TS8020: JSDoc types can only be used inside documentation comments.
    type T10 = [string, ...[...string[]]];
    type T11 = [string, ...[...[...string[]]]];
    
    type T15 = [boolean, number, ...string[]];
    type L15 = T15["length"];  // number
    
    declare function assign<T, S extends T>(): void;
    
    assign<number[], [...number[]]>();
    assign<number[], [number, ...number[]]>();
    assign<[...number[]], number[]>();
    
    assign<[number, ...number[]], number[]>();  // Error
                                  ~~~~~~~~
!!! error TS2344: Type 'number[]' does not satisfy the constraint '[number, ...number[]]'.
!!! error TS2344:   Property '0' is missing in type 'number[]'.
    assign<[number, ...number[]], []>();  // Error
                                  ~~
!!! error TS2344: Type '[]' does not satisfy the constraint '[number, ...number[]]'.
!!! error TS2344:   Property '0' is missing in type '[]'.
    assign<[number, ...number[]], [number]>();
    assign<[number, ...number[]], [number, number]>();
    assign<[number, ...number[]], [number, number, ...number[]]>();
    
    assign<[number], [...number[]]>();  // Error
                     ~~~~~~~~~~~~~
!!! error TS2344: Type 'number[]' does not satisfy the constraint '[number]'.
!!! error TS2344:   Property '0' is missing in type 'number[]'.
    assign<[number], [number, ...number[]]>();  // Error
                     ~~~~~~~~~~~~~~~~~~~~~
!!! error TS2344: Type '[number, ...number[]]' does not satisfy the constraint '[number]'.
!!! error TS2344:   Types of property 'length' are incompatible.
!!! error TS2344:     Type 'number' is not assignable to type '1'.
    
    assign<[number, ...number[]], [number, ...string[]]>();  // Error
                                  ~~~~~~~~~~~~~~~~~~~~~
!!! error TS2344: Type '[number, ...string[]]' does not satisfy the constraint '[number, ...number[]]'.
!!! error TS2344:   Type 'string' is not assignable to type 'number'.
    assign<[number, ...number[]], [string, ...number[]]>();  // Error
                                  ~~~~~~~~~~~~~~~~~~~~~
!!! error TS2344: Type '[string, ...number[]]' does not satisfy the constraint '[number, ...number[]]'.
!!! error TS2344:   Type 'string' is not assignable to type 'number'.
    assign<[number, ...number[]], [number, number, string]>();  // Error
                                  ~~~~~~~~~~~~~~~~~~~~~~~~
!!! error TS2344: Type '[number, number, string]' does not satisfy the constraint '[number, ...number[]]'.
!!! error TS2344:   Property '2' is incompatible with rest element type.
!!! error TS2344:     Type 'string' is not assignable to type 'number'.
    assign<[number, ...number[]], [number, number, number, string]>();  // Error
                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!!! error TS2344: Type '[number, number, number, string]' does not satisfy the constraint '[number, ...number[]]'.
!!! error TS2344:   Property '3' is incompatible with rest element type.
!!! error TS2344:     Type 'string' is not assignable to type 'number'.
    
    type T20 = [number, string, ...boolean[]];
    
    type T21 = T20[0];
    type T22 = T20[0 | 1];
    type T23 = T20[0 | 1 | 2];
    type T24 = T20[0 | 1 | 2 | 3];
    type T25 = T20[1 | 2 | 3];
    type T26 = T20[2 | 3];
    type T27 = T20[3];
    type T28 = T20[number];
    
    declare const t: T20;
    declare const x: number;
    
    let e0 = t[0];  // number
    let e1 = t[1];  // string
    let e2 = t[2];  // boolean
    let e3 = t[3];  // boolean
    let ex = t[x];  // number | string | boolean
    
    declare function f0<T, U>(x: [T, ...U[]]): [T, U];
    
    f0([]);  // Error
       ~~
!!! error TS2345: Argument of type '[]' is not assignable to parameter of type '[{}, ...{}[]]'.
!!! error TS2345:   Property '0' is missing in type '[]'.
    f0([1]);
    f0([1, 2, 3]);
    f0([1, "hello", true]);
    
    declare function f1(a: [(x: number) => number, ...((x: string) => number)[]]): void;
    declare function f2(...a: [(x: number) => number, ...((x: string) => number)[]]): void;
    
    f1([x => x * 2, x => x.length, x => x.charCodeAt(0)]);
    f2(x => x * 2, x => x.length, x => x.charCodeAt(0));
    