=== tests/cases/compiler/typeName1.ts ===
interface I {
>I : Symbol(I, Decl(typeName1.ts, 0, 0))

    k;
>k : Symbol(I.k, Decl(typeName1.ts, 0, 13))
}
class C {
>C : Symbol(C, Decl(typeName1.ts, 2, 1))

    public eek:string;
>eek : Symbol(C.eek, Decl(typeName1.ts, 3, 9))

    static zeek:number;
>zeek : Symbol(C.zeek, Decl(typeName1.ts, 4, 22))
}

var x1:{ f(s:string):number;f(n:number):string; }=3;
>x1 : Symbol(x1, Decl(typeName1.ts, 8, 3))
>f : Symbol(f, Decl(typeName1.ts, 8, 8), Decl(typeName1.ts, 8, 28))
>s : Symbol(s, Decl(typeName1.ts, 8, 11))
>f : Symbol(f, Decl(typeName1.ts, 8, 8), Decl(typeName1.ts, 8, 28))
>n : Symbol(n, Decl(typeName1.ts, 8, 30))

var x2:{ f(s:string):number; } =3;
>x2 : Symbol(x2, Decl(typeName1.ts, 9, 3))
>f : Symbol(f, Decl(typeName1.ts, 9, 8))
>s : Symbol(s, Decl(typeName1.ts, 9, 11))

var x3:{ (s:string):number;(n:number):string; }=3;
>x3 : Symbol(x3, Decl(typeName1.ts, 10, 3))
>s : Symbol(s, Decl(typeName1.ts, 10, 10))
>n : Symbol(n, Decl(typeName1.ts, 10, 28))

var x4:{ x;y;z:number;f(n:number):string;f(s:string):number; }=3;
>x4 : Symbol(x4, Decl(typeName1.ts, 11, 3))
>x : Symbol(x, Decl(typeName1.ts, 11, 8))
>y : Symbol(y, Decl(typeName1.ts, 11, 11))
>z : Symbol(z, Decl(typeName1.ts, 11, 13))
>f : Symbol(f, Decl(typeName1.ts, 11, 22), Decl(typeName1.ts, 11, 41))
>n : Symbol(n, Decl(typeName1.ts, 11, 24))
>f : Symbol(f, Decl(typeName1.ts, 11, 22), Decl(typeName1.ts, 11, 41))
>s : Symbol(s, Decl(typeName1.ts, 11, 43))

var x5:{ (s:string):number;(n:number):string;x;y;z:number;f(n:number):string;f(s:string):number; }=3;
>x5 : Symbol(x5, Decl(typeName1.ts, 12, 3))
>s : Symbol(s, Decl(typeName1.ts, 12, 10))
>n : Symbol(n, Decl(typeName1.ts, 12, 28))
>x : Symbol(x, Decl(typeName1.ts, 12, 45))
>y : Symbol(y, Decl(typeName1.ts, 12, 47))
>z : Symbol(z, Decl(typeName1.ts, 12, 49))
>f : Symbol(f, Decl(typeName1.ts, 12, 58), Decl(typeName1.ts, 12, 77))
>n : Symbol(n, Decl(typeName1.ts, 12, 60))
>f : Symbol(f, Decl(typeName1.ts, 12, 58), Decl(typeName1.ts, 12, 77))
>s : Symbol(s, Decl(typeName1.ts, 12, 79))

var x6:{ z:number;f:{(n:number):string;(s:string):number;}; }=3;
>x6 : Symbol(x6, Decl(typeName1.ts, 13, 3))
>z : Symbol(z, Decl(typeName1.ts, 13, 8))
>f : Symbol(f, Decl(typeName1.ts, 13, 18))
>n : Symbol(n, Decl(typeName1.ts, 13, 22))
>s : Symbol(s, Decl(typeName1.ts, 13, 40))

var x7:(s:string)=>boolean=3;
>x7 : Symbol(x7, Decl(typeName1.ts, 14, 3))
>s : Symbol(s, Decl(typeName1.ts, 14, 8))

var x8:{ z:I;[s:string]:{ x; y; };[n:number]:{x; y;};():boolean; }=3;
>x8 : Symbol(x8, Decl(typeName1.ts, 15, 3))
>z : Symbol(z, Decl(typeName1.ts, 15, 8))
>I : Symbol(I, Decl(typeName1.ts, 0, 0))
>s : Symbol(s, Decl(typeName1.ts, 15, 14))
>x : Symbol(x, Decl(typeName1.ts, 15, 25))
>y : Symbol(y, Decl(typeName1.ts, 15, 28))
>n : Symbol(n, Decl(typeName1.ts, 15, 35))
>x : Symbol(x, Decl(typeName1.ts, 15, 46))
>y : Symbol(y, Decl(typeName1.ts, 15, 48))

var x9:I=3;
>x9 : Symbol(x9, Decl(typeName1.ts, 16, 3))
>I : Symbol(I, Decl(typeName1.ts, 0, 0))

var x10:I[][][][]=3;
>x10 : Symbol(x10, Decl(typeName1.ts, 17, 3))
>I : Symbol(I, Decl(typeName1.ts, 0, 0))

var x11:{z:I;x:boolean;}[][]=3;
>x11 : Symbol(x11, Decl(typeName1.ts, 18, 3))
>z : Symbol(z, Decl(typeName1.ts, 18, 9))
>I : Symbol(I, Decl(typeName1.ts, 0, 0))
>x : Symbol(x, Decl(typeName1.ts, 18, 13))

var x12:{z:I;x:boolean;y:(s:string)=>boolean;w:{ z:I;[s:string]:{ x; y; };[n:number]:{x; y;};():boolean; };}[][]=3;
>x12 : Symbol(x12, Decl(typeName1.ts, 19, 3))
>z : Symbol(z, Decl(typeName1.ts, 19, 9))
>I : Symbol(I, Decl(typeName1.ts, 0, 0))
>x : Symbol(x, Decl(typeName1.ts, 19, 13))
>y : Symbol(y, Decl(typeName1.ts, 19, 23))
>s : Symbol(s, Decl(typeName1.ts, 19, 26))
>w : Symbol(w, Decl(typeName1.ts, 19, 45))
>z : Symbol(z, Decl(typeName1.ts, 19, 48))
>I : Symbol(I, Decl(typeName1.ts, 0, 0))
>s : Symbol(s, Decl(typeName1.ts, 19, 54))
>x : Symbol(x, Decl(typeName1.ts, 19, 65))
>y : Symbol(y, Decl(typeName1.ts, 19, 68))
>n : Symbol(n, Decl(typeName1.ts, 19, 75))
>x : Symbol(x, Decl(typeName1.ts, 19, 86))
>y : Symbol(y, Decl(typeName1.ts, 19, 88))

var x13:{ new(): number; new(n:number):number; x: string; w: {y: number;}; (): {}; } = 3;
>x13 : Symbol(x13, Decl(typeName1.ts, 20, 3))
>n : Symbol(n, Decl(typeName1.ts, 20, 29))
>x : Symbol(x, Decl(typeName1.ts, 20, 46))
>w : Symbol(w, Decl(typeName1.ts, 20, 57))
>y : Symbol(y, Decl(typeName1.ts, 20, 62))

var x14:{ f(x:number):boolean; p; q; ():string; }=3;
>x14 : Symbol(x14, Decl(typeName1.ts, 21, 3))
>f : Symbol(f, Decl(typeName1.ts, 21, 9))
>x : Symbol(x, Decl(typeName1.ts, 21, 12))
>p : Symbol(p, Decl(typeName1.ts, 21, 30))
>q : Symbol(q, Decl(typeName1.ts, 21, 33))

var x15:number=C;
>x15 : Symbol(x15, Decl(typeName1.ts, 22, 3))
>C : Symbol(C, Decl(typeName1.ts, 2, 1))




