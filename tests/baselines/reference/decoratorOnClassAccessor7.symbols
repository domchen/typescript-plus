=== tests/cases/conformance/decorators/class/accessor/decoratorOnClassAccessor7.ts ===
declare function dec1<T>(target: any, propertyKey: string, descriptor: TypedPropertyDescriptor<T>): TypedPropertyDescriptor<T>;
>dec1 : Symbol(dec1, Decl(decoratorOnClassAccessor7.ts, 0, 0))
>T : Symbol(T, Decl(decoratorOnClassAccessor7.ts, 0, 22))
>target : Symbol(target, Decl(decoratorOnClassAccessor7.ts, 0, 25))
>propertyKey : Symbol(propertyKey, Decl(decoratorOnClassAccessor7.ts, 0, 37))
>descriptor : Symbol(descriptor, Decl(decoratorOnClassAccessor7.ts, 0, 58))
>TypedPropertyDescriptor : Symbol(TypedPropertyDescriptor, Decl(lib.es5.d.ts, --, --))
>T : Symbol(T, Decl(decoratorOnClassAccessor7.ts, 0, 22))
>TypedPropertyDescriptor : Symbol(TypedPropertyDescriptor, Decl(lib.es5.d.ts, --, --))
>T : Symbol(T, Decl(decoratorOnClassAccessor7.ts, 0, 22))

declare function dec2<T>(target: any, propertyKey: string, descriptor: TypedPropertyDescriptor<T>): TypedPropertyDescriptor<T>;
>dec2 : Symbol(dec2, Decl(decoratorOnClassAccessor7.ts, 0, 127))
>T : Symbol(T, Decl(decoratorOnClassAccessor7.ts, 1, 22))
>target : Symbol(target, Decl(decoratorOnClassAccessor7.ts, 1, 25))
>propertyKey : Symbol(propertyKey, Decl(decoratorOnClassAccessor7.ts, 1, 37))
>descriptor : Symbol(descriptor, Decl(decoratorOnClassAccessor7.ts, 1, 58))
>TypedPropertyDescriptor : Symbol(TypedPropertyDescriptor, Decl(lib.es5.d.ts, --, --))
>T : Symbol(T, Decl(decoratorOnClassAccessor7.ts, 1, 22))
>TypedPropertyDescriptor : Symbol(TypedPropertyDescriptor, Decl(lib.es5.d.ts, --, --))
>T : Symbol(T, Decl(decoratorOnClassAccessor7.ts, 1, 22))

class A {
>A : Symbol(A, Decl(decoratorOnClassAccessor7.ts, 1, 127))

    @dec1 get x() { return 0; }
>dec1 : Symbol(dec1, Decl(decoratorOnClassAccessor7.ts, 0, 0))
>x : Symbol(A.x, Decl(decoratorOnClassAccessor7.ts, 3, 9), Decl(decoratorOnClassAccessor7.ts, 4, 31))

    set x(value: number) { }
>x : Symbol(A.x, Decl(decoratorOnClassAccessor7.ts, 3, 9), Decl(decoratorOnClassAccessor7.ts, 4, 31))
>value : Symbol(value, Decl(decoratorOnClassAccessor7.ts, 5, 10))
}

class B {
>B : Symbol(B, Decl(decoratorOnClassAccessor7.ts, 6, 1))

    get x() { return 0; }
>x : Symbol(B.x, Decl(decoratorOnClassAccessor7.ts, 8, 9), Decl(decoratorOnClassAccessor7.ts, 9, 25))

    @dec2 set x(value: number) { }
>dec2 : Symbol(dec2, Decl(decoratorOnClassAccessor7.ts, 0, 127))
>x : Symbol(B.x, Decl(decoratorOnClassAccessor7.ts, 8, 9), Decl(decoratorOnClassAccessor7.ts, 9, 25))
>value : Symbol(value, Decl(decoratorOnClassAccessor7.ts, 10, 16))
}

class C {
>C : Symbol(C, Decl(decoratorOnClassAccessor7.ts, 11, 1))

    @dec1 set x(value: number) { }
>dec1 : Symbol(dec1, Decl(decoratorOnClassAccessor7.ts, 0, 0))
>x : Symbol(C.x, Decl(decoratorOnClassAccessor7.ts, 13, 9), Decl(decoratorOnClassAccessor7.ts, 14, 34))
>value : Symbol(value, Decl(decoratorOnClassAccessor7.ts, 14, 16))

    get x() { return 0; }
>x : Symbol(C.x, Decl(decoratorOnClassAccessor7.ts, 13, 9), Decl(decoratorOnClassAccessor7.ts, 14, 34))
}

class D {
>D : Symbol(D, Decl(decoratorOnClassAccessor7.ts, 16, 1))

    set x(value: number) { }
>x : Symbol(D.x, Decl(decoratorOnClassAccessor7.ts, 18, 9), Decl(decoratorOnClassAccessor7.ts, 19, 28))
>value : Symbol(value, Decl(decoratorOnClassAccessor7.ts, 19, 10))

    @dec2 get x() { return 0; }
>dec2 : Symbol(dec2, Decl(decoratorOnClassAccessor7.ts, 0, 127))
>x : Symbol(D.x, Decl(decoratorOnClassAccessor7.ts, 18, 9), Decl(decoratorOnClassAccessor7.ts, 19, 28))
}

class E {
>E : Symbol(E, Decl(decoratorOnClassAccessor7.ts, 21, 1))

    @dec1 get x() { return 0; }
>dec1 : Symbol(dec1, Decl(decoratorOnClassAccessor7.ts, 0, 0))
>x : Symbol(E.x, Decl(decoratorOnClassAccessor7.ts, 23, 9), Decl(decoratorOnClassAccessor7.ts, 24, 31))

    @dec2 set x(value: number) { }
>dec2 : Symbol(dec2, Decl(decoratorOnClassAccessor7.ts, 0, 127))
>x : Symbol(E.x, Decl(decoratorOnClassAccessor7.ts, 23, 9), Decl(decoratorOnClassAccessor7.ts, 24, 31))
>value : Symbol(value, Decl(decoratorOnClassAccessor7.ts, 25, 16))
}

class F {
>F : Symbol(F, Decl(decoratorOnClassAccessor7.ts, 26, 1))

    @dec1 set x(value: number) { }
>dec1 : Symbol(dec1, Decl(decoratorOnClassAccessor7.ts, 0, 0))
>x : Symbol(F.x, Decl(decoratorOnClassAccessor7.ts, 28, 9), Decl(decoratorOnClassAccessor7.ts, 29, 34))
>value : Symbol(value, Decl(decoratorOnClassAccessor7.ts, 29, 16))

    @dec2 get x() { return 0; }
>dec2 : Symbol(dec2, Decl(decoratorOnClassAccessor7.ts, 0, 127))
>x : Symbol(F.x, Decl(decoratorOnClassAccessor7.ts, 28, 9), Decl(decoratorOnClassAccessor7.ts, 29, 34))
}
