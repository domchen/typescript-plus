=== tests/cases/compiler/defaultDeclarationEmitNamedCorrectly.ts ===
export interface Things<P, T> {
>Things : Things<P, T>
>P : P
>T : T

    p: P;
>p : P
>P : P

    t: T;
>t : T
>T : T
}
export function make<P, CTor>(x: { new (): CTor & {props: P} }): Things<P, CTor> {
>make : <P, CTor>(x: new () => CTor & { props: P; }) => Things<P, CTor>
>P : P
>CTor : CTor
>x : new () => CTor & { props: P; }
>CTor : CTor
>props : P
>P : P
>Things : Things<P, T>
>P : P
>CTor : CTor

    return null as any;
>null as any : any
>null : null
}

export interface Props {
>Props : Props
}

export default class MyComponent {
>MyComponent : MyComponent

    props: Props;
>props : Props
>Props : Props

    static create = make(MyComponent);
>create : Things<Props, MyComponent>
>make(MyComponent) : Things<Props, MyComponent>
>make : <P, CTor>(x: new () => CTor & { props: P; }) => Things<P, CTor>
>MyComponent : typeof MyComponent
}
